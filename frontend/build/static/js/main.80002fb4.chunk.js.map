{"version":3,"sources":["components/client/SociaVitalicia.js","components/lotties/OrangeCurvedLottie.js","components/lotties/TitleArrowLottie.js","store/initialState.js","store/store.js","reducers/reducer.js","components/lotties/ShortLinesLottie.js","components/client/NuestraGaleria.js","components/client/Navbar.js","components/lotties/CrossPatternLottie.js","components/lotties/CurvedLineLottie.js","components/client/Stats.js","components/client/Footer.js","components/client/Integrante.js","components/client/Quienes.js","components/formComponents/Input.js","components/admin/Alerta.js","components/lotties/DottedLineLottie.js","components/client/Form.js","components/client/Video.js","components/client/Home.js","components/client/Galeria.js","components/client/AmpliacionFoto.js","components/client/Ampliacion.js","components/admin/EditarContenido.js","components/admin/SubirAlbum.js","components/admin/posteos/posteos/SociaVitalicia.js","components/admin/posteos/posteos/Noticias.js","components/admin/posteos/posteos/ProximoPartido.js","components/admin/posteos/posteos/FinalPartido.js","components/admin/posteos/Imagen.js","components/formComponents/Switch.js","components/admin/posteos/form/SociaVitalicia.js","components/admin/CambiarContrasena.js","components/admin/Avatar.js","components/admin/NavbarAdmin.js","components/admin/posteos/form/Noticias.js","components/admin/posteos/form/ProximoPartido.js","components/admin/posteos/form/FinalPartido.js","components/admin/posteos/PosteosContenedor.js","components/admin/Login.js","components/admin/stories/form/Programa.js","components/admin/stories/IntegranteStory.js","components/admin/stories/form/FormIntegranteStory.js","components/admin/stories/form/FormFinalStory.js","components/admin/stories/StoriesContenedor.js","components/admin/Registro.js","components/admin/BtnMostrar.js","components/admin/BtnOcultar.js","components/admin/TablaUsuarios.js","components/admin/posteos/Popup.js","components/admin/GestionarUsuarios.js","components/admin/Tabla.js","components/admin/GestionarGaleria.js","components/admin/Sidebar.js","components/admin/Admin.js","components/Pagina404.js","components/Contenedor.js","App.js","reportWebVitals.js","index.js"],"names":["SociaVitalicia","titulo","n","invitado","programa","qs","require","useState","renderLottie","setRenderLottie","renderLottie2","setRenderLottie2","episodio","setEpisodio","auth_token","Buffer","from","toString","data","stringify","useEffect","fetch","method","body","headers","then","r","json","access_token","response","undefined","items","name","lastIndexOf","substring","substr","indexOf","replace","className","style","width","src","xmlns","height","viewBox","fill","fillRule","clipRule","d","fillOpacity","stroke","strokeLinecap","strokeLinejoin","id","strokeWidth","mask","href","target","onEnter","setTimeout","console","log","OrangeCurvedLottie","defaultOptions","loop","autoplay","animationData","rendererSettings","options","TitleArrowLottie","initialState","img","texto","equipos","equipo1","sociaVitalicia","noticias","proximoPartido","finalPartido","albums","deportes","integrantes","nombre","rol","chiste","foto","usuarioLogueado","url","fondos","usuarios","storyEquipo","integrante","darkMode","descripcion","store","createStore","state","action","type","payload","albumsNuevos","filter","album","_id","usuariosNuevos","usuario","fotoMain","fotoFondo","profesion","fecha","spCode","frase","eqLocal","eqVisitante","hora","lugar","fotoLocal","fotoVisitante","deporte","pLocal","pVisitante","index","findIndex","map","i","visible","index2","ShortLinesLottie","NuestraGaleria","props","background","to","pathname","Navbar","navbarBg","menu","setMenu","onClick","aboutProps","CrossPatternLottie","CurvedLineLottie","connect","programas","setProgramas","socias","setSocias","partidos","setPartidos","Footer","maskUnits","x","y","borderRadius","Integrante","avatar","backgroundSize","nombreCompleto","apodo","usuariosMostrar","setUsuariosMostrar","Input","label","defaultValue","opciones","fotoSubida","placeholder","contactForm","bgColor","filename","setFilename","fileCount","setFileCount","htmlFor","onChange","e","funcion","value","required","files","parseInt","op","multiple","length","Alerta","mensaje","tipo","duracion","setWidth","timer","clearTimeout","window","matchMedia","matches","left","opacity","zIndex","DottedLineLottie","setNombre","mail","setMail","setMensaje","mensajeAlerta","setMensajeAlerta","setVisible","tipoMensaje","setTipoMensaje","document","getElementById","disabled","srcSet","form","JSON","Video","sonido","setSonido","playing","volume","setNavbarBg","onscroll","quienes","offsetTop","pageYOffset","location","clickeadoId","scrollTo","top","behavior","onScroll","anios","setAnios","albumsFiltrados","setAlbumsFiltrados","setTitulo","setDeporte","anio","setAnio","aniosAux","existe","ii","sort","a","b","filtrar","convertirAString","aux","Date","dia","getDate","mes","getMonth","getFullYear","filtro","toLowerCase","includes","paddingTop","minHeight","recibido","fotos","source","AmpliacionFoto","fotoActual","posActual","setPosActual","cerrarFotoPadre","ArrowLeftIcon","color","alt","ArrowRightIcon","history","useHistory","fotoSeleccionada","setFotoSeleccionada","push","size","nuevosDatos","selectedFile","setSelectedFile","setFecha","crearAlbum","uploadImages","nuevoAlbum","dispatch","setPopupAlbum","file","formData","FormData","append","Axios","post","Promise","all","pTitulo","setPTitulo","wTitulo","querySelector","clientWidth","position","cx","cy","transform","x1","y1","x2","y2","bottom","right","fontSize","maxWidth","padding","margin","lineHeight","imgCancha","escudo","fontFamily","witdh","alignItems","minWidth","marginTop","preview","domtoimage","toJpeg","quality","dataUrl","overflow","download","link","createElement","click","Switch","toggle","last","getElementsByClassName","setAlturaForm","fondo","main","guardarDatos","reader","FileReader","readAsDataURL","onloadend","result","passViejo","setPassViejo","passNuevo","setPassNuevo","passNuevoRep","setPassNuevoRep","funcionPopup","funcionDropdown","pass","user","showDropdown","setShowDropdown","popupCambiar","setPopupCambiar","NavbarAdmin","setEquipos","equiposFiltrados","setEquiposFiltrados","deporteElegido","setDeporteElegido","eq","tipoPosteo","setTipoPosteo","alturaForm","maxHeight","setUser","setPass","tema1","setTema1","tema2","setTema2","tema3","setTema3","setDia","setHora","setUsuario","backgroundImage","backgroundPosition","backgroundRepeat","palabra","usuariosSelect","setUsuariosSelect","u","key","setDuracion","momento","setMomento","setEqLocal","setEqVisitante","puntajeLocal","setPuntajeLocal","puntajeVisitante","setPuntajeVisitante","imgPartido","setImgPartido","equipo","video","setVideo","fotoSinFondo","setNombreCompleto","setRol","setApodo","setFondo","base64img","setBase64img","setAvatar","borrarFondo","imgUrl","resolve","reject","removeBackgroundFromImageUrl","apiKey","catch","err","cerrarPopupRegistro","imagenes","classList","remove","add","userNuevo","resp","BtnMostrar","dataset","pointerEvents","BtnOcultar","mostrarUsuario","usuarioModificar","ocultarUsuario","scope","marginRight","abrirPopup","cursor","setPopupRegistro","Popup","nombreBorrar","cerrarPopup","borrarAlbum","idBorrar","popup","setPopup","popupRegistro","setIdBorrar","setNombreBorrar","Tabla","popupAlbum","albumElegidoId","setAlbumElegidoId","albumElegidoNombre","setAlbumElegidoNombre","Sidebar","paginaSeleccionada","links","elegido","pagina","Pagina404","exact","path","component","Home","Galeria","Ampliacion","Admin","Login","EditarContenido","SubirAlbum","PosteosContenedor","Registro","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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MA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,uNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,8MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,uNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,uNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,uNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,wNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,yNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,uNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,sNACR,sBAAMA,EAAE,qNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,oNACR,sBAAMA,EAAE,8MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6MACR,sBAAMA,EAAE,6NACR,sBAAMA,EAAE,uNACR,sBAAMA,EAAE,wNACR,sBAAMA,EAAE,wNACR,sBAAMA,EAAE,wNACR,sBAAMA,EAAE,uNACR,sBAAMA,EAAE,wNACR,sBAAMA,EAAE,2NAEZ,sBAAMA,EAAE,uNAAuNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC3Q,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,uNAAuNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC3Q,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,qNAAqNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACzQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,4MAA4ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAChQ,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,qNAAqNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACzQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,qNAAqNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACzQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,qNAAqNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACzQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,sNAAsNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC1Q,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,uNAAuNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC3Q,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,qNAAqNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACzQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,oNAAoNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACxQ,sBAAMP,EAAE,mNAAmNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACvQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,kNAAkNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACtQ,sBAAMP,EAAE,4MAA4ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAChQ,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2MAA2ME,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/P,sBAAMP,EAAE,2NAA2NE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC/Q,sBAAMP,EAAE,qNAAqNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACzQ,sBAAMP,EAAE,sNAAsNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC1Q,sBAAMP,EAAE,sNAAsNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC1Q,sBAAMP,EAAE,sNAAsNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC1Q,sBAAMP,EAAE,qNAAqNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCACzQ,sBAAMP,EAAE,sNAAsNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,kCAC1Q,sBAAMP,EAAE,sNAAsNE,OAAO,UAAUI,YAAY,UAAUC,KAAK,2CAOtR,qBAAKjB,UAAU,8CAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAIA,UAAU,kGAAd,8BACA,sBAAKA,UAAU,oDAAoDC,MAAO,CAAEC,MAAO,SAAnF,cAAgGhC,GAAgB,cAAC,IAAD,UAEhH,mBAAG8B,UAAU,gEAAb,yJAGA,mBAAGkB,KAAK,2EAA2EC,OAAO,SAASnB,UAAU,6HAA7G,mCACA,cAAC,IAAD,CAAUoB,QAAS,kBAAMjD,GAAgB,MACzC,cAAC,IAAD,CAAUiD,QAAS,kBACfC,YAAW,WACPC,QAAQC,IAAI,UACZlD,GAAiB,KAClB,qB,yzMCnX/B,0CAqBemD,IAjBY,WAEvB,IAAMC,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,IAItB,OACI,8BACI,cAAC,IAAD,CAAQC,QAASL,Q,8piCChB7B,0CAsBeM,IAlBU,WAErB,IAAMN,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,IAKtB,OACI,8BACI,cAAC,IAAD,CAAQC,QAASL,Q,yLChBhBO,EAAe,CACxBC,IAAK,GACLC,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,eAAgB,CAAE,UAAa,GAAI,SAAY,GAAI,OAAU,GAAI,UAAa,GAAI,MAAS,GAAI,OAAU,GAAI,MAAS,GAAI,UAAY,GACtIC,SAAU,CAAE,KAAQ,GAAI,OAAU,GAAI,UAAY,GAClDC,eAAgB,CAAE,QAAW,GAAI,YAAe,GAAI,MAAS,GAAI,KAAQ,GAAI,MAAS,GAAI,UAAa,GAAI,cAAiB,GAAI,QAAW,GAAI,UAAY,GAC3JC,aAAc,CAAE,QAAW,GAAI,YAAe,GAAI,OAAU,GAAI,WAAc,GAAI,KAAQ,GAAI,QAAW,GAAI,UAAY,GACzHC,OAAQ,GACRC,SAAU,GACVC,YAAa,CACT,CAAEC,OAAQ,iBAAkBC,IAAK,uBAAwBC,OAAQ,8BAA4BC,KAAM,8FACnG,CAAEH,OAAQ,kBAAmBC,IAAK,eAAaC,OAAQ,gBAAiBC,KAAM,gGAC9E,CAAEH,OAAQ,iBAAkBC,IAAK,uBAAwBC,OAAQ,gBAAiBC,KAAM,gGACxF,CAAEH,OAAQ,mBAAoBC,IAAK,uBAAwBC,OAAQ,2BAAyBC,KAAM,gGAClG,CAAEH,OAAQ,kBAAmBC,IAAK,uBAAwBC,OAAQ,0BAA2BC,KAAM,iGAEvGC,gBAAiB,GACjBC,IAAK,wBACLC,OAAQ,CACJ,CAAEnC,GAAI,EAAGZ,IAAK,mGACd,CAAEY,GAAI,EAAGZ,IAAK,mGACd,CAAEY,GAAI,EAAGZ,IAAK,mGACd,CAAEY,GAAI,EAAGZ,IAAK,mGACd,CAAEY,GAAI,EAAGZ,IAAK,2GAElBgD,SAAU,GACVC,YAAa,CAAEC,WAAY,GAAIC,UAAU,EAAOC,YAAa,KC1BpDC,EAAQC,aCAE,WAAmC,IAAlCC,EAAiC,uDAAzB1B,EAAc2B,EAAW,uCAErD,OADArC,QAAQC,IAAImC,EAAOC,GACXA,EAAOC,MAkFX,QACI,OAAOF,EAhFX,IAAK,iBACD,OAAO,2BAAKA,GAAZ,IAAmBzB,IAAK0B,EAAOE,QAAQ5B,IAAKC,MAAOyB,EAAOE,QAAQ3B,QAEtE,IAAK,iBACD,OAAO,2BAAKwB,GAAZ,IAAmBvB,QAASwB,EAAOE,UAEvC,IAAK,gBACD,OAAO,2BAAKH,GAAZ,IAAmBjB,OAAQkB,EAAOE,UAEtC,IAAK,kBACD,OAAO,2BAAKH,GAAZ,IAAmBhB,SAAUiB,EAAOE,UAExC,IAAK,gBACD,OAAO,2BAAKH,GAAZ,IAAmBjB,OAAO,GAAD,mBAAMiB,EAAMjB,QAAZ,CAAoBkB,EAAOE,YAExD,IAAK,kBACD,OAAO,2BAAKH,GAAZ,IAAmBP,SAAS,GAAD,mBAAMO,EAAMP,UAAZ,CAAsBQ,EAAOE,YAE5D,IAAK,iBACD,IAAIC,EAAeJ,EAAMjB,OAAOsB,QAAO,SAAAC,GAAK,OAAIA,EAAMC,MAAQN,EAAOE,QAAQI,OAC7E,OAAO,2BAAKP,GAAZ,IAAmBjB,OAAQqB,IAE/B,IAAK,mBACD,IAAII,EAAiBR,EAAMP,SAASY,QAAO,SAAAI,GAAO,OAAIA,EAAQF,MAAQN,EAAOE,QAAQI,OACrF,OAAO,2BAAKP,GAAZ,IAAmBP,SAAUe,IAEjC,IAAK,mBACD,OAAO,2BAAKR,GAAZ,IAAmBtB,QAASuB,EAAOE,UAEvC,IAAK,kBACD,OAAO,2BAAKH,GAAZ,IAAmBrB,eAAgB,CAAE,SAAYsB,EAAOE,QAAQO,SAAU,UAAaT,EAAOE,QAAQQ,UAAW,OAAUV,EAAOE,QAAQjB,OAAQ,UAAae,EAAOE,QAAQS,UAAW,MAASX,EAAOE,QAAQU,MAAO,OAAUZ,EAAOE,QAAQW,OAAQ,MAASb,EAAOE,QAAQY,MAAO,SAAYd,EAAOE,QAAQP,YACvT,IAAK,WACD,OAAO,2BAAKI,GAAZ,IAAmBpB,SAAU,CAAE,KAAQqB,EAAOE,QAAQd,KAAM,OAAUY,EAAOE,QAAQlG,OAAQ,SAAYgG,EAAOE,QAAQP,YAG5H,IAAK,kBACD,OAAO,2BAAKI,GAAZ,IAAmBnB,eAAgB,CAAE,QAAWoB,EAAOE,QAAQa,QAAS,YAAef,EAAOE,QAAQc,YAAa,MAAShB,EAAOE,QAAQU,MAAO,KAAQZ,EAAOE,QAAQe,KAAM,MAASjB,EAAOE,QAAQgB,MAAO,UAAalB,EAAOE,QAAQiB,UAAW,cAAiBnB,EAAOE,QAAQkB,cAAe,QAAWpB,EAAOE,QAAQmB,QAAS,SAAYrB,EAAOE,QAAQP,YAEtW,IAAK,gBACD,OAAO,2BAAKI,GAAZ,IAAmBlB,aAAc,CAAE,QAAWmB,EAAOE,QAAQa,QAAS,YAAef,EAAOE,QAAQc,YAAa,OAAUhB,EAAOE,QAAQoB,OAAQ,WAActB,EAAOE,QAAQqB,WAAY,KAAQvB,EAAOE,QAAQd,KAAM,QAAWY,EAAOE,QAAQmB,QAAS,SAAYrB,EAAOE,QAAQP,YAE1R,IAAK,eACD,OAAO,2BAAKI,GAAZ,IAAmBN,YAAa,CAAE,WAAcO,EAAOE,QAAQR,WAAY,SAAYM,EAAOE,QAAQP,SAAU,YAAeK,EAAOE,QAAQN,eAElJ,IAAK,kBAGL,IAAK,qBACD,OAAO,2BAAKG,GAAZ,IAAmBV,gBAAiBW,EAAOE,UAE/C,IAAK,kBACD,IAAIsB,EAAQzB,EAAMP,SAASiC,WAAU,SAACjB,GAAD,OAAaA,EAAQF,MAAQN,EAAOE,QAAQI,OACjF,OAAO,2BACAP,GADP,IAEIP,SAAUO,EAAMP,SAASkC,KACrB,SAAClB,EAASmB,GAAV,OAAgBA,IAAMH,EAAN,2BAAmBhB,GAAnB,IAA4BoB,SAAS,IAC/CpB,OAIlB,IAAK,kBACD,IAAIqB,EAAS9B,EAAMP,SAASiC,WAAU,SAACjB,GAAD,OAAaA,EAAQF,MAAQN,EAAOE,QAAQI,OAClF,OAAO,2BACAP,GADP,IAEIP,SAAUO,EAAMP,SAASkC,KACrB,SAAClB,EAASmB,GAAV,OAAgBA,IAAME,EAAN,2BAAoBrB,GAApB,IAA6BoB,SAAS,IAChDpB,OAOlB,IAAK,kBACD,OAAO,2BAAKT,GAAZ,IAAmBP,SAAUQ,EAAOE,UAExC,IAAK,gBACD,OAAO,2BAAKH,GAAZ,IAAmBV,gBAAiB,S,wEChEjCyC,EAjBU,WAErB,IAAMhE,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,IAItB,OACI,8BACI,cAAC,IAAD,CAAQC,QAASL,OCuSdiE,EAjTQ,SAACC,GAGpB,IAAIrH,EACAV,EAIJ,EAAsCK,oBAAS,GAA/C,mBAAKC,EAAL,KAAmBC,EAAnB,KACA,EAAwCF,oBAAS,GAAjD,mBAAKG,EAAL,KAAoBC,EAApB,KAYA,YAVuBmB,IAAnBmG,EAAMrH,WAENV,GADAU,EAAWqH,EAAMrH,SAASmB,MAAM,GAAGC,MACtBC,YAAY,KACdrB,EAASsB,UAAUhC,EAAI,GACvBU,EAASuB,OAAO,EAAGvB,EAASwB,QAAQ,MAC3BC,QAAQ,KAAM,MAMlC,qBAAKC,UAAU,4BAAf,SACI,sBAAKA,UAAU,+CAAf,UACI,qBAAKA,UAAU,yCAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAIA,UAAU,wDAAd,+BACA,sBAAKA,UAAU,qDAAqDC,MAAO,CAAEC,MAAO,QAASG,OAAQ,QAArG,cAAiHnC,GAAgB,cAAC6D,EAAA,EAAD,UAEjI,qBAAK/B,UAAU,2CAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKC,MAAO,CAAE2F,WAAY,kHAAoH5F,UAAU,gDAGxJ,qBAAKA,UAAU,6BAA6BC,MAAO,CAAE2F,WAAY,oHAEjE,sBAAK5F,UAAU,8BAA8BI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAApI,UAEI,sBAAMG,EAAE,0MAA0MH,KAAK,YACvN,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,0MAA0MH,KAAK,YACvN,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,yLAAyLH,KAAK,YACtM,sBAAMG,EAAE,kLAAkLH,KAAK,YAC/L,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,mLAAmLH,KAAK,YAChM,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,mNAAmNH,KAAK,YAChO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oMAAoMH,KAAK,YACjN,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,mNAAmNH,KAAK,YAChO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,2NAA2NH,KAAK,YACxO,sBAAMG,EAAE,mNAAmNH,KAAK,YAChO,sBAAMG,EAAE,sNAAsNH,KAAK,YACnO,sBAAMG,EAAE,sNAAsNH,KAAK,YACnO,sBAAMG,EAAE,sNAAsNH,KAAK,YACnO,sBAAMG,EAAE,wNAAwNH,KAAK,YACrO,sBAAMG,EAAE,wNAAwNH,KAAK,YACrO,sBAAMG,EAAE,wNAAwNH,KAAK,eAEzO,qBAAKP,UAAU,6BAA6BI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,KAAKC,QAAQ,aAAaC,KAAK,OAAjI,SACI,sBAAMG,EAAE,0UAA0UE,OAAO,UAAUI,YAAY,mBAI3X,mBAAGhB,UAAU,uCAAb,iIAnIJ,IAqIS,cAAC,IAAD,CAAUoB,QAAS,kBAAMjD,GAAgB,MAE9C,cAAC,IAAD,CAAS0H,GAAI,CAAEC,SAAU,YAAc9F,UAAU,6HAAjD,mCAKR,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,mCAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKC,MAAO,CAAE2F,WAAY,kHAAoH5F,UAAU,kFAGxJ,qBAAKA,UAAU,2FAA2FC,MAAO,CAAE2F,WAAY,oHAE/H,sBAAK5F,UAAU,uCAAuCI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAA7I,UAEI,sBAAMG,EAAE,0MAA0MH,KAAK,YACvN,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,0MAA0MH,KAAK,YACvN,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,yLAAyLH,KAAK,YACtM,sBAAMG,EAAE,kLAAkLH,KAAK,YAC/L,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,mLAAmLH,KAAK,YAChM,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,mNAAmNH,KAAK,YAChO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oMAAoMH,KAAK,YACjN,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,mNAAmNH,KAAK,YAChO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,2NAA2NH,KAAK,YACxO,sBAAMG,EAAE,mNAAmNH,KAAK,YAChO,sBAAMG,EAAE,sNAAsNH,KAAK,YACnO,sBAAMG,EAAE,sNAAsNH,KAAK,YACnO,sBAAMG,EAAE,sNAAsNH,KAAK,YACnO,sBAAMG,EAAE,wNAAwNH,KAAK,YACrO,sBAAMG,EAAE,wNAAwNH,KAAK,YACrO,sBAAMG,EAAE,wNAAwNH,KAAK,eAGzO,qBAAKP,UAAU,yCAAyCC,MAAO,CAAEC,MAAO,SAAxE,SACK9B,GAAiB,cAAC,EAAD,WAQ9B,cAAC,IAAD,CAAUgD,QAAS,kBAAM/C,GAAiB,eCrP/C0H,EAxDA,SAACJ,GACZ,IAAIK,EAAWL,EAAMK,SACrB,EAAwB/H,mBAAS,WAAjC,mBAAOgI,EAAP,KAAaC,EAAb,KAQA,OACI,sBAAKlG,UAAwB,UAAbgG,EAAuB,sCAAwC,6BAA/E,UACI,sBAAKhG,UAAU,mEAAf,UACI,sBAAKA,UAAU,qDAAf,UACI,cAAC,IAAD,CAAS6F,GAAI,CAAEC,SAAU,KAAzB,SAAgC,sBAAK1F,MAAM,6BAA6BF,MAAM,KAAKG,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAxF,UAC5B,sBAAMG,EAAE,gNAAgNE,OAAO,UAAUI,YAAY,YACrP,sBAAMR,SAAS,UAAUC,SAAS,UAAUC,EAAE,isBAAisBH,KAAK,YACpvB,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,+/CAA+/CH,KAAK,YACljD,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,+UAA+UH,KAAK,iBAGtY,qBAAKP,UAAU,YAAYmG,QAlBxB,WAEXD,EADS,YAATD,EACQ,UAEA,YAcA,SACe,YAATA,EACE,qBAAK7F,MAAM,6BAA6BJ,UAAU,kDAAkDO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA3I,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAY,IAAIN,EAAE,6BAEzE,qBAAKN,MAAM,6BAA6BJ,UAAU,mDAAmDO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,GAA5I,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,gCAMrF,sBAAKV,UAAU,kBAAf,UACI,cAAC,IAAD,CAAS6F,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,YAAef,UAAU,kEAAzE,8BACA,cAAC,IAAD,CAAS6F,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,qBAAwBf,UAAU,kEAAlF,+BACA,cAAC,IAAD,CAAS6F,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,YAAef,UAAU,kEAAzE,gCACA,cAAC,IAAD,CAAS6F,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,WAAcf,UAAU,6HAAxE,0BAKG,YAATiG,EACE,GACA,sBAAKjG,UAAU,qFAAf,UACI,cAAC,IAAD,CAAS6F,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,YAAef,UAAU,kEAAkEmG,QAAS,WAAQD,EAAQ,YAApK,8BACA,cAAC,IAAD,CAASL,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,qBAAwBf,UAAU,kEAAkEmG,QAAS,WAAQD,EAAQ,YAA7K,+BACA,cAAC,IAAD,CAASL,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,YAAef,UAAU,kEAAkEmG,QAAS,WAAQD,EAAQ,YAApK,gCACA,cAAC,IAAD,CAASL,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,WAAcf,UAAU,6HAA6HmG,QAAS,WAAQD,EAAQ,YAA9N,2B,SC9BLG,EAjBY,WAEvB,IAAM5E,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,IAItB,OACI,8BACI,cAAC,IAAD,CAAQC,QAASL,O,SCKd6E,EAjBU,WAErB,IAAM7E,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,IAItB,OACI,8BACI,cAAC,IAAD,CAAQC,QAASL,OCiDd8E,eALS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,OAIAsD,EA1DD,SAACZ,GAEX,IAAM1C,EAAQ0C,EAAR1C,IAEN,EAAsChF,oBAAS,GAA/C,mBAAKC,EAAL,KAAmBC,EAAnB,KACA,EAAwCF,oBAAS,GAAjD,mBAAKG,EAAL,KAAoBC,EAApB,KACA,EAAkCJ,qBAAlC,mBAAOuI,EAAP,KAAkBC,EAAlB,KACA,EAA4BxI,qBAA5B,mBAAOyI,EAAP,KAAeC,EAAf,KACA,EAAgC1I,qBAAhC,mBAAO2I,EAAP,KAAiBC,EAAjB,KAYA,OAVA9H,MAAM,GAAD,OAAIkE,EAAJ,eAAsB,CACvBjE,OAAQ,QACTG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAC,GAEFqH,EAAarH,EAAE,GAAGoH,WAClBG,EAAUvH,EAAE,GAAGsH,QACfG,EAAYzH,EAAE,GAAGwH,aAIrB,sBAAK5G,UAAU,2CAAf,UAEI,sBAAKA,UAAU,2BAA2BC,MAAO,CAAEC,MAAO,QAA1D,cAAsEhC,GAAgB,cAAC,EAAD,OAEtF,qBAAK8B,UAAU,8CAA8CC,MAAO,CAAEC,MAAO,QAA7E,SAAwF9B,GAAiB,cAAC,EAAD,MAIzG,cAAC,IAAD,CAAUgD,QAAS,kBAAMjD,GAAgB,MACzC,sBAAK6B,UAAU,yGAAf,UACI,sBAAKA,UAAU,+CAAf,UACI,oBAAIA,UAAU,8CAAd,SAA6DwG,IAC7D,mBAAGxG,UAAU,qGAAb,kCAEJ,sBAAKA,UAAU,+BAAf,UACI,oBAAIA,UAAU,8CAAd,SAA6D0G,IAC7D,mBAAG1G,UAAU,qGAAb,kCAEJ,sBAAKA,UAAU,+BAAf,UACI,oBAAIA,UAAU,8CAAd,SAA6D4G,IAC7D,mBAAG5G,UAAU,qGAAb,sCAOR,cAAC,IAAD,CAAUoB,QAAS,kBAAM/C,GAAiB,YCTvCyI,EA3CA,WACX,OACI,yBAAQ9G,UAAU,2EAAlB,UACI,8BACI,sBAAKA,UAAU,UAAUI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,KAAKC,QAAQ,aAAaC,KAAK,OAA9G,UACI,sBAAMG,EAAE,+vNAA+vNH,KAAK,UAC5wN,sBAAMG,EAAE,iNAAiNE,OAAO,QAAQI,YAAY,YACpP,sBAAMR,SAAS,UAAUC,SAAS,UAAUC,EAAE,+rBAA+rBH,KAAK,UAClvB,uBAAMQ,GAAG,2BAA2BgG,UAAU,iBAAiBC,EAAE,UAAUC,EAAE,WAAW/G,MAAM,KAAKG,OAAO,KAAKE,KAAK,QAApH,UACI,sBAAMA,KAAK,QAAQyG,EAAE,UAAUC,EAAE,WAAW/G,MAAM,KAAKG,OAAO,OAC9D,sBAAMG,SAAS,UAAUC,SAAS,UAAUC,EAAE,igDAElD,sBAAMF,SAAS,UAAUC,SAAS,UAAUC,EAAE,4/CAA4/CH,KAAK,UAC/iD,sBAAMG,EAAE,4gOAA4gOH,KAAK,QAAQU,KAAK,mCACtiO,sBAAMP,EAAE,6TAA6TE,OAAO,UAAUI,YAAY,YAClW,sBAAMR,SAAS,UAAUC,SAAS,UAAUC,EAAE,gVAAgVH,KAAK,eAE3Y,sBAAKP,UAAU,kFAAf,UACI,cAAC,IAAD,CAASA,UAAU,2EAA2E6F,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,YAArI,8BACA,cAAC,IAAD,CAASf,UAAU,2EAA2E6F,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,qBAArI,+BACA,cAAC,IAAD,CAASf,UAAU,2EAA2E6F,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,YAArI,gCACA,cAAC,IAAD,CAASf,UAAU,2EAA2E6F,GAAI,CAAEC,SAAU,IAAKM,WAAY,CAAErF,GAAI,WAArI,uBAIJ,sBAAKf,UAAU,oCAAf,UACI,mBAAGkB,KAAK,kDAAkDC,OAAO,SAASlB,MAAO,CAAEC,MAAO,OAAQG,OAAQ,OAAQ6G,aAAc,SAAWlH,UAAU,mGAArJ,SACI,qBAAKI,MAAM,6BAA6BF,MAAM,KAAKG,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAxF,SACI,sBAAMG,EAAE,qjDAAqjDH,KAAK,cAE1kD,mBAAGW,KAAK,8BAA8BC,OAAO,SAASlB,MAAO,CAAEC,MAAO,OAAQG,OAAQ,OAAQ6G,aAAc,SAAWlH,UAAU,mGAAjI,SACI,qBAAKI,MAAM,6BAA6BF,MAAM,KAAKG,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAxF,SACI,sBAAMG,EAAE,+/BAA+/BH,KAAK,cAEphC,mBAAGW,KAAK,2EAA2EC,OAAO,SAASlB,MAAO,CAAEC,MAAO,OAAQG,OAAQ,OAAQ6G,aAAc,SAAWlH,UAAU,mGAA9K,SACI,qBAAKI,MAAM,6BAA6BF,MAAM,KAAKG,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAxF,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,m5CAAm5CH,KAAK,qBCvB98C4G,EAbG,SAACxB,GAChB,IAAIxB,EAAUwB,EAAMxB,QACpB,OACI,sBAAuBnE,UAAU,qDAAjC,UACI,qBAAKC,MAAO,CAAEiH,aAAc,OAAQhH,MAAO,QAASG,OAAQ,QAASuF,WAAW,OAAD,OAASzB,EAAQiD,OAAjB,yBAAgDC,eAAgB,eAAiBrH,UAAU,YAC1K,mBAAGA,UAAU,+CAAb,SAA6DmE,EAAQmD,iBACrE,mBAAGtH,UAAU,kCAAb,SAAgDmE,EAAQtB,MACxD,mBAAG7C,UAAU,+BAAb,SAA6CmE,EAAQoD,UAJ/CpD,EAAQF,MC6CXsC,eAJS,SAAC7C,GAAD,MAAY,CAChCP,SAAUO,EAAMP,YAGLoD,EA7CQ,SAACZ,GAEpB,IAAKxC,EAAYwC,EAAZxC,SACL,EAA8ClF,mBAAS,IAAvD,mBAAOuJ,EAAP,KAAwBC,EAAxB,KACA,EAAsCxJ,oBAAS,GAA/C,mBAAKC,EAAL,KAAmBC,EAAnB,KAOA,OALAW,qBAAU,WACP2I,EAAmBtE,EAASY,QAAO,SAAAI,GAAO,OAAoB,IAAlBA,EAAQoB,cACpD,CAACpC,IAIA,qBAAKnD,UAAU,qCAAf,SACI,sBAAKA,UAAU,gDAAf,UACI,qBAAKA,UAAU,uCAAf,SAGI,qBAAIA,UAAU,0DAAd,kCAEI,sBAAKA,UAAU,+DAA+DC,MAAO,CAAEC,MAAO,SAA9F,cAA2GhC,GAAgB,cAAC6D,EAAA,EAAD,YAInI,sBAAK/B,UAAU,qEAAf,UAEI,oBAAGA,UAAU,4BAAb,6GACiG,8GADjG,wIAKA,cAAC,IAAD,CAAUoB,QAAS,kBAAMjD,GAAgB,SAE7C,qBAAK6B,UAAU,kFAAf,SACKwH,EAAgBnC,KAAI,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAAiCA,QAASA,GAAzBA,EAAQiD,qBC2E9DM,EAhHD,SAAC/B,GAEX,IAAMgC,EAAuFhC,EAAvFgC,MAAO/D,EAAgF+B,EAAhF/B,KAAMgE,EAA0EjC,EAA1EiC,aAA0BC,GAAgDlC,EAA5DmC,WAA4DnC,EAAhDkC,UAAUE,EAAsCpC,EAAtCoC,YAAaC,EAAyBrC,EAAzBqC,YACpE,GAD6FrC,EAAZsC,QACjDhK,mBAAS,KAAzC,mBAAOiK,EAAP,KAAiBC,EAAjB,KACA,EAAkClK,mBAAS,GAA3C,mBAAOmK,EAAP,KAAkBC,EAAlB,KAIA,OAEI,qBAAKrI,UAAU,yBAAf,SACe,SAAT4D,QAAmCpE,IAAhBwI,GAAsC,SAATpE,GAA4B,aAATA,EACjE,sBAAK5D,UAAU,+IAAf,UACI,uBAAOsI,QAASX,EAAO3H,UAAU,wKAAjC,SAA0M2H,IAC1M,uBAAO/D,KAAMA,EAAM2E,SAAU,SAACC,GAAQ7C,EAAM8C,QAAQD,EAAErH,OAAOuH,QAAUC,UAAQ,EAACjJ,KAAMiI,EAAO5G,GAAI4G,EAAO3H,UAAU,4JAE5G,aAAT4D,QAAuCpE,IAAhBwI,EACpB,sBAAKhI,UAAU,+IAAf,UACI,uBAAOsI,QAASX,EAAO3H,UAAU,wKAAjC,SAA0M2H,IAC1M,0BAAUY,SAAU,SAACC,GAAQ7C,EAAM8C,QAAQD,EAAErH,OAAOuH,QAAUhJ,KAAMiI,EAAO5G,GAAI4G,EAAO3H,UAAU,wKAE1F,SAAT4D,EAEG,qBAAK5D,UAAU,2HAAf,SACI,sBAAKA,UAAU,8CAAf,UACI,qBAAKI,MAAM,6BAA6BJ,UAAU,4DAA4DO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAArJ,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAY,IAAIN,EAAE,qEAEzE,sBAAKV,UAAU,oCAAf,UACI,qBAAKA,UAAU,0CAAf,SACI,wBAAOA,UAAU,mJAAjB,UACI,+BAAO2H,IACP,uBAAO/D,KAAK,OAAO5D,UAAU,UAAUuI,SAAU,SAACC,GAC9C7C,EAAM8C,QAAQD,GACdL,EAAYK,EAAErH,OAAOyH,MAAM,GAAGlJ,cAI1C,mBAAGM,UAAU,0CAAb,SACKkI,YAMP,WAATtE,EACG,sBAAK5D,UAAU,+IAAf,UACI,uBAAOsI,QAASX,EAAO3H,UAAU,wKAAjC,SAA0M2H,IAC1M,uBAAOC,aAAcA,EAAchE,KAAMA,EAAM2E,SAAU,SAACC,GAAQ7C,EAAM8C,QAAQI,SAASL,EAAErH,OAAOuH,SAAWC,UAAQ,EAACjJ,KAAMiI,EAAO5G,GAAI4G,EAAO3H,UAAU,+JAElJ,WAAT4D,EACG,sBAAK5D,UAAU,kIAAf,UACI,uBAAOA,UAAU,8FAAjB,SAAgH2H,IAChH,yBAAQY,SAAU,SAAAC,GAAC,OAAI7C,EAAM8C,QAAQD,EAAErH,OAAOuH,QAAQ1I,UAAU,0JAAhE,eACsBR,IAAjBoI,EACG,wBAAQc,MAAM,QAAd,SAAwBd,IAAyB,GACpDC,EAASxC,KAAI,SAAAyD,GAAE,OAAI,wBAAqBJ,MAAOI,EAAG7E,IAA/B,SAAqC6E,EAAGlG,QAA3BkG,EAAG7E,cAGlC,mBAATL,EAEG,qBAAK5D,UAAU,2HAAf,SACI,sBAAKA,UAAU,8CAAf,UACI,qBAAKI,MAAM,6BAA6BJ,UAAU,4DAA4DO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAArJ,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAY,IAAIN,EAAE,qEAEzE,sBAAKV,UAAU,oCAAf,UACI,qBAAKA,UAAU,0CAAf,SACI,wBAAOA,UAAU,gJAAjB,UACI,+BAAO2H,IACP,uBAAOoB,UAAQ,EAACnF,KAAK,OAAO5D,UAAU,UAAUuI,SAAU,SAACC,GACvD7C,EAAM8C,QAAN,YAAkBD,EAAErH,OAAOyH,QAC3BP,EAAaG,EAAErH,OAAOyH,MAAMI,gBAIxB,IAAdZ,EACE,mBAAGpI,UAAU,0CAAb,mBACQoI,EADR,kBAEO,WAKb,WAATxE,EACG,sBAAK5D,UAAU,+IAAf,UACI,qBAAKA,UAAU,uEAAf,SAEI,qBAAKI,MAAM,6BAA6BJ,UAAU,kEAAkEO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA3J,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAY,IAAIN,EAAE,oDAI7E,uBAAOqH,YAAaJ,EAAO/D,KAAK,OAAO2E,SAAU,SAACC,GAAQ7C,EAAM8C,QAAQD,EAAErH,OAAOuH,QAAUC,UAAQ,EAACjJ,KAAMiI,EAAO5G,GAAI4G,EAAO3H,UAAU,sJAEvH,IAAhBgI,GAAiC,aAATpE,EACvB,sBAAK5D,UAAU,+IAAf,UACI,uBAAOsI,QAASX,EAAO3H,UAAU,wKAAjC,SAA0M2H,IAC1M,uBAAO/D,KAAMA,EAAM2E,SAAU,SAACC,GAAQ7C,EAAM8C,QAAQD,EAAErH,OAAOuH,QAAUX,YAAapC,EAAMoC,YAAaY,UAAQ,EAACjJ,KAAMiI,EAAO5G,GAAI4G,EAAO3H,UAAU,0JACnI,aAAT4D,IAAuC,IAAhBoE,EAC7B,sBAAKhI,UAAU,+IAAf,UACI,uBAAOsI,QAASX,EAAO3H,UAAU,wKAAjC,SAA0M2H,IAC1M,0BAAUI,YAAaA,EAAaQ,SAAU,SAACC,GAAQ7C,EAAM8C,QAAQD,EAAErH,OAAOuH,QAAUhJ,KAAMiI,EAAO5G,GAAI4G,EAAO3H,UAAU,qKACrH,MC1B1CiJ,EA5EA,SAACtD,GAEZ,IAAMuD,EAAqCvD,EAArCuD,QAASC,EAA4BxD,EAA5BwD,KAAM5D,EAAsBI,EAAtBJ,QAAS6D,EAAazD,EAAbyD,SAE9B,EAA0BnL,mBAAS,KAAnC,mBAAOiC,EAAP,KAAcmJ,EAAd,KAmBA,OAlBAvK,qBAAU,WAEN,IAAMwK,EAAQjI,YAAW,WACrBsE,EAAM8C,QAAQ,KACfW,GACH,OAAO,kBAAMG,aAAaD,MAE3B,CAAC/D,IAEJzG,qBAAU,WACE0K,OAAOC,WAAW,sBACpBC,QACFL,EAAS,KAETA,EAAS,OAEd,IAGC,qBAAKrJ,UAAU,uCAAuCC,MAAO,CAAEC,MAAM,GAAD,OAAKA,EAAL,MAAgByJ,KAAK,cAAD,OAAgBzJ,EAAQ,EAAxB,OAAgC0J,QAAQ,GAAD,OAAKrE,GAAWsE,OAAQ,SAAvJ,SACe,UAATV,EACE,sBAAKnJ,UAAU,iFAAf,UAEI,qBAAKI,MAAM,6BAA6BJ,UAAU,qBAAqBO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA9G,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,wDAEzE,qBAAKV,UAAU,cAAf,SACI,mBAAGA,UAAU,kCAAb,SAAgDkJ,MAEpD,wBAAQ/C,QAAS,kBAAMR,EAAM8C,QAAQ,IAAIzI,UAAU,oBAAnD,SAAuE,qBAAKI,MAAM,6BAA6BJ,UAAU,qBAAqBO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA9G,SACnE,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,gCAInE,YAATyI,EACG,sBAAKnJ,UAAU,kFAAf,UAEI,qBAAKI,MAAM,6BAA6BJ,UAAU,qBAAqBO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA9G,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,4FAEzE,qBAAKV,UAAU,cAAf,SACI,mBAAGA,UAAU,kCAAb,SAAgDkJ,MAEpD,wBAAQ/C,QAAS,kBAAMR,EAAM8C,QAAQ,IAAIzI,UAAU,oBAAnD,SAAuE,qBAAKI,MAAM,6BAA6BJ,UAAU,qBAAqBO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA9G,SACnE,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,gCAInE,UAATyI,EACG,sBAAKnJ,UAAU,mFAAf,UAEI,qBAAKI,MAAM,6BAA6BJ,UAAU,qBAAqBO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA9G,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,oDAEzE,qBAAKV,UAAU,cAAf,SACI,mBAAGA,UAAU,kCAAb,SAAgDkJ,MAEpD,wBAAQ/C,QAAS,kBAAMR,EAAM8C,QAAQ,IAAIzI,UAAU,oBAAnD,SAAuE,qBAAKI,MAAM,6BAA6BJ,UAAU,qBAAqBO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA9G,SACnE,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,gCAGpE,M,SChDlBoJ,EAjBU,WAErB,IAAMrI,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,IAItB,OACI,8BACI,cAAC,IAAD,CAAQC,QAASL,OCgGd8E,eANS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,OAKAsD,EAzGF,SAACZ,GACV,IAAM1C,EAAQ0C,EAAR1C,IAEN,EAA4BhF,mBAAS,IAArC,mBAAO2E,EAAP,KAAemH,EAAf,KACA,EAAwB9L,mBAAS,IAAjC,mBAAO+L,EAAP,KAAaC,EAAb,KACA,EAA8BhM,mBAAS,IAAvC,mBAAOiL,EAAP,KAAgBgB,EAAhB,KAEA,EAA0CjM,mBAAS,IAAnD,mBAAOkM,EAAP,KAAsBC,EAAtB,KACA,EAA8BnM,mBAAS,GAAvC,mBAAOsH,EAAP,KAAgB8E,EAAhB,KACA,EAAsCpM,mBAAS,GAA/C,mBAAOqM,EAAP,KAAoBC,EAApB,KAEA,EAAsCtM,oBAAS,GAA/C,mBAAKC,EAAL,KAAmBC,EAAnB,KAEAW,qBAAU,WAES,KAAX8D,GAA0B,KAAToH,GAA2B,KAAZd,GAChCsB,SAASC,eAAe,YAAYC,UAAW,EAC/CF,SAASC,eAAe,YAAYxK,MAAM2J,QAAU,MAEpDY,SAASC,eAAe,YAAYC,UAAW,EAC/CF,SAASC,eAAe,YAAYxK,MAAM2J,QAAU,SAEzD,CAAChH,EAAQoH,EAAMd,IAiClB,OACI,qBAAKlJ,UAAU,oBAAoBC,MAAO,CAAE2F,WAAY,iGAAxD,SACI,qBAAK5F,UAAU,yDAAf,SACI,sBAAKA,UAAU,4CAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,iBAAiB2K,OAAO,8LAE3C,oBAAI3K,UAAU,mFAAd,qBAGA,mBAAGA,UAAU,2CAAb,kHAEA,sBAAKA,UAAU,OAAf,UACI,cAAC,EAAD,CAAOgI,aAAa,EAAMpE,KAAM,OAAQ+D,MAAO,SAAUI,YAAa,uBAAwBU,QAASsB,IACvG,cAAC,EAAD,CAAO/B,aAAa,EAAMpE,KAAM,OAAQ+D,MAAO,OAAQI,YAAa,qBAAsBU,QAASwB,IACnG,cAAC,EAAD,CAAOjC,aAAa,EAAMpE,KAAM,WAAY+D,MAAO,UAAWI,YAAa,wBAAyBU,QAASyB,IAE7G,wBAAQ/D,QAhDb,WACf,IAAIyE,EAAO,CACPhI,OAAQA,EACRoH,KAAMA,EACNd,QAASA,GAIbnK,MAAM,GAAD,OAAIkE,EAAJ,eAAsB,CACvBjE,OAAQ,OACRC,KAAM4L,KAAKhM,UAAU+L,GACrB1L,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAC,GACQ,UAANA,GACAgL,EAAiB,gCACjBG,EAAe,SACfF,EAAW,KAEXD,EAAiB,2CACjBG,EAAe,SACfF,EAAW,QAyB0BtJ,GAAG,WAAWf,UAAU,4IAArD,0BAKR,cAAC,EAAD,CAAQmJ,KAAMmB,EAAapB,QAASiB,EAAe5E,QAASA,EAASkD,QAAS4B,EAAYjB,SAAU,MAEpG,sBAAKpJ,UAAU,wDAAf,UACI,qBAAKA,UAAU,mBAAmBC,MAAO,CAAE0J,KAAM,qBAAuBgB,OAAO,4LAC/E,sBAAK3K,UAAU,mBAAmBC,MAAO,CAAE0J,KAAM,qBAAjD,cAA0EzL,GAAgB,cAAC,EAAD,OAC1F,cAAC,IAAD,CAAUkD,QAAS,WACfC,YAAW,WACPC,QAAQC,IAAI,SACZpD,GAAgB,KACjB,qB,iBCxDhB2M,EAnCD,WAEV,MAA4B7M,mBAAS,GAArC,mBAAO8M,EAAP,KAAeC,EAAf,KAIA,OACI,sBAAKhL,UAAU,yBAAf,UACI,qBAAKA,UAAU,wDAAf,SACgB,IAAX+K,EACG,sBAAK5E,QAAS,WAEV6E,EAAU,IACX5K,MAAM,6BAA6BJ,UAAU,UAAUO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAHjG,UAII,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAY,IAAIN,EAAE,iIAAiID,SAAS,YAC/M,sBAAMI,cAAc,QAAQC,eAAe,QAAQE,YAAY,IAAIN,EAAE,4CAEzE,qBAAKyF,QAAS,WAAQ6E,EAAU,IAAM5K,MAAM,6BAA6BJ,UAAU,UAAUO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAApI,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAY,IAAIN,EAAE,+LAMjF,qBAAKV,UAAU,mBAAf,SACI,cAAC,IAAD,CAAaiL,SAAS,EAAMC,OAAQH,EAAQ1K,OAAO,OAAOH,MAAM,OAAOwB,MAAM,EAAMuB,IAAI,iGAE3F,qBAAKjD,UAAU,kBAAf,SACI,cAAC,IAAD,CAAaiL,SAAS,EAAMC,OAAQH,EAAQ1K,OAAO,OAAOH,MAAM,OAAOwB,MAAM,EAAMuB,IAAI,+FC4CxFsD,eALS,SAAC7C,GAAD,MAAY,KAKrB6C,EAhEF,SAACZ,GAEV,MAAgC1H,mBAAS,eAAzC,mBAAO+H,EAAP,KAAiBmF,EAAjB,KAmCA,OAjCArM,qBAAU,WAeN,GAZA0K,OAAO4B,SAAW,WACd,IAAIC,EAAUb,SAASC,eAAe,WACtC,QAAgBjL,IAAZ6L,GAAqC,OAAZA,EAAkB,CAC3C,IAAIpE,EAAIoE,EAAQC,UACZ9B,OAAO+B,YAActE,EACrBkE,EAAY,SAEZA,EAAY,sBAKU3L,IAA9BmG,EAAM6F,SAASpF,WAA0B,CACzC9E,QAAQC,IAAIoE,GACZ,IAAI8F,EAAc9F,EAAM6F,SAASpF,WAAWrF,GAExCkG,EADYuD,SAASC,eAAegB,GACtBH,UAEd9B,OAAOC,WAAW,wBAClBxC,GAAQ,IAGZuC,OAAOkC,SAAS,CAAEC,IAAK1E,EAAG2E,SAAU,WACpCjG,EAAM6F,SAASpF,gBAAa5G,MAQhC,gCACI,cAAC,EAAD,CAAQwG,SAAUA,IAClB,cAAC,EAAD,CAAO6F,SAAU,SAACrD,GAAQlH,QAAQC,IAAIiH,MACtC,sBAAKzH,GAAG,UAAR,UACI,cAAC,EAAD,CAAS8K,SAAU,SAACrD,GAAQlH,QAAQC,IAAIiH,MACxC,cAAC,EAAD,OAEJ,qBAAKzH,GAAG,mBAAR,SACI,cAAC,IAAD,MAEJ,qBAAKA,GAAG,UAAR,SACI,cAAC,EAAD,MAEJ,qBAAKA,GAAG,SAAR,SACI,cAAC,EAAD,MAEJ,cAAC,EAAD,UCqFGwF,eAPS,SAAC7C,GAAD,MAAY,CAChCjB,OAAQiB,EAAMjB,OACdC,SAAUgB,EAAMhB,YAKL6D,EA9IC,SAACZ,GAGb,IAAMlD,EAAqBkD,EAArBlD,OAAQC,EAAaiD,EAAbjD,SAEd,EAA0BzE,mBAAS,IAAnC,mBAAO6N,EAAP,KAAcC,EAAd,KACA,EAA8C9N,mBAAS,IAAvD,mBAAO+N,EAAP,KAAwBC,EAAxB,KAEA,EAA4BhO,mBAAS,IAArC,mBAAON,EAAP,KAAeuO,EAAf,KACA,EAA8BjO,mBAAS,SAAvC,mBAAO+G,EAAP,KAAgBmH,EAAhB,KACA,EAAwBlO,mBAAS,SAAjC,mBAAOmO,EAAP,KAAaC,EAAb,KAGAvN,qBAAU,WAIN,IAFA,IAAIwN,EAAW,GAENhH,EAAI,EAAGA,EAAI7C,EAAOuG,OAAQ1D,IAAK,CACpC,IAAI8G,EAAO3J,EAAO6C,GAAGf,MAAM3E,UAAU,EAAG,GAExC,GAAwB,IAApB0M,EAAStD,OACTsD,EAAQ,sBAAOA,GAAP,CAAiB,CAAE,IAAOF,EAAM,OAAUA,SAC/C,CACH9K,QAAQC,IAAI6K,GAEZ,IADA,IAAIG,GAAS,EACJC,EAAK,EAAGA,EAAKF,EAAStD,OAAQwD,IAC/BJ,IAASE,EAASE,GAAI5J,SACtB2J,GAAS,IAGF,IAAXA,IACAD,EAAQ,sBAAOA,GAAP,CAAiB,CAAE,IAAOF,EAAM,OAAUA,OAI9DE,EAASG,MAAK,SAAUC,EAAGC,GACvB,OAAO9D,SAAS6D,EAAEzI,KAAO4E,SAAS8D,EAAE1I,QAGxC8H,EAASO,GACTL,EAAmBxJ,KAEpB,CAACA,IAEJ3D,qBAAU,WACN8N,MACD,CAACjP,EAAQqH,EAASoH,IAErB,IAgBMS,EAAmB,SAACtI,GAEtB,IAAIuI,EAAM,IAAIC,KAAKxI,GAEfyI,EAAMF,EAAIG,UACVD,EAAM,KACNA,EAAG,WAAOA,IAEd,IAAIE,EAAMJ,EAAIK,WAAa,EACvBD,EAAM,KACNA,EAAG,WAAOA,IAEd,IAAId,EAAOU,EAAIM,cAGf,MADe,UAAMJ,EAAN,YAAaE,EAAb,YAAoBd,IAKjCQ,EAAU,WACZ,IAAIS,EAAS5K,EAAOsB,QAAO,SAAAC,GAAK,OAAIA,EAAMrG,OAAO2P,cAAcC,SAAS5P,EAAO2P,kBAC/D,UAAZtI,IACAqI,EAASA,EAAOtJ,QAAO,SAAAC,GAAK,OAAIA,EAAMgB,UAAYA,MAGzC,UAAToH,IACAiB,EAASA,EAAOtJ,QAAO,SAAAC,GAAK,OAAIA,EAAMO,MAAMgJ,SAASnB,OAEzDH,EAAmBoB,IAIvB,OACI,gCACI,cAAC,EAAD,CAAQrH,SAAU,UAElB,sBAAK/F,MAAO,CAAEuN,WAAY,OAAQC,UAAW,uBAA7C,UACI,qBAAKzN,UAAU,8BAAf,SACI,sBAAKA,UAAU,iFAAf,UAEI,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CAAO4D,KAAM,SAAU+D,MAAO,oBAAqBc,QA/CnD,SAACiF,GACrBpM,QAAQC,IAAImM,GACZxB,EAAUwB,GACVd,SA8CgB,qBAAK5M,UAAU,aAAf,SACI,cAAC,EAAD,CAAO4D,KAAM,SAAUiE,SAAUnF,EAAU+F,QA5D1C,SAACiF,GACtBvB,EAAWuB,GACXd,KA0D0FhF,aAAc,yBAExF,qBAAK5H,UAAU,aAAf,SACI,cAAC,EAAD,CAAO4D,KAAM,SAAUiE,SAAUiE,EAAOrD,QA1D1C,SAACiF,GACnBpM,QAAQC,IAAImM,GACZrB,EAAQqB,GACRd,KAuDoFhF,aAAc,6BAQ1F,qBAAK5H,UAAU,0FAAf,SAEKgM,EAAgB3G,KAAI,SAAAqH,GAAC,OAAI,sBAAK1M,UAAU,iDAAf,cAA6E,eAAC,IAAD,CAAS6F,GAAI,CAAEC,SAAU,cAAeM,WAAY,CAAEpC,MAAO0I,IAA7D,UAAoE,qBAAK1M,UAAU,YAAYC,MAAO,CAAE2F,WAAW,OAAD,OAAS8G,EAAEiB,MAAM,GAAGC,OAApB,sBACpNlL,EAAS2C,KAAI,SAAA3E,GAAC,OAAKA,EAAEuD,MAAQyI,EAAE1H,QAAW,mBAAehF,UAAU,6CAAzB,SAAuEU,EAAEkC,QAAjElC,EAAEuD,KAA6E,MAClI,mBAAGjE,UAAU,0BAAb,SAAwC0M,EAAE/O,SAC1C,mBAAGqC,UAAU,iCAAb,SAA+C6M,EAAiBH,EAAEnI,cAHyBmI,EAAEzI,aAQzG,cAAC,EAAD,U,kBC9FG4J,EAxCQ,SAAClI,GAEpBrE,QAAQC,IAAIoE,GACZ,IAAImI,EAAanI,EAAMmI,WACnBH,EAAQhI,EAAMgI,MAClB,EAAkC1P,mBAAS,GAA3C,mBAAO8P,EAAP,KAAkBC,EAAlB,KAIAlP,qBAAU,WAEN,IAAK,IAAIwG,EAAI,EAAGA,EAAIqI,EAAM3E,OAAQ1D,IAC1BwI,IAAeH,EAAMrI,GAAGsI,SAExBtM,QAAQC,IAAI+D,GACZ0I,EAAa1I,MAGtB,IAMH,OACI,gCACI,qBAAKtF,UAAU,8DAA8DmG,QANtE,WACXR,EAAMsI,mBAK4F7N,MAAM,6BAA6BG,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxK,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,2BAEzE,sBAAKV,UAAU,yFAAf,UAEI,cAACkO,EAAA,EAAD,CAAeC,MAAM,QAAQhI,QAAS,WAA0B6H,EAAjBD,EAAY,EAAkBA,EAAY,EAAkBJ,EAAM3E,OAAS,MAC1H,qBAAKhJ,UAAU,kCAAkCoO,IAAI,mBAAmBjO,IAAKwN,EAAMI,GAAWH,SAC9F,cAACS,EAAA,EAAD,CAAgBF,MAAM,QAAQhI,QAAS,WAAS4H,IAAcJ,EAAM3E,OAAS,EAAKgF,EAAaD,EAAY,GAAKC,EAAa,SAEjI,cAAC,EAAD,Q,QC+LGzH,eAPS,SAAC7C,GAAD,MAAY,CAChCjB,OAAQiB,EAAMjB,OACdC,SAAUgB,EAAMhB,YAKL6D,EA5NI,SAACZ,GAEhB,IAKI3B,EALAsK,EAAUC,cAEd,EAAgDtQ,mBAAS,IAAzD,mBAAOuQ,EAAP,KAAyBC,EAAzB,KACA,EAAgDxQ,mBAAS,QAAzD,mBAGMyE,GAHN,UAG2BiD,EAArBjD,UAAqBiD,EAAXlD,YAEkBjD,IAA9BmG,EAAM6F,SAASpF,YACfpC,EAAQ2B,EAAM6F,SAASpF,WAAWpC,MAClC1C,QAAQC,IAAIyC,IAGZsK,EAAQI,KAAK,YAGjB,IAAM7B,EAAmB,SAACtI,GAEtB,IAAIuI,EAAM,IAAIC,KAAKxI,GAEfyI,EAAMF,EAAIG,UACVD,EAAM,KACNA,EAAG,WAAOA,IAEd,IAAIE,EAAMJ,EAAIK,WAAa,EACvBD,EAAM,KACNA,EAAG,WAAOA,IAEd,IAAId,EAAOU,EAAIM,cAGf,MADe,UAAMJ,EAAN,YAAaE,EAAb,YAAoBd,IASvC,OACI,gCACI,cAAC,EAAD,CAAQpG,SAAU,eACcxG,IAA9BmG,EAAM6F,SAASpF,WACb,sBAAKpG,UAAU,2BAA2BC,MAAO,CAAEuN,WAAY,OAAQC,UAAW,uBAAlF,UACI,sBAAKzN,UAAU,kCAAkCI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAxI,UACI,sBAAMG,EAAE,wLAAwLH,KAAK,YACrM,sBAAMG,EAAE,gMAAgMH,KAAK,YAC7M,sBAAMG,EAAE,iMAAiMH,KAAK,YAC9M,sBAAMG,EAAE,kMAAkMH,KAAK,YAC/M,sBAAMG,EAAE,kMAAkMH,KAAK,YAC/M,sBAAMG,EAAE,iMAAiMH,KAAK,YAC9M,sBAAMG,EAAE,gMAAgMH,KAAK,YAC7M,sBAAMG,EAAE,uMAAuMH,KAAK,YACpN,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,iOAAiOH,KAAK,YAC9O,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kOAAkOH,KAAK,YAC/O,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,iMAAiMH,KAAK,YAC9M,sBAAMG,EAAE,kMAAkMH,KAAK,YAC/M,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,2LAA2LH,KAAK,YACxM,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kMAAkMH,KAAK,YAC/M,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oMAAoMH,KAAK,YACjN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oMAAoMH,KAAK,YACjN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,mMAAmMH,KAAK,YAChN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,oMAAoMH,KAAK,YACjN,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,yLAAyLH,KAAK,eAE1M,sBAAKP,UAAU,oCAAoCI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,KAAKC,QAAQ,aAAaC,KAAK,OAAxI,UACI,sBAAMG,EAAE,yzDAAyzDH,KAAK,YACt0D,sBAAMG,EAAE,+0DAA+0DH,KAAK,YAC51D,sBAAMG,EAAE,+yDAA+yDH,KAAK,YAC5zD,sBAAMG,EAAE,gzDAAgzDH,KAAK,eAEj0D,sBAAKP,UAAU,gCAAgCI,MAAM,6BAA6BF,MAAM,KAAKG,OAAO,MAAMC,QAAQ,aAAaC,KAAK,OAApI,UACI,sBAAMQ,GAAG,yBAAyBR,KAAK,QAAvC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,qMAElD,sBAAMA,EAAE,s6DAAs6DH,KAAK,UAAUU,KAAK,iCACl8D,sBAAMT,SAAS,UAAUC,SAAS,UAAUC,EAAE,wLAAwLH,KAAK,YAC3O,sBAAMQ,GAAG,yBAAyBR,KAAK,QAAvC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,0KAElD,sBAAMA,EAAE,+0DAA+0DH,KAAK,UAAUU,KAAK,iCAC32D,sBAAMT,SAAS,UAAUC,SAAS,UAAUC,EAAE,wKAAwKH,KAAK,eAE/N,sBAAKP,UAAU,wBAAf,UACI,sBAAKA,UAAU,qBAAf,cAAqC,oBAAIA,UAAU,mCAAd,SAAkDgE,EAAMrG,YAC7F,sBAAKqC,UAAU,qBAAf,cAAsC0C,EAAS2C,KAAI,SAAA3E,GAAC,OAAKA,EAAEuD,MAAQD,EAAMgB,QAAW,mBAAehF,UAAU,iCAAzB,SAA2DU,EAAEsE,SAArDtE,EAAEuD,KAAkE,MAC5J,mBAAGjE,UAAU,uCAAb,SAAqD6M,EAAiB7I,EAAMO,YAEhF,qBAAKvE,UAAU,6CAAf,SACKgE,EAAM2J,MAAMtI,KAAI,SAAAtC,GAAI,OAAI,qBAAK/C,UAAU,kBAAkBC,MAAO,CAAE2F,WAAW,OAAD,OAAS7C,EAAK6K,OAAd,2BAAkEzH,QAAS,WAAQsI,EAAoB1L,EAAK6K,UAAvD7K,EAAK6K,aAE3I,eAAC,IAAD,CAAS/H,GAAI,CAAEC,SAAU,YAAzB,eAA0C,sBAAK9F,UAAU,yBAAf,eAA0C,cAACkO,EAAA,EAAD,CAAeS,KAAM,KAA/D,KAAuE,mBAAG3O,UAAU,4BAAb,6CAGrH,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,qBAAf,cAAqC,oBAAIA,UAAU,mCAAd,SAAkDgE,EAAMrG,YAC7F,sBAAKqC,UAAU,qBAAf,cAAsC0C,EAAS2C,KAAI,SAAA3E,GAAC,OAAKA,EAAEuD,MAAQD,EAAMgB,QAAW,mBAAehF,UAAU,iCAAzB,SAA2DU,EAAEsE,SAArDtE,EAAEuD,KAAkE,MAC5J,mBAAGjE,UAAU,uCAAb,SAAqD6M,EAAiB7I,EAAMO,YAEhF,qBAAKvE,UAAU,6CAAf,SACKgE,EAAM2J,MAAMtI,KAAI,SAAAtC,GAAI,OAAI,qBAAK/C,UAAU,kBAAkBC,MAAO,CAAE2F,WAAW,OAAD,OAAS7C,EAAK6K,OAAd,2BAAkEzH,QAAS,WAAQsI,EAAoB1L,EAAK6K,UAAvD7K,EAAK6K,aAE3I,eAAC,IAAD,CAAS/H,GAAI,CAAEC,SAAU,YAAzB,eAA0C,sBAAK9F,UAAU,yBAAf,eAA0C,cAACkO,EAAA,EAAD,CAAeS,KAAM,KAA/D,KAAuE,mBAAG3O,UAAU,4BAAb,gDAIzH,GAIsB,KAArBwO,EACG,cAAC,EAAD,CAAgBV,WAAYU,EAAkBP,gBAzK3C,WACfQ,EAAoB,KAwKmEd,MAAO3J,EAAM2J,QACxF,GAER,cAAC,EAAD,UCxIGpH,eALS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,OAIAsD,EA7ES,SAACZ,GACrB,IAAM1C,EAAQ0C,EAAR1C,IACNnE,qBAAU,WAENC,MAAM,GAAD,OAAIkE,EAAJ,eAAsB,CACvBjE,OAAQ,QACTG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAC,GAEFqH,EAAarH,EAAE,GAAGoH,WAClBG,EAAUvH,EAAE,GAAGsH,QACfG,EAAYzH,EAAE,GAAGwH,eAG1B,IAEH,MAA8B3I,mBAAS,IAAvC,mBAAOiL,EAAP,KAAgBgB,EAAhB,KACA,EAAsCjM,mBAAS,IAA/C,mBAAOqM,EAAP,KAAoBC,EAApB,KACA,EAA8BtM,mBAAS,IAAvC,mBAAOsH,EAAP,KAAgB8E,EAAhB,KAEA,EAAkCpM,qBAAlC,mBAAOuI,EAAP,KAAkBC,EAAlB,KACA,EAA4BxI,qBAA5B,mBAAOyI,EAAP,KAAeC,EAAf,KACA,EAAgC1I,qBAAhC,mBAAO2I,EAAP,KAAiBC,EAAjB,KA+BA,OACI,8BAEI,qBAAK7G,UAAU,uDAAf,SACI,sBAAKA,UAAU,kDAAf,UACI,cAAC,EAAD,CAAQmJ,KAAMmB,EAAapB,QAASA,EAAS3D,QAASA,EAASkD,QAAS4B,EAAYjB,SAAU,MAC9F,sBAAKpJ,UAAU,aAAf,UACI,cAAC,EAAD,CAAO4D,KAAM,SAAU+D,MAAO,oBAAqBC,aAAcpB,EAAWiC,QAAShC,IACrF,cAAC,EAAD,CAAO7C,KAAM,SAAU+D,MAAO,mBAAoBC,aAAclB,EAAQ+B,QAAS9B,IACjF,cAAC,EAAD,CAAO/C,KAAM,SAAU+D,MAAO,qBAAsBC,aAAchB,EAAU6B,QAAS5B,IACrF,wBAAQ7G,UAAU,wEAAwEmG,QAvCvF,WAEnB,IAAIyI,EAAc,CACdpI,UAAWA,EACXE,OAAQA,EACRE,SAAUA,GAEdsD,EAAW,qBACXK,EAAe,WACfF,EAAW,GAEX/I,QAAQC,IAAIqN,GAEZ7P,MAAM,GAAD,OAAIkE,EAAJ,mBAA0B,CAC3BjE,OAAQ,MACRC,KAAM4L,KAAKhM,UAAU+P,GACrB1P,QAAS,CACL,eAAgB,sBAGtBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACTF,MAAK,SAAAC,GACFkC,QAAQC,IAAInC,GACZ8K,EAAW,mCACXK,EAAe,SACfF,EAAW,OAcH,0C,4CC0DT9D,gBARS,SAAC7C,GAAD,MAAY,CAChCjB,OAAQiB,EAAMjB,OACdC,SAAUgB,EAAMhB,SAChBO,IAAKS,EAAMT,OAKAsD,EAzHI,SAACZ,GAEhB7G,qBAAU,WACNqN,EAAWzJ,EAAS,GAAG3B,MACxB,IAG6B4E,EAA1BlD,OAAN,IAAcC,EAAkBiD,EAAlBjD,SAAUO,EAAQ0C,EAAR1C,IACxB,EAAwChF,mBAAS,IAAjD,mBAAO4Q,EAAP,KAAqBC,EAArB,KACA,EAA4B7Q,mBAAS,IAArC,mBAAON,EAAP,KAAeuO,EAAf,KACA,EAA8BjO,mBAAS,IAAvC,mBAAO+G,EAAP,KAAgBmH,EAAhB,KACA,EAA0BlO,mBAAS,IAAnC,mBAAOsG,EAAP,KAAcwK,EAAd,KAGAjQ,qBAAU,WACS,KAAXnB,GAA6B,KAAZqH,GAA4B,KAAVT,GAAiC,KAAjBsK,GACnDrE,SAASC,eAAe,cAAcC,UAAW,EACjDF,SAASC,eAAe,cAAcxK,MAAM2J,QAAU,MAEtDY,SAASC,eAAe,cAAcC,UAAW,EACjDF,SAASC,eAAe,cAAcxK,MAAM2J,QAAU,SAE3D,CAACjM,EAAQqH,EAAST,EAAOsK,IAG5B,IAOMG,EAAU,uCAAG,8BAAAtC,EAAA,6DACfpL,QAAQC,IAAIsN,GADG,SAEKI,IAFL,OAETtB,EAFS,OAGfrM,QAAQC,IAAIoM,GAERuB,EAAa,CACbvR,OAAQA,EACRqH,QAASA,EACTT,MAAOA,EACPoJ,MAAOA,GAIX5O,MAAM,GAAD,OAAIkE,EAAJ,eAAsB,CACvBjE,OAAQ,OACRC,KAAM4L,KAAKhM,UAAUqQ,GACrBhQ,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAC,GACFkC,QAAQC,IAAInC,GACZuG,EAAMwJ,SAAS,CAAEvL,KAAM,gBAAiBC,QAASzE,IACjDuG,EAAMuE,WAAW,gCACjBvE,EAAM4E,eAAe,SACrB5E,EAAM0E,WAAW,GACjB1E,EAAMyJ,eAAc,MA1Bb,2CAAH,qDAiCVH,EAAe,WACjBtJ,EAAMuE,WAAW,qBACjBvE,EAAM4E,eAAe,WACrB5E,EAAM0E,WAAW,GACjB,IAAMsD,EAAQkB,EAAaxJ,KAAI,SAAAgK,GAC3B,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,OAAQH,GACxBC,EAASE,OAAO,gBAAiB,aAC1BC,IAAMC,KACT,qDACAJ,GACFnQ,MAAK,SAACC,GAGJ,OAFAkC,QAAQC,IAAInC,GACD,CAAEwO,OAAQxO,EAAER,KAAKqE,WAKpC,OAAO0M,QAAQC,IAAIjC,IAIvB,OACI,qBAAK3N,UAAU,4FAA4FC,MAAO,CAAE4J,OAAQ,QAA5H,SACI,sBAAK7J,UAAU,iEAAf,UACI,qBAAKA,UAAU,0BAAf,SAAyC,wBAAQA,UAAU,QAAQmG,QAAS,SAACqC,GAAQ7C,EAAMyJ,eAAc,IAAhE,SACrC,qBAAKhP,MAAM,6BAA6BJ,UAAU,UAAUO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAnG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,+BAI7E,oBAAIV,UAAU,wCAAd,yBACA,cAAC,EAAD,CAAO4D,KAAM,OAAQ+D,MAAO,YAAUc,QAASyD,IAG/C,cAAC,EAAD,CAAOtI,KAAM,SAAUiE,SAAUnF,EAAU+F,QAAS0D,EAAYxE,MAAO,YAEvE,cAAC,EAAD,CAAO/D,KAAM,OAAQ+D,MAAO,QAASc,QA7E5B,SAACD,GAClBlH,QAAQC,IAAIiH,GACZ,IAAIsE,EAAM,IAAIC,KAAJ,UAAYvE,EAAZ,WACVuG,EAASjC,MA4ED,cAAC,EAAD,CAAOlJ,KAAM,iBAAkB+D,MAAO,cAAec,QAASqG,IAE9D,wBAAQ/N,GAAG,aAAaf,UAAU,wFAAwFmG,QAAS6I,EAAnI,iC,6BC6DDzI,I,OAAAA,aAPS,SAAC7C,GAAD,MAAY,CAEhCrB,eAAgBqB,EAAMrB,kBAKXkE,EAvKQ,SAACZ,GAEpB,IAAItD,EAOJ,OANAA,EAAiBsD,EAAMtD,eACvBf,QAAQC,IAAIoE,GAMR,qBAAK3F,WAAuC,IAA5BqC,EAAeiB,SAAoB,OAAS,GAA5D,SACI,sBAAKtD,UAAU,+BAAf,UACMqC,EAAegC,UACb,qBAAKrE,UAAU,UAAUC,MAAO,CAAE2F,WAAW,OAAD,OAASvD,EAAegC,UAAxB,sBAC5C,wBAGJ,sBAAKrE,UAAU,oBAAf,UACkC,KAA5BqC,EAAe+B,SACb,qBAAKpE,UAAU,OAAOC,MAAO,CAAE2F,WAAW,OAAD,OAASvD,EAAe+B,SAAxB,sBACzC,wBAGJ,sBAAKpE,UAAU,UAAUM,QAAQ,cAAcC,KAAK,OAApD,UACI,sBAAMG,EAAE,mLAAmLH,KAAK,YAChM,sBAAMG,EAAE,wSAAwSH,KAAK,YACrT,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kIAAkIH,KAAK,YAC/I,sBAAMG,EAAE,iNAAiNH,KAAK,YAC9N,sBAAMG,EAAE,umBAAumBH,KAAK,YACpnB,sBAAMG,EAAE,+ZAA+ZH,KAAK,YAC5a,sBAAMG,EAAE,8aAA8aH,KAAK,YAC3b,sBAAMG,EAAE,qFAAqFH,KAAK,YAClG,sBAAMG,EAAE,qNAAqNH,KAAK,YAClO,sBAAMG,EAAE,oIAAoIH,KAAK,YACjJ,sBAAMG,EAAE,oFAAoFH,KAAK,YACjG,sBAAMG,EAAE,mJAAmJH,KAAK,YAChK,sBAAMG,EAAE,kMAAkMH,KAAK,YAC/M,sBAAMG,EAAE,oHAAoHH,KAAK,YACjI,sBAAMG,EAAE,mFAAmFH,KAAK,YAChG,sBAAMG,EAAE,8aAA8aH,KAAK,YAC3b,sBAAMG,EAAE,oFAAoFH,KAAK,YACjG,sBAAMG,EAAE,+MAA+MH,KAAK,YAC5N,sBAAMG,EAAE,gLAAgLH,KAAK,YAC7L,sBAAMG,EAAE,kTAAkTH,KAAK,YAC/T,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,mIAAmIH,KAAK,YAChJ,sBAAMG,EAAE,qNAAqNH,KAAK,YAClO,sBAAMG,EAAE,2mBAA2mBH,KAAK,YACxnB,sBAAMG,EAAE,kaAAkaH,KAAK,YAC/a,sBAAMG,EAAE,6aAA6aH,KAAK,YAC1b,sBAAMG,EAAE,iFAAiFH,KAAK,YAC9F,sBAAMG,EAAE,uMAAuMH,KAAK,YACpN,sBAAMG,EAAE,oIAAoIH,KAAK,YACjJ,sBAAMG,EAAE,oFAAoFH,KAAK,YACjG,sBAAMG,EAAE,mJAAmJH,KAAK,YAChK,sBAAMG,EAAE,0MAA0MH,KAAK,YACvN,sBAAMG,EAAE,kHAAkHH,KAAK,YAC/H,sBAAMG,EAAE,oFAAoFH,KAAK,YACjG,sBAAMG,EAAE,ibAAibH,KAAK,YAC9b,sBAAMG,EAAE,mFAAmFH,KAAK,YAChG,sBAAMG,EAAE,mNAAmNH,KAAK,YAChO,sBAAMG,EAAE,oLAAoLH,KAAK,YACjM,sBAAMG,EAAE,gTAAgTH,KAAK,YAC7T,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,kIAAkIH,KAAK,YAC/I,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,8mBAA8mBH,KAAK,YAC3nB,sBAAMG,EAAE,kaAAkaH,KAAK,YAC/a,sBAAMG,EAAE,4aAA4aH,KAAK,YACzb,sBAAMG,EAAE,oFAAoFH,KAAK,YACjG,sBAAMG,EAAE,6LAA6LH,KAAK,YAC1M,sBAAMG,EAAE,mIAAmIH,KAAK,YAChJ,sBAAMG,EAAE,mFAAmFH,KAAK,YAChG,sBAAMG,EAAE,iJAAiJH,KAAK,YAC9J,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,mHAAmHH,KAAK,YAChI,sBAAMG,EAAE,mFAAmFH,KAAK,YAChG,sBAAMG,EAAE,4aAA4aH,KAAK,YACzb,sBAAMG,EAAE,kFAAkFH,KAAK,YAC/F,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,mLAAmLH,KAAK,YAChM,sBAAMG,EAAE,iTAAiTH,KAAK,YAC9T,sBAAMG,EAAE,iNAAiNH,KAAK,YAC9N,sBAAMG,EAAE,iIAAiIH,KAAK,YAC9I,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gnBAAgnBH,KAAK,YAC7nB,sBAAMG,EAAE,iaAAiaH,KAAK,YAC9a,sBAAMG,EAAE,6aAA6aH,KAAK,YAC1b,sBAAMG,EAAE,oFAAoFH,KAAK,YACjG,sBAAMG,EAAE,qLAAqLH,KAAK,YAClM,sBAAMG,EAAE,oIAAoIH,KAAK,YACjJ,sBAAMG,EAAE,kFAAkFH,KAAK,YAC/F,sBAAMG,EAAE,oJAAoJH,KAAK,YACjK,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,gHAAgHH,KAAK,YAC7H,sBAAMG,EAAE,kFAAkFH,KAAK,YAC/F,sBAAMG,EAAE,+aAA+aH,KAAK,YAC5b,sBAAMG,EAAE,iFAAiFH,KAAK,YAC9F,sBAAMG,EAAE,iNAAiNH,KAAK,eAElO,sBAAKP,UAAU,mBAAf,UACI,6BAAKqC,EAAeO,SACpB,6BAAKP,EAAeiC,YACpB,6BAAKjC,EAAekC,WAEI,KAA1BlC,EAAemC,OACb,qBAAKxE,UAAU,SAASG,IAAKkC,EAAemC,SAC5C,2BAKR,sBAAKxE,UAAU,aAAf,UACI,qBAAKA,UAAU,YAAYI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,KAAKC,QAAQ,aAAaC,KAAK,OAAhH,SACI,sBAAMG,EAAE,4uBAA4uBE,OAAO,cAE/vB,sBAAKZ,UAAU,mCAAf,UACI,4BAAIqC,EAAeoC,QACnB,+BAAOpC,EAAeoC,WAE1B,qBAAKzE,UAAU,YAAYI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,KAAKC,QAAQ,aAAaC,KAAK,OAAhH,SACI,sBAAMG,EAAE,6uBAA6uBE,OAAO,kBAGtuB,IAA5ByB,EAAeiB,SACb,sBAAKtD,UAAU,OAAOI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,KAAKC,QAAQ,aAAaC,KAAK,OAA3G,UACI,sBAAMG,EAAE,4uNAA4uNH,KAAK,UACzvN,sBAAMG,EAAE,iNAAiNE,OAAO,QAAQI,YAAY,YACpP,sBAAMR,SAAS,UAAUC,SAAS,UAAUC,EAAE,wrBAAwrBH,KAAK,UAC3uB,uBAAMQ,GAAG,4BAA4BgG,UAAU,iBAAiBC,EAAE,UAAUC,EAAE,UAAU/G,MAAM,KAAKG,OAAO,KAAKE,KAAK,QAApH,UACI,sBAAMA,KAAK,QAAQyG,EAAE,UAAUC,EAAE,UAAU/G,MAAM,KAAKG,OAAO,OAC7D,sBAAMG,SAAS,UAAUC,SAAS,UAAUC,EAAE,i/CAElD,sBAAMF,SAAS,UAAUC,SAAS,UAAUC,EAAE,4+CAA4+CH,KAAK,UAC/hD,sBAAMG,EAAE,siOAAsiOH,KAAK,QAAQU,KAAK,oCAChkO,sBAAMP,EAAE,6TAA6TE,OAAO,UAAUI,YAAY,MAClW,sBAAMR,SAAS,UAAUC,SAAS,UAAUC,EAAE,8UAA8UH,KAAK,aAErY,sBAAKP,UAAU,OAAOI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,KAAKC,QAAQ,aAAaC,KAAK,OAA3G,UACI,sBAAMG,EAAE,+wNAA+wNH,KAAK,YAC5xN,sBAAMG,EAAE,+MAA+ME,OAAO,UAAUI,YAAY,YACpP,sBAAMR,SAAS,UAAUC,SAAS,UAAUC,EAAE,urBAAurBH,KAAK,YAC1uB,uBAAMQ,GAAG,4BAA4BgG,UAAU,iBAAiBC,EAAE,UAAUC,EAAE,YAAY/G,MAAM,KAAKG,OAAO,KAAKE,KAAK,QAAtH,UACI,sBAAMA,KAAK,QAAQyG,EAAE,UAAUC,EAAE,YAAY/G,MAAM,KAAKG,OAAO,OAC/D,sBAAMG,SAAS,UAAUC,SAAS,UAAUC,EAAE,0/CAElD,sBAAMF,SAAS,UAAUC,SAAS,UAAUC,EAAE,q/CAAq/CH,KAAK,YACxiD,sBAAMG,EAAE,kjOAAkjOH,KAAK,UAAUU,KAAK,oCAC9kO,sBAAMP,EAAE,+TAA+TE,OAAO,UAAUI,YAAY,YACpW,sBAAMR,SAAS,UAAUC,SAAS,UAAUC,EAAE,gVAAgVH,KAAK,wBCgI5YgG,gBAJS,SAAC7C,GAAD,MAAY,CAChCpB,SAAUoB,EAAMpB,YAGLiE,EAxRE,SAACZ,GAEd,IAAMrD,EAAaqD,EAAbrD,SACNhB,QAAQC,IAAIe,GAEZ,MAA8BrE,mBAAS,GAAvC,mBAAO4R,EAAP,KAAgBC,EAAhB,KAOA,OALAhR,qBAAU,WACN,IACIiR,EADYvF,SAASwF,cAAc,WACfC,YACxBH,GAAY,KAAOC,GAAW,KAC/B,CAACzN,EAAS3E,SAET,qBAAKqC,WAAiC,IAAtBsC,EAASgB,SAAoB,OAAS,GAAtD,SACI,sBAAKrD,MAAO,CAAEC,MAAO,SAAUG,OAAQ,UAAYL,UAAU,kCAA7D,UACI,sBAAKC,MAAO,CAAEiQ,SAAU,WAAYvE,IAAK,OAAQhC,KAAM,OAAQE,OAAQ,KAAOzJ,MAAM,6BAA6BF,MAAM,KAAKG,OAAO,MAAMC,QAAQ,aAAaC,KAAK,OAAnK,UACI,sBAAMG,EAAE,y4DAAy4DH,KAAK,YACt5D,wBAAQ4P,GAAG,UAAUC,GAAG,UAAUhR,EAAE,UAAUiR,UAAU,mCAAmCzP,OAAO,YAClG,sBAAM0P,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAU7P,OAAO,UAAUC,cAAc,UACzF,sBAAMyP,GAAG,MAAMC,GAAG,OAAOC,GAAG,UAAUC,GAAG,OAAOJ,UAAU,iEAAiEzP,OAAO,UAAUC,cAAc,aAG9J,sBAAKZ,MAAO,CAAEiQ,SAAU,WAAYQ,OAAQ,QAASC,MAAO,OAAQ9G,OAAQ,KAAOzJ,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAA1K,UACI,sBAAMG,EAAE,okDAAokDH,KAAK,YACjlD,wBAAQ4P,GAAG,UAAUC,GAAG,UAAUhR,EAAE,UAAUiR,UAAU,mCAAmCzP,OAAO,YAClG,sBAAM0P,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAU7P,OAAO,UAAUC,cAAc,UACzF,sBAAMyP,GAAG,MAAMC,GAAG,OAAOC,GAAG,UAAUC,GAAG,OAAOJ,UAAU,iEAAiEzP,OAAO,UAAUC,cAAc,aAE9J,sBAAKE,GAAG,SAASf,UAAU,6EAA6EC,MAAO,CAAE2Q,SAAU,OAAQC,SAAU,QAASlF,IAAK,QAAS9B,OAAQ,KAAMF,KAAK,GAAD,OAAKkG,EAAL,OAAtL,cAA2M,sBAAM5P,MAAO,CAAE6Q,QAAS,EAAGC,OAAQ,EAAGC,WAAY,QAAlD,SAA6D1O,EAAS3E,YACjR,qBAAKoD,GAAG,cAAcf,UAAU,oBAAoBC,MAAO,CAAEC,MAAO,QAASG,OAAQ,QAASsL,IAAK,QAAShC,KAAK,QAAUE,OAAQ,GAAIjE,WAAW,OAAD,OAAStD,EAASS,KAAlB,0BAAjJ,eAEA,qBAAK/C,UAAU,YAAYC,MAAO,CAAE0L,IAAK,QAASgF,MAAO,OAAQ9G,OAAQ,MAAQzJ,MAAM,6BAA6BF,MAAM,KAAKG,OAAO,MAAMC,QAAQ,aAAaC,KAAK,OAAtK,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,iyHAC1CH,MAA6B,IAAtB+B,EAASgB,SACZ,UACA,eAEW,IAAtBhB,EAASgB,SACN,sBAAKrD,MAAO,CAAEiQ,SAAU,WAAYvG,KAAM,OAAQ+G,OAAQ,QAAUtQ,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAA3J,UACI,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,0NAA0NH,KAAK,YACvO,sBAAMG,EAAE,0NAA0NH,KAAK,YACvO,sBAAMG,EAAE,0NAA0NH,KAAK,YACvO,sBAAMG,EAAE,wNAAwNH,KAAK,YACrO,sBAAMG,EAAE,yOAAyOH,KAAK,YACtP,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,iOAAiOH,KAAK,YAC9O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,+NAA+NH,KAAK,YAC5O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,+NAA+NH,KAAK,YAC5O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,+NAA+NH,KAAK,YAC5O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,+NAA+NH,KAAK,YAC5O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,+NAA+NH,KAAK,YAC5O,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,6NAA6NH,KAAK,YAC1O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,8MAA8MH,KAAK,YAC3N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,8NAA8NH,KAAK,eAE/O,sBAAKN,MAAO,CAAEiQ,SAAU,WAAYvG,KAAM,OAAQ+G,OAAQ,QAAUtQ,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAA3J,UACI,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,0NAA0NH,KAAK,YACvO,sBAAMG,EAAE,0NAA0NH,KAAK,YACvO,sBAAMG,EAAE,0NAA0NH,KAAK,YACvO,sBAAMG,EAAE,wNAAwNH,KAAK,YACrO,sBAAMG,EAAE,yOAAyOH,KAAK,YACtP,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,iOAAiOH,KAAK,YAC9O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,+NAA+NH,KAAK,YAC5O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,+NAA+NH,KAAK,YAC5O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,+NAA+NH,KAAK,YAC5O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,+NAA+NH,KAAK,YAC5O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,+NAA+NH,KAAK,YAC5O,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,yMAAyMH,KAAK,YACtN,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,6MAA6MH,KAAK,YAC1N,sBAAMG,EAAE,yNAAyNH,KAAK,YACtO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,6NAA6NH,KAAK,YAC1O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gOAAgOH,KAAK,YAC7O,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,8MAA8MH,KAAK,YAC3N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,8NAA8NH,KAAK,uBC5MpPgG,gBANS,SAAC7C,GAAD,MAAY,CAChCnB,eAAgBmB,EAAMnB,eACtBG,SAAUgB,EAAMhB,YAIL6D,EA3DQ,SAACZ,GACpB,IAAMpD,EAA6BoD,EAA7BpD,eAA6BoD,EAAbjD,SAKtB,OAJApB,QAAQC,IAAIgB,EAAeyC,SAMvB,qBAAKhF,WAAuC,IAA5BuC,EAAee,SAAoB,OAAS,GAA5D,SACI,sBAAKrD,MAAO,CAAEC,MAAO,SAAUG,OAAQ,UAAYL,UAAU,kCAA7D,WACkC,IAA5BuC,EAAee,SACb,sBAAKrD,MAAO,CAAEiQ,SAAU,WAAYvE,IAAK,QAAShC,KAAM,QAASE,OAAQ,QAAUzJ,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,KAAKC,QAAQ,aAAaC,KAAK,OAAxK,UACI,sBAAMG,EAAE,itCAAitCH,KAAK,YAC9tC,sBAAMG,EAAE,q2CAAq2CH,KAAK,YACl3C,sBAAMG,EAAE,82CAA82CH,KAAK,YAC33C,sBAAMG,EAAE,iuCAAiuCH,KAAK,eACzuC,sBAAKN,MAAO,CAAEiQ,SAAU,WAAYvE,IAAK,QAAShC,KAAM,QAASE,OAAQ,QAAUzJ,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,KAAKC,QAAQ,aAAaC,KAAK,OAAxK,UACL,sBAAMG,EAAE,itCAAitCH,KAAK,YAC9tC,sBAAMG,EAAE,q2CAAq2CH,KAAK,YACl3C,sBAAMG,EAAE,82CAA82CH,KAAK,YAC33C,sBAAMG,EAAE,iuCAAiuCH,KAAK,oBAIttCf,IAA9B+C,EAAeyC,QAAQ,GAAoB,qBAAK/E,MAAO,CAAEiQ,SAAU,WAAYhQ,MAAO,SAAUG,OAAQ,UAAYL,UAAU,eAAeG,IAAKoC,EAAeyC,QAAQ,GAAGiM,YAAgB,GAG9L,qBAAKlQ,GAAG,gBAAgBd,MAAO,CAAEiQ,SAAU,WAAY7P,OAAQ,QAASH,MAAO,QAAS0F,WAAW,OAAD,OAASrD,EAAewC,cAAxB,yBAA8DhB,OAAQ,eAAgB4H,IAAK,QAAShC,KAAM,UAC5M,qBAAK5I,GAAG,YAAYd,MAAO,CAAEiQ,SAAU,WAAY7P,OAAQ,QAASH,MAAO,QAAS0F,WAAW,OAAD,OAASrD,EAAeuC,UAAxB,yBAA0D6G,IAAK,QAASgF,MAAO,UAC7K,sBAAK5P,GAAG,eAAef,UAAU,yBAAyBC,MAAO,CAAE0J,KAAM,QAAS+G,OAAQ,SAA1F,eACoClR,IAA9B+C,EAAemC,QAAQ,GACrB,qBAAKvE,IAAKoC,EAAemC,QAAQ,GAAGwM,OAAQlR,UAAU,OAAOC,MAAO,CAAEC,MAAO,OAAQG,OAAQ,UAC7F,QAEgCb,IAAlC+C,EAAeoC,YAAY,GACzB,qBAAKxE,IAAKoC,EAAeoC,YAAY,GAAGuM,OAAQlR,UAAU,OAAOC,MAAO,CAAEC,MAAO,OAAQG,OAAQ,UACjG,GAEJ,sBAAKL,UAAU,iDAAiDC,MAAO,CAAEkR,WAAY,aAAcP,SAAU,QAA7G,cAAyHrO,EAAegC,MAAxI,IAAgJhC,EAAeqC,KAAK,uBAChK,sBAAM5E,UAAU,yCAAhB,SAA0DuC,EAAesC,mBACjDrF,IAA9B+C,EAAemC,QAAQ,SAAsDlF,IAAlC+C,EAAeoC,YAAY,GACpE,sBAAK3E,UAAU,6EAA6EC,MAAO,CAAE2Q,SAAU,OAAQjF,IAAK,QAAShC,KAAM,QAASE,OAAQ,KAAMuH,MAAO,QAAzK,cAAoL,uBAAMnR,MAAO,CAAE6Q,QAAS,EAAGC,OAAQ,EAAGC,WAAY,QAAlD,UAA6DzO,EAAemC,QAAQ,GAAG9B,OAAvF,OAAmGL,EAAeoC,YAAY,GAAG/B,aACrT,WCyRL2D,gBANS,SAAC7C,GAAD,MAAY,CAChClB,aAAckB,EAAMlB,aACpBE,SAAUgB,EAAMhB,YAIL6D,EAnUM,SAACZ,GAClB,IAAMnD,EAA2BmD,EAA3BnD,aAA2BmD,EAAbjD,SAKpB,OAJApB,QAAQC,IAAIiB,GAMR,qBAAKxC,WAAqC,IAA1BwC,EAAac,SAAoB,OAAS,GAA1D,SACI,sBAAKrD,MAAO,CAAEC,MAAO,SAAUG,OAAQ,UAAYL,UAAU,kCAA7D,UAEI,sBAAKA,UAAU,0GAA0GC,MAAO,CAAE2Q,SAAU,OAAQjF,IAAK,OAAQhC,KAAM,OAAQE,OAAQ,KAAMuH,MAAO,QAApM,cAA+M,sBAAMnR,MAAO,CAAE6Q,QAAS,EAAGC,OAAQ,EAAGC,WAAY,QAAlD,uCAIjLxR,IAA5BgD,EAAawC,QAAQ,GAAoB,qBAAK/E,MAAO,CAAEiQ,SAAU,WAAYhQ,MAAO,SAAUG,OAAQ,UAAYL,UAAU,eAAeG,IAAKqC,EAAawC,QAAQ,GAAGiM,YAAgB,GAEnK,KAAtBzO,EAAaO,KACV,qBAAK/C,UAAU,qBAAqBC,MAAO,CAAE0L,IAAK,QAAShC,KAAM,QAASzJ,MAAO,QAASG,OAAQ,QAASwJ,OAAQ,EAAGjE,WAAW,OAAD,OAASpD,EAAaO,KAAtB,4BAA8D,GAGlM,sBAAK/C,UAAU,yBAAyBC,MAAO,CAAE0J,KAAM,QAASgC,IAAK,QAAS9B,OAAQ,SAAUwH,WAAY,SAAUC,SAAU,SAAhI,eACkC9R,IAA5BgD,EAAakC,QAAQ,GACnB,qBAAKvE,IAAKqC,EAAakC,QAAQ,GAAGwM,OAAQlR,UAAU,OAAOC,MAAO,CAAEC,MAAO,OAAQG,OAAQ,UAC3F,GAEJ,mBAAGL,UAAU,wCAAwCC,MAAO,CAAE8Q,OAAQ,EAAGD,QAAS,EAAGF,SAAU,QAASI,WAAY,QAASO,UAAW,QAAxI,SAAoJ/O,EAAayC,SACjK,mBAAGjF,UAAU,wCAAwCC,MAAO,CAAE8Q,OAAQ,EAAGD,QAAS,EAAGF,SAAU,QAASI,WAAY,QAASO,UAAW,QAAxI,SAAoJ/O,EAAa0C,kBAC/H1F,IAAhCgD,EAAamC,YAAY,GACvB,qBAAKxE,IAAKqC,EAAamC,YAAY,GAAGuM,OAAQlR,UAAU,OAAOC,MAAO,CAAEC,MAAO,OAAQG,OAAQ,OAAQkR,UAAW,UAClH,WAGsB/R,IAA5BgD,EAAakC,QAAQ,SAAoDlF,IAAhCgD,EAAamC,YAAY,GAChE,sBAAK3E,UAAU,6EAA6EC,MAAO,CAAE2Q,SAAU,OAAQjF,IAAK,QAASgF,MAAO,QAAS9G,OAAQ,KAAMuH,MAAO,QAA1K,cAAqL,uBAAMnR,MAAO,CAAE6Q,QAAS,EAAGC,OAAQ,EAAGC,WAAY,QAAlD,UAA6DxO,EAAakC,QAAQ,GAAG9B,OAArF,OAAiGJ,EAAamC,YAAY,GAAG/B,aAClT,IAEuB,IAA1BJ,EAAac,SACV,sBAAKrD,MAAO,CAAEiQ,SAAU,WAAYQ,OAAQ,QAASC,MAAO,QAAS9G,OAAQ,GAAKzJ,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAzK,UACI,sBAAMG,EAAE,mNAAmNH,KAAK,YAChO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,iNAAiNH,KAAK,YAC9N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,uMAAuMH,KAAK,YACpN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,8MAA8MH,KAAK,YAC3N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,8MAA8MH,KAAK,YAC3N,sBAAMG,EAAE,iNAAiNH,KAAK,YAC9N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,qNAAqNH,KAAK,eAEtO,sBAAKN,MAAO,CAAEiQ,SAAU,WAAYQ,OAAQ,QAASC,MAAO,QAAS9G,OAAQ,GAAKzJ,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAzK,UACI,sBAAMG,EAAE,mNAAmNH,KAAK,YAChO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,iNAAiNH,KAAK,YAC9N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,uMAAuMH,KAAK,YACpN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,2MAA2MH,KAAK,YACxN,sBAAMG,EAAE,8MAA8MH,KAAK,YAC3N,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,gNAAgNH,KAAK,YAC7N,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,oNAAoNH,KAAK,YACjO,sBAAMG,EAAE,uNAAuNH,KAAK,YACpO,sBAAMG,EAAE,8MAA8MH,KAAK,YAC3N,sBAAMG,EAAE,iNAAiNH,KAAK,YAC9N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,kNAAkNH,KAAK,YAC/N,sBAAMG,EAAE,qNAAqNH,KAAK,gBAK/M,IAA1BiC,EAAac,SACV,sBAAKrD,MAAO,CAAEiQ,SAAU,WAAYvE,IAAK,QAAShC,KAAM,OAAQE,OAAQ,GAAKzJ,MAAM,6BAA6BF,MAAM,KAAKG,OAAO,MAAMC,QAAQ,aAAaC,KAAK,OAAlK,UACI,sBAAMQ,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,2NAElD,sBAAMA,EAAE,w7DAAw7DH,KAAK,UAAUU,KAAK,mCACp9D,sBAAMF,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,wNAElD,sBAAMA,EAAE,s5DAAs5DH,KAAK,UAAUU,KAAK,mCACl7D,sBAAMF,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,0NAElD,sBAAMA,EAAE,o6DAAo6DH,KAAK,UAAUU,KAAK,mCACh8D,sBAAMF,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,0NAElD,sBAAMA,EAAE,o6DAAo6DH,KAAK,UAAUU,KAAK,sCAEp8D,sBAAKhB,MAAO,CAAEiQ,SAAU,WAAYvE,IAAK,QAAShC,KAAM,OAAQE,OAAQ,GAAKzJ,MAAM,6BAA6BF,MAAM,KAAKG,OAAO,MAAMC,QAAQ,aAAaC,KAAK,OAAlK,UACI,sBAAMQ,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,2NAElD,sBAAMA,EAAE,w7DAAw7DH,KAAK,UAAUU,KAAK,mCACp9D,sBAAMF,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,wNAElD,sBAAMA,EAAE,s5DAAs5DH,KAAK,UAAUU,KAAK,mCACl7D,sBAAMF,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,0NAElD,sBAAMA,EAAE,o6DAAo6DH,KAAK,UAAUU,KAAK,mCACh8D,sBAAMF,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,0NAElD,sBAAMA,EAAE,o6DAAo6DH,KAAK,UAAUU,KAAK,8CC9Kz8DsF,gBATS,SAAC7C,GAAD,MAAY,CAChCrB,eAAgBqB,EAAMrB,eACtBC,SAAUoB,EAAMpB,SAChBC,eAAgBmB,EAAMnB,eACtBC,aAAckB,EAAMlB,gBAKT+D,EA7HA,SAACZ,GAEZ,IAKI6L,EALJ,EAA0CvT,oBAAS,GAAnD,mBACA,GADA,UACwCA,mBAAS,KAAjD,mBAEMkL,GAFN,UAEuExD,EAAjEwD,MAAM9G,EAA2DsD,EAA3DtD,eAAgBC,EAA2CqD,EAA3CrD,SAAUC,EAAiCoD,EAAjCpD,eAAgBC,EAAiBmD,EAAjBnD,aAMtD1D,qBAAU,WACN2S,KAAWC,OAAOlH,SAASC,eAAe,WAAY,CAAEkH,QAAS,MAAQxS,MACrE,SAAUyS,GACNJ,EAAUI,EAEVpH,SAASC,eAAe,WAAWtK,IAAMqR,KAIpC,UAATrI,IACA7H,QAAQC,IAAIc,GACiB,KAAzBA,EAAekC,OAA6C,KAA7BlC,EAAegC,WAAgD,KAA5BhC,EAAe+B,UAA4C,KAAzB/B,EAAeoC,OAA0C,KAA1BpC,EAAeO,QAA8C,KAA7BP,EAAeiC,WAA8C,KAA1BjC,EAAemC,QACrNgG,SAASC,eAAe,gBAAgBC,UAAW,EACnDF,SAASC,eAAe,gBAAgBxK,MAAM2J,QAAU,MAGxDY,SAASC,eAAe,gBAAgBC,UAAW,EACnDF,SAASC,eAAe,gBAAgBxK,MAAM2J,QAAU,QAGnD,aAATT,IACA7H,QAAQC,IAAIe,GACU,KAAlBA,EAASS,MAAmC,KAApBT,EAAS3E,QACjC6M,SAASC,eAAe,gBAAgBC,UAAW,EACnDF,SAASC,eAAe,gBAAgBxK,MAAM2J,QAAU,MAExDY,SAASC,eAAe,gBAAgBC,UAAW,EACnDF,SAASC,eAAe,gBAAgBxK,MAAM2J,QAAU,QAGnD,mBAATT,IACA7H,QAAQC,IAAIgB,GACmB,KAA3BA,EAAeyC,SAA6C,KAA3BzC,EAAemC,SAAiD,KAA/BnC,EAAeoC,aAA+C,KAAzBpC,EAAegC,OAA6C,KAA7BhC,EAAeuC,WAAqD,KAAjCvC,EAAewC,eAAgD,KAAxBxC,EAAeqC,MAAwC,KAAzBrC,EAAesC,OAC7P2F,SAASC,eAAe,gBAAgBC,UAAW,EACnDF,SAASC,eAAe,gBAAgBxK,MAAM2J,QAAU,MAExDY,SAASC,eAAe,gBAAgBC,UAAW,EACnDF,SAASC,eAAe,gBAAgBxK,MAAM2J,QAAU,QAGnD,iBAATT,IACA7H,QAAQC,IAAIiB,GACRA,EAAawC,UAAY,IAA+B,KAAzBxC,EAAakC,SAA+C,KAA7BlC,EAAamC,aAA4C,KAAtBnC,EAAaO,MAAuC,KAAxBP,EAAayC,QAA6C,KAA5BzC,EAAa0C,YACxKsF,SAASC,eAAe,gBAAgBC,UAAW,EACnDF,SAASC,eAAe,gBAAgBxK,MAAM2J,QAAU,MAExDY,SAASC,eAAe,gBAAgBC,UAAW,EACnDF,SAASC,eAAe,gBAAgBxK,MAAM2J,QAAU,WA0BpE,OACI,sBAAK7I,GAAG,gBAAgBd,MAAO,CAAE4R,SAAU,UAA3C,UACI,qBAAK7R,UAAU,6BAA6Be,GAAG,UAAUZ,IAAKqR,IAC9D,qBAAKxR,UAAU,iCAAf,SACI,wBAAQA,UAAU,iGAAiGe,GAAG,eAAe+Q,SAAS,WAAW3L,QAjBhJ,WACjBsL,KAAWC,OAAOlH,SAASC,eAAe,WAAY,CAAEkH,QAAS,MAC5DxS,MAAK,SAAUyS,GAEZ,IAAIG,EAAOvH,SAASwH,cAAc,KAClCD,EAAKD,SAAL,UAAmB3I,EAAnB,SACA4I,EAAK7Q,KAAO0Q,EACZG,EAAKE,YAUL,0BAEJ,qBAAKjS,UAAU,eACf,sBAAKC,MAAK,cAAIiQ,SAAU,QAASvE,IAAK,EAAGhC,KAAM,EAAGzJ,MAAO,SAAUG,OAAQ,UAAjE,WAAqF,YAA/F,UACI,qBAAKU,GAAG,UAAUd,MAAO,CAAEC,MAAO,SAAUG,OAAQ,SAAU6P,SAAU,WAAYvE,IAAK,IAAK9B,QAAS,IAAvG,SACe,UAATV,EACE,cAAC,GAAD,IACU,aAATA,EACG,cAAC,GAAD,IACU,mBAATA,EACG,cAAC,GAAD,IACU,iBAATA,EACG,cAAC,GAAD,IACA,KAGpB,qBAAKnJ,UAAU,eAAeC,MAAK,cAAIiQ,SAAU,QAASvE,IAAK,EAAGhC,KAAM,EAAGzJ,MAAO,SAAUG,OAAQ,UAAjE,WAAqF,uBCpFzH6R,I,OA3BA,SAACvM,GAEZ,IAAIwM,GAAS,EAEb,OACI,sBAAKpR,GAAG,SAASf,UAAU,YAA3B,UAEI,wBAAOA,UAAU,eAAjB,UACI,uBAAO4D,KAAK,WAAWuC,QAAS,SAAAqC,GAGxB2J,GADW,IAAXA,EAOJxM,EAAM8C,QAAQ0J,MAElB,sBAAMnS,UAAU,oBAEpB,sBAAMA,UAAU,6BAAhB,8BCuHGuG,gBALS,SAAC7C,GAAD,MAAY,KAKrB6C,EAxIQ,SAACZ,GAEpB7G,qBAAU,WAEN,GADQ0K,OAAOC,WAAW,uBACpBC,QAAS,CACX,IAAI0I,EAAO5H,SAAS6H,uBAAuB,QAC3C1M,EAAM2M,cAAcF,EAAK,GAAG9G,WAC5BhK,QAAQC,IAAI,oBAIjB,IAEH,IAAIgR,EAAQ,GACRC,EAAO,GACP5P,EAAS,GACT4B,EAAS,GACTF,EAAY,GACZC,EAAQ,GACRE,EAAQ,GACRnB,GAAW,EAEf,EAA8CrF,mBAAS,IAAvD,mBACA,GADA,UAC4CA,mBAAS,KAArD,mBAEIwU,GAFJ,UAEmB,SAACF,EAAOC,EAAM5P,EAAQ0B,EAAWC,EAAOC,EAAQC,EAAOnB,GACtEqC,EAAMwJ,SAAS,CACXvL,KAAM,kBAAmBC,QAAS,CAAE,UAAa0O,EAAO,SAAYC,EAAM,OAAU5P,EAAQ,UAAa0B,EAAW,MAASC,EAAO,OAAUC,EAAQ,MAASC,EAAO,SAAYnB,OAkF1L,OAEI,gCACI,cAAC,GAAD,CAAQmF,QATM,SAACiF,GACnBpM,QAAQC,IAAImM,GAEZ+E,EAAaF,EAAOC,EAAM5P,EAAQ0B,EAAWC,EAAOC,EAAQC,EAD5DnB,EAAWoK,MAQP,cAAC,EAAD,CAAO/F,MAAO,SAAUc,QA5CZ,SAACiF,GAGjB+E,EAAaF,EAAOC,EADpB5P,EAAS8K,EACyBpJ,EAAWC,EAAOC,EAAQC,EAAOnB,IAyCfM,KAAM,SACtD,cAAC,EAAD,CAAO+D,MAAO,eAAac,QAtCZ,SAACiF,GAEpB+E,EAAaF,EAAOC,EAAM5P,EAD1B0B,EAAYoJ,EACiCnJ,EAAOC,EAAQC,EAAOnB,IAoCTM,KAAM,SAC5D,cAAC,EAAD,CAAO+D,MAAO,QAASc,QAnCZ,SAACiF,GAEhB,IAAIZ,EAAM,IAAIC,KAAJ,UAAYW,EAAZ,WAENV,EAAMF,EAAIG,UACVD,EAAM,KACNA,EAAG,WAAOA,IAEd,IAAIE,EAAMJ,EAAIK,WAAa,EACvBD,EAAM,KACNA,EAAG,WAAOA,IAEd,IAAId,EAAOU,EAAIM,cAEf7I,EAAK,UAAMyI,EAAN,YAAaE,EAAb,YAAoBd,GAEzBqG,EAAaF,EAAOC,EAAM5P,EAAQ0B,EAAWC,EAAOC,EAAQC,EAAOnB,IAmBjBM,KAAM,SAEpD,cAAC,EAAD,CAAO+D,MAAO,QAASc,QAlBZ,SAACiF,GAEhB+E,EAAaF,EAAOC,EAAM5P,EAAQ0B,EAAWC,EAAOC,EADpDC,EAAQiJ,EAC2DpK,IAgBjBM,KAAM,aAEpD,cAAC,EAAD,CAAO+D,MAAO,gBAAiBc,QAxFhB,SAACiF,GACpB,IAAM2B,EAAO3B,EAASvM,OAAOyH,MAAM,GACnC,QAAapJ,IAAT6P,EAAoB,CACpB,IAAMqD,EAAS,IAAIC,WACnBD,EAAOE,cAAcvD,GACrBqD,EAAOG,UAAY,WACfN,EAAQG,EAAOI,OACfL,EAAaF,EAAOC,EAAM5P,EAAQ0B,EAAWC,EAAOC,EAAQC,EAAOnB,MAiFbM,KAAM,SAEhE,cAAC,EAAD,CAAO+D,MAAO,mBAAoBc,QA5EpB,SAACiF,GACnB,IAAM2B,EAAO3B,EAASvM,OAAOyH,MAAM,GACnC,QAAapJ,IAAT6P,EAAoB,CACpB,IAAMqD,EAAS,IAAIC,WACnBD,EAAOE,cAAcvD,GACrBqD,EAAOG,UAAY,WACfL,EAAOE,EAAOI,OACdL,EAAaF,EAAOC,EAAM5P,EAAQ0B,EAAWC,EAAOC,EAAQC,EAAOnB,MAqEXM,KAAM,SAElE,cAAC,EAAD,CAAO+D,MAAO,uBAAqBc,QAlEvB,SAACiF,GACjB,IAAM2B,EAAO3B,EAASvM,OAAOyH,MAAM,GACnC,QAAapJ,IAAT6P,EAAoB,CACpB,IAAMqD,EAAS,IAAIC,WACnBD,EAAOE,cAAcvD,GACrBqD,EAAOG,UAAY,WACfrO,EAASkO,EAAOI,OAChBL,EAAaF,EAAOC,EAAM5P,EAAQ0B,EAAWC,EAAOC,EAAQC,EAAOnB,MA2DZM,KAAM,SAGjE,qBAAK5D,UAAU,eCpCZuG,gBAPS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,IACXD,gBAAiBU,EAAMV,mBAKZuD,EA3FW,SAACZ,GAEvB,IAAM3C,EAAyB2C,EAAzB3C,gBAAiBC,EAAQ0C,EAAR1C,IAEvB,EAAkChF,mBAAS,IAA3C,mBAAO8U,EAAP,KAAkBC,EAAlB,KACA,EAAkC/U,mBAAS,IAA3C,mBAAOgV,EAAP,KAAkBC,EAAlB,KACA,EAAwCjV,mBAAS,IAAjD,mBAAOkV,EAAP,KAAqBC,EAArB,KAEA,EAA8BnV,mBAAS,IAAvC,mBAAOiL,EAAP,KAAgBgB,EAAhB,KACA,EAAsCjM,mBAAS,IAA/C,mBAAOqM,EAAP,KAAoBC,EAApB,KACA,EAA8BtM,mBAAS,IAAvC,mBAAOsH,EAAP,KAAgB8E,EAAhB,KAGAvL,qBAAU,WACY,KAAdmU,GAAkC,KAAdF,GAAqC,KAAjBI,GACxC3I,SAASC,eAAe,eAAeC,UAAW,EAClDF,SAASC,eAAe,eAAexK,MAAM2J,QAAU,MAEvDY,SAASC,eAAe,eAAeC,UAAW,EAClDF,SAASC,eAAe,eAAexK,MAAM2J,QAAU,SAE5D,CAACmJ,EAAWE,EAAWE,IAyC1B,OACI,8BACI,sBAAKnT,UAAU,iGAAf,UACI,cAAC,EAAD,CAAQmJ,KAAMmB,EAAapB,QAASA,EAAS3D,QAASA,EAASkD,QAAS4B,EAAYjB,SAAU,MAC9F,sBAAKpJ,UAAU,sFAAf,UACI,oBAAIA,UAAU,uCAAd,mCACA,cAAC,EAAD,CAAO4D,KAAM,WAAY+D,MAAO,uBAAqBc,QAASuK,IAC9D,cAAC,EAAD,CAAOpP,KAAM,WAAY+D,MAAO,sBAAoBc,QAASyK,IAC7D,cAAC,EAAD,CAAOtP,KAAM,WAAY+D,MAAO,0BAAwBc,QAAS2K,IACjE,sBAAKpT,UAAU,qCAAf,UACI,wBAAQA,UAAU,6KAA6KmG,QAAS,WACpMR,EAAM0N,cAAa,GACnB1N,EAAM2N,iBAAgB,IAF1B,sBAIA,wBAAQvS,GAAG,cAAcf,UAAU,8HAA8HmG,QArD3J,WAEtB,GAAI4M,IAAc/P,EAAgBuQ,KAC9BrJ,EAAW,yCACXK,EAAe,SACfF,EAAW,QACR,GAAI4I,IAAcE,EACrBjJ,EAAW,8CACXK,EAAe,SACfF,EAAW,QACR,GAAI0I,IAAcE,GAAaA,IAAcE,EAChDjJ,EAAW,uEACXK,EAAe,SACfF,EAAW,OAEV,CACD,IAAIlG,EAAU,CACVqP,KAAMxQ,EAAgBiB,IACtBgP,UAAWA,GAEflU,MAAM,GAAD,OAAIkE,EAAJ,sBAA6B,CAC9BjE,OAAQ,MACRC,KAAM4L,KAAKhM,UAAUsF,GACrBjF,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAC,GACxB8K,EAAW,uCACXK,EAAe,SACfF,EAAW,GACX1E,EAAMwJ,SAAS,CAAEvL,KAAM,qBAAsBC,QAASzE,IACtDuG,EAAM0N,cAAa,GACnB1N,EAAM2N,iBAAgB,QAqBd,iDCzBT/M,gBALS,SAAC7C,GAAD,MAAY,CAChCV,gBAAiBU,EAAMV,mBAIZuD,EApDO,SAACZ,GAEnB,IAAM3C,EAAoB2C,EAApB3C,gBACN,EAAwC/E,oBAAS,GAAjD,mBAAOwV,EAAP,KAAqBC,EAArB,KACA,EAAwCzV,oBAAS,GAAjD,mBAAO0V,EAAP,KAAqBC,EAArB,KAOA,OACI,sBAAK5T,UAAU,kBAAf,UACI,sBAAKA,UAAU,oCAAoCmG,QAAS,WAAQuN,GAAiBD,IAArF,UACI,qBAAKzT,UAAU,kCAAkCC,MAAO,CAAE2F,WAAW,OAAD,OAAS5C,EAAgBoE,OAAzB,0BAAyDC,eAAgB,eAG7I,qBAAKrH,UAAU,kBAAf,SACI,mBAAGA,UAAU,iEAAb,SAA+EgD,EAAgBsE,mBAGnG,yBAAQtH,UAAU,QAAlB,cAA6B,qBAAKI,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SAEzB,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,2BAI5E+S,EACG,sBAAKzT,UAAU,+EAAf,UACI,mBAAGA,UAAU,4DAA4DmG,QAAS,kBAAMyN,GAAgB,IAAxG,mCACA,mBAAG5T,UAAU,8DAA8DmG,QAxBtE,WACjBR,EAAMwJ,SAAS,CAAEvL,KAAM,mBAuBX,iCAGJ,KAGH+P,EACG,cAAC,GAAD,CAAmBN,aAAcO,EAAiBN,gBAAiBI,IACjE,WC8CHG,GApFK,WAEhB,MAAwB5V,mBAAS,WAAjC,mBAAOgI,EAAP,KAAaC,EAAb,KASA,OACI,8BACI,sBAAKlG,UAAU,sBAAf,UACI,sBAAKA,UAAU,qFAAf,UACI,sBAAKA,UAAU,4CAAf,UACI,cAAC,IAAD,CAAS6F,GAAI,CAAEC,SAAU,KAAzB,SAAgC,sBAAK1F,MAAM,6BAA6BF,MAAM,KAAKG,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAxF,UAC5B,sBAAMG,EAAE,gNAAgNE,OAAO,UAAUI,YAAY,YACrP,sBAAMR,SAAS,UAAUC,SAAS,UAAUC,EAAE,isBAAisBH,KAAK,YACpvB,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,+/CAA+/CH,KAAK,YACljD,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,+UAA+UH,KAAK,iBAGtY,qBAAKP,UAAU,YAAYmG,QApB5B,WAEXD,EADS,YAATD,EACQ,UAEA,YAgBI,SACe,YAATA,EACE,qBAAK7F,MAAM,6BAA6BJ,UAAU,kDAAkDO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA3I,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAY,IAAIN,EAAE,6BAEzE,qBAAKN,MAAM,6BAA6BJ,UAAU,mDAAmDO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,GAA5I,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,gCAKrF,qBAAKV,UAAU,8BAAf,SAEI,cAAC,GAAD,SAcM,YAATiG,EACG,GACA,sBAAKjG,UAAU,qDAAf,UAEI,eAAC,IAAD,CAASmG,QAAS,WAAQD,EAAQ,YAAclG,UAAU,gHAAgH6F,GAAI,CAAEC,SAAU,SAAUM,WAAY,eAAhN,UACI,qBAAKhG,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,gKAF/E,kBAIA,eAAC,IAAD,CAASyF,QAAS,SAACqC,GAAQtC,EAAQ,YAAclG,UAAU,+GAA+G6F,GAAI,CAAEC,SAAU,SAAUM,WAAY,kBAAhN,UACI,qBAAKhG,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,wFAF/E,wBAIA,eAAC,IAAD,CAASyF,QAAS,SAACqC,GAAQtC,EAAQ,YAAclG,UAAU,+GAA+G6F,GAAI,CAAEC,SAAU,SAAUM,WAAY,eAAhN,UACI,qBAAKhG,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,6HAF/E,kBAIA,eAAC,IAAD,CAASyF,QAAS,SAACqC,GAAQtC,EAAQ,YAAclG,UAAU,+GAA+G6F,GAAI,CAAEC,SAAU,SAAUM,WAAY,cAAhN,UACI,qBAAKhG,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,2HAF/E,iBAIA,eAAC,IAAD,CAASyF,QAAS,SAACqC,GAAQtC,EAAQ,YAAclG,UAAU,+GAA+G6F,GAAI,CAAEC,SAAU,SAAUM,WAAY,qBAAhN,UACI,qBAAKhG,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,6QAF/E,gBAIA,cAAC,IAAD,CAASyF,QAAS,SAACqC,GAAQtC,EAAQ,YAAcL,GAAI,CAAEC,SAAU,KAAO9F,UAAU,wEAAlF,kCCVbuG,gBALS,SAAC7C,GAAD,MAAY,KAKrB6C,EA9DE,SAACZ,GAEd,IAAI5C,EAAO,GACPpF,EAAS,GACT2F,GAAW,EAEfxE,qBAAU,WACN,IAAIsT,EAAO5H,SAAS6H,uBAAuB,QAC3C1M,EAAM2M,cAAcF,EAAK,GAAG9G,aAC7B,IAEH,MAAoCrN,mBAAS,IAA7C,mBAEIwU,GAFJ,UAEmB,SAAC1P,EAAMpF,EAAQ2F,GAC9BqC,EAAMwJ,SAAS,CACXvL,KAAM,WAAYC,QAAS,CAAE,KAAQd,EAAM,OAAUpF,EAAQ,SAAY2F,OA+BjF,OAEI,gCACI,cAAC,GAAD,CAAQmF,QATM,SAACiF,GACnBpM,QAAQC,IAAImM,GAEZ+E,EAAa1P,EAAMpF,EADnB2F,EAAWoK,MAQP,cAAC,EAAD,CAAO/F,MAAO,uBAAwBc,QAjB1B,SAACiF,GACjBpM,QAAQC,IAAImM,GAEZ+E,EAAa1P,EADbpF,EAAS+P,EACkBpK,IAcuCM,KAAM,SACpE,cAAC,EAAD,CAAO+D,MAAO,qBAAsBc,QAjC1B,SAACiF,GACf,IAAM2B,EAAO3B,EAASvM,OAAOyH,MAAM,GACnC,QAAapJ,IAAT6P,EAAoB,CACpB,IAAMqD,EAAS,IAAIC,WACnBD,EAAOE,cAAcvD,GACrBqD,EAAOG,UAAY,WACf9P,EAAO2P,EAAOI,OACdxR,QAAQC,IAAIwB,GACZ0P,EAAa1P,EAAMpF,EAAQ2F,MAyB2BM,KAAM,SAChE,qBAAK5D,UAAU,eCsGZuG,gBANS,SAAC7C,GAAD,MAAY,CAChChB,SAAUgB,EAAMhB,SAChBO,IAAKS,EAAMT,OAIAsD,EA3JQ,SAACZ,GAEpB,IAAM1C,EAAQ0C,EAAR1C,IAGNnE,qBAAU,WACN,IAAIsT,EAAO5H,SAAS6H,uBAAuB,QAC3C1M,EAAM2M,cAAcF,EAAK,GAAG9G,aAC7B,IAEH,MAA8BrN,mBAAS,IAAvC,mBAAOkE,EAAP,KAAgB2R,EAAhB,KACA,EAAgD7V,mBAAS,IAAzD,mBAAO8V,EAAP,KAAyBC,EAAzB,KAEItP,EAAU,GACVC,EAAc,GACdC,EAAO,GACPL,EAAQ,GACRM,EAAQ,GACRC,EAAY,GACZC,EAAgB,GACpB,EAA4C9G,mBAAS,IAArD,mBAAOgW,EAAP,KAAuBC,EAAvB,KAEI5Q,GAAW,EAEfxE,qBAAU,WAENC,MAAM,GAAD,OAAIkE,EAAJ,kBAAyB,CAC1BjE,OAAQ,QACTG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAgD,GACFb,QAAQC,IAAIY,GACZ2R,EAAW3R,GACX6R,EAAoB7R,MACrBhD,MAAK,iBAIb,IACHL,qBAAU,WACN2T,EAAa/N,EAASC,EAAaJ,EAAOK,EAAMC,EAAOC,EAAWC,EAAekP,EAAgB3Q,KAClG,CAAC2Q,IAEJ,IAAMvR,EAAaiD,EAAbjD,SAEF+P,EAAe,SAAC/N,EAASC,EAAaJ,EAAOK,EAAMC,EAAOC,EAAWC,EAAekP,EAAgB3Q,GAEpGqC,EAAMwJ,SAAS,CACXvL,KAAM,kBAAmBC,QAAS,CAAE,QAAWa,EAAS,YAAeC,EAAa,MAASJ,EAAO,KAAQK,EAAM,MAASC,EAAO,UAAaC,EAAW,cAAiBC,EAAe,QAAWkP,EAAgB,SAAY3Q,MAmFzO,OACI,gCACI,cAAC,GAAD,CAAQmF,QA9DM,SAACiF,GAInB+E,EAAa/N,EAASC,EAAaJ,EAAOK,EAAMC,EAAOC,EAAWC,EAAekP,EAFjF3Q,EAAWoK,MA6DP,cAAC,EAAD,CAAO/F,MAAO,UAAWC,aAAc,mBAAoBhE,KAAM,SAAUiE,SAAUnF,EAAU+F,QAnFhF,SAACiF,GACpBwG,EAAkBxR,EAASqB,QAAO,SAAArD,GAAC,OAAIA,EAAEuD,MAAQyJ,MACjDsG,EAAoB7R,EAAQ4B,QAAO,SAAAoQ,GAAE,OAAIA,EAAGnP,UAAY0I,SAkFpD,cAAC,EAAD,CAAO/F,MAAO,eAAgB/D,KAAM,SAAUgE,aAAc,kBAAmBC,SAAUkM,EAAkBtL,QA7E5F,SAACiF,GACpBpM,QAAQC,IAAI0S,GACZ3S,QAAQC,IAAImM,GACZhJ,EAAUvC,EAAQ4B,QAAO,SAAAoQ,GAAE,OAAIA,EAAGlQ,MAAQyJ,KAE1C+E,EAAa/N,EAASC,EAAaJ,EAAOK,EAAMC,EAAOC,EAAWC,EAAekP,EAAgB3Q,MAyE7F,cAAC,EAAD,CAAOqE,MAAO,mBAAoB/D,KAAM,SAAUgE,aAAc,oBAAqBC,SAAUkM,EAAkBtL,QAvE9F,SAACiF,GAExBpM,QAAQC,IAAImM,GACZ/I,EAAcxC,EAAQ4B,QAAO,SAAAoQ,GAAE,OAAIA,EAAGlQ,MAAQyJ,KAC9C+E,EAAa/N,EAASC,EAAaJ,EAAOK,EAAMC,EAAOC,EAAWC,EAAekP,EAAgB3Q,MAoE7F,cAAC,EAAD,CAAOqE,MAAO,QAAS/D,KAAM,OAAQ6E,QAlC1B,SAACiF,GAEhB,IAAIZ,EAAM,IAAIC,KAAJ,UAAYW,EAAZ,WAENV,EAAMF,EAAIG,UACVD,EAAM,KACNA,EAAG,WAAOA,IAEd,IAAIE,EAAMJ,EAAIK,WAAa,EACvBD,EAAM,KACNA,EAAG,WAAOA,IAGd3I,EAAK,UAAMyI,EAAN,YAAaE,GAClBuF,EAAa/N,EAASC,EAAaJ,EAAOK,EAAMC,EAAOC,EAAWC,EAAekP,EAAgB3Q,MAqB7F,cAAC,EAAD,CAAOqE,MAAO,OAAQ/D,KAAM,OAAQ6E,QAlB1B,SAACiF,GACfpM,QAAQC,IAAImM,GAEZ+E,EAAa/N,EAASC,EAAaJ,EADnCK,EAAO8I,EACyC7I,EAAOC,EAAWC,EAAekP,EAAgB3Q,MAgB7F,cAAC,EAAD,CAAOqE,MAAO,eAAa/D,KAAM,OAAQ6E,QAd9B,SAACiF,GAChBpM,QAAQC,IAAImM,GAEZ+E,EAAa/N,EAASC,EAAaJ,EAAOK,EAD1CC,EAAQ6I,EAC+C5I,EAAWC,EAAekP,EAAgB3Q,MAY7F,cAAC,EAAD,CAAOqE,MAAO,wBAAyBc,QA/DxB,SAACiF,GACpB,IAAM2B,EAAO3B,EAASvM,OAAOyH,MAAM,GACnC,QAAapJ,IAAT6P,EAAoB,CACpB,IAAMqD,EAAS,IAAIC,WACnBD,EAAOE,cAAcvD,GACrBqD,EAAOG,UAAY,WACf/N,EAAY4N,EAAOI,OACnBL,EAAa/N,EAASC,EAAaJ,EAAOK,EAAMC,EAAOC,EAAWC,EAAekP,EAAgB3Q,MAwDnCM,KAAM,SACxE,cAAC,EAAD,CAAO+D,MAAO,4BAA6Bc,QAlDxB,SAACiF,GACxB,IAAM2B,EAAO3B,EAASvM,OAAOyH,MAAM,GACnC,QAAapJ,IAAT6P,EAAoB,CACpB,IAAMqD,EAAS,IAAIC,WACnBD,EAAOE,cAAcvD,GACrBqD,EAAOG,UAAY,WACf9N,EAAgB2N,EAAOI,OACvBL,EAAa/N,EAASC,EAAaJ,EAAOK,EAAMC,EAAOC,EAAWC,EAAekP,EAAgB3Q,MA2C3BM,KAAM,SAChF,qBAAK5D,UAAU,eCvBZuG,gBANS,SAAC7C,GAAD,MAAY,CAChChB,SAAUgB,EAAMhB,SAChBO,IAAKS,EAAMT,OAIAsD,EAtHM,SAACZ,GAElB,IAAM1C,EAAQ0C,EAAR1C,IAGNnE,qBAAU,WACN,IAAIsT,EAAO5H,SAAS6H,uBAAuB,QAC3C1M,EAAM2M,cAAcF,EAAK,GAAG9G,aAC7B,IAEH,MAA8BrN,mBAAS,IAAvC,mBAAOkE,EAAP,KAAgB2R,EAAhB,KACA,EAAgD7V,mBAAS,IAAzD,mBAAO8V,EAAP,KAAyBC,EAAzB,KAEItP,EAAU,GACVC,EAAc,GACdM,EAAS,GACTC,EAAa,GACbnC,EAAO,GAEX,EAA4C9E,mBAAS,IAArD,mBAAOgW,EAAP,KAAuBC,EAAvB,KAEI5Q,GAAW,EAEfxE,qBAAU,WAENC,MAAM,GAAD,OAAIkE,EAAJ,kBAAyB,CAC1BjE,OAAQ,QACTG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAgD,GACFb,QAAQC,IAAIY,GACZ2R,EAAW3R,GACX6R,EAAoB7R,MACrBhD,MAAK,iBAIb,IACHL,qBAAU,WACN2T,EAAa/N,EAASC,EAAaM,EAAQC,EAAYnC,EAAMkR,EAAgB3Q,KAC9E,CAAC2Q,IAEJ,IAAMvR,EAAaiD,EAAbjD,SAEF+P,EAAe,SAAC/N,EAASC,EAAaM,EAAQC,EAAYnC,EAAMkR,EAAgB3Q,GAEhFqC,EAAMwJ,SAAS,CACXvL,KAAM,gBAAiBC,QAAS,CAAE,QAAWa,EAAS,YAAeC,EAAa,OAAUM,EAAQ,WAAcC,EAAY,KAAQnC,EAAM,QAAWkR,EAAgB,SAAY3Q,MAoD3L,OACI,gCACI,cAAC,GAAD,CAAQmF,QAhCM,SAACiF,GAInB+E,EAAa/N,EAASC,EAAaM,EAAQC,EAAYnC,EAAMkR,EAF7D3Q,EAAWoK,MA+BP,cAAC,EAAD,CAAO/F,MAAO,UAAWC,aAAc,mBAAoBhE,KAAM,SAAUiE,SAAUnF,EAAU+F,QApDhF,SAACiF,GACpBpM,QAAQC,IAAImM,GACZwG,EAAkBxR,EAASqB,QAAO,SAAArD,GAAC,OAAIA,EAAEuD,MAAQyJ,MACjDsG,EAAoB7R,EAAQ4B,QAAO,SAAAoQ,GAAE,OAAIA,EAAGnP,UAAY0I,OAiDsEzF,QAAS,SACnI,cAAC,EAAD,CAAON,MAAO,eAAgB/D,KAAM,SAAUgE,aAAc,kBAAmBC,SAAUkM,EAAkBtL,QA/C5F,SAACiF,GACpBpM,QAAQC,IAAI0S,GACZ3S,QAAQC,IAAImM,GACZhJ,EAAUvC,EAAQ4B,QAAO,SAAAoQ,GAAE,OAAIA,EAAGlQ,MAAQyJ,KAE1C+E,EAAa/N,EAASC,EAAaM,EAAQC,EAAYnC,EAAMkR,EAAgB3Q,MA2CzE,cAAC,EAAD,CAAOqE,MAAO,mBAAoB/D,KAAM,SAAUgE,aAAc,oBAAqBC,SAAUkM,EAAkBtL,QAzC9F,SAACiF,GAExBpM,QAAQC,IAAImM,GACZ/I,EAAcxC,EAAQ4B,QAAO,SAAAoQ,GAAE,OAAIA,EAAGlQ,MAAQyJ,KAC9C+E,EAAa/N,EAASC,EAAaM,EAAQC,EAAYnC,EAAMkR,EAAgB3Q,MAsCzE,cAAC,EAAD,CAAOqE,MAAO,gBAAiB/D,KAAM,OAAQ6E,QAf3B,SAACiF,GAEvB+E,EAAa/N,EAASC,EADtBM,EAASyI,EACkCxI,EAAYnC,EAAMkR,EAAgB3Q,MAczE,cAAC,EAAD,CAAOqE,MAAO,oBAAqB/D,KAAM,OAAQ6E,QAZ3B,SAACiF,GAE3B+E,EAAa/N,EAASC,EAAaM,EADnCC,EAAawI,EAC0C3K,EAAMkR,EAAgB3Q,MAWzE,cAAC,EAAD,CAAOqE,MAAO,mBAAoBc,QAhCxB,SAACiF,GACf,IAAM2B,EAAO3B,EAASvM,OAAOyH,MAAM,GACnC,QAAapJ,IAAT6P,EAAoB,CACpB,IAAMqD,EAAS,IAAIC,WACnBD,EAAOE,cAAcvD,GACrBqD,EAAOG,UAAY,WACf9P,EAAO2P,EAAOI,OACdL,EAAa/N,EAASC,EAAaM,EAAQC,EAAYnC,EAAMkR,EAAgB3Q,MAyBzBM,KAAM,SAC9D,qBAAK5D,UAAU,eC/BZuG,gBANS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,OAKAsD,EArEW,SAACZ,GAEvB,MAAoC1H,mBAAS,IAA7C,mBAAOmW,EAAP,KAAmBC,EAAnB,KAIA,GAFc1O,EAAR1C,IAE8BhF,mBAAS,IAA7C,mBAAOqW,EAAP,KAAmBhC,EAAnB,KAoBA,OAhBAxT,qBAAU,WAEN,GADQ0K,OAAOC,WAAW,uBACpBC,QAAS,CACX,IAAI0I,EAAO5H,SAASC,eAAe,cACnC6H,EAAcF,EAAK9G,UAAY,QAGpC,CAAC8I,IACJtV,qBAAU,WACNuV,EAAc,WACf,IAEHvV,qBAAU,WACNwC,QAAQC,IAAI+S,KACb,CAACA,IAGA,8BAEI,qBAAKtU,UAAU,yGAAyGC,MAAO,CAAEsU,UAAU,GAAD,OAAKD,EAAL,OAA1I,SACI,sBAAKtU,UAAU,wCAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,CAAO4D,KAAM,SAAU+D,MAAO,iBAAkBc,QAAS4L,EAAexM,SAAU,CAAC,CAAE,OAAU,kBAAmB,IAAO,SAAW,CAAE,OAAU,WAAY,IAAO,YAAc,CAAE,OAAU,qBAAmB,IAAO,kBAAoB,CAAE,OAAU,kBAAmB,IAAO,qBAKjQ,UAAfuM,EACG,cAAC,GAAD,CAAgB9B,cAAeA,IACf,aAAf8B,EACG,cAAC,GAAD,CAAU9B,cAAeA,IACT,mBAAf8B,EACG,cAAC,GAAD,CAAgB9B,cAAeA,IACf,iBAAf8B,EACG,cAAC,GAAD,CAAc9B,cAAeA,IAC7B,MAGxB,sBAAKtS,UAAU,aAAf,UACI,qBAAKe,GAAG,eAEJ,cAAC,GAAD,CAAQoI,KAAMiL,EAAY9B,cAAeA,iBC0CtD/L,gBAJS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,OAGAsD,EApGD,SAACZ,GAEX,IAAI2I,EAAUC,cAERtL,EAAQ0C,EAAR1C,IAEN,EAA8BhF,mBAAS,GAAvC,mBAAOsH,EAAP,KAAgB8E,EAAhB,KACA,EAA8BpM,mBAAS,IAAvC,mBAAOiL,EAAP,KAAgBgB,EAAhB,KAEA,EAAwBjM,mBAAS,IAAjC,mBAAOuV,EAAP,KAAagB,EAAb,KACA,EAAwBvW,mBAAS,IAAjC,mBAAOsV,EAAP,KAAakB,EAAb,KAqCA,OACI,sBAAKzU,UAAU,0EAAf,UACI,sBAAKA,UAAU,gCAAgCI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAtI,UACI,sBAAMG,EAAE,0vCAA0vCH,KAAK,YACvwC,sBAAMG,EAAE,85CAA85CH,KAAK,YAC36C,sBAAMG,EAAE,m6CAAm6CH,KAAK,YACh7C,sBAAMG,EAAE,s5CAAs5CH,KAAK,eAEv6C,qBAAKP,UAAU,kCAAkCI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAxI,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,w1HAAw1HE,OAAO,UAAUI,YAAY,cAEv6H,sBAAKhB,UAAU,+DAAf,UACI,sBAAKI,MAAM,6BAA6BJ,UAAU,4BAA4BM,QAAQ,cAAcC,KAAK,OAAzG,UACI,sBAAMG,EAAE,+MAA+ME,OAAO,UAAUI,YAAY,YACpP,sBAAMR,SAAS,UAAUC,SAAS,UAAUC,EAAE,2rBAA2rBH,KAAK,YAC9uB,uBAAMQ,GAAG,4BAA4BgG,UAAU,iBAAiBC,EAAE,UAAUC,EAAE,WAAW/G,MAAM,KAAKG,OAAO,KAAKE,KAAK,QAArH,UACI,sBAAMA,KAAK,QAAQyG,EAAE,UAAUC,EAAE,WAAW/G,MAAM,KAAKG,OAAO,OAC9D,sBAAMG,SAAS,UAAUC,SAAS,UAAUC,EAAE,6/CAElD,sBAAMF,SAAS,UAAUC,SAAS,UAAUC,EAAE,w/CAAw/CH,KAAK,YAC3iD,sBAAMG,EAAE,ktOAAktOH,KAAK,UAAUU,KAAK,oCAC9uO,sBAAMP,EAAE,yTAAyTE,OAAO,UAAUI,YAAY,YAC9V,sBAAMR,SAAS,UAAUC,SAAS,UAAUC,EAAE,iVAAiVH,KAAK,eAGxY,cAAC,EAAD,CAAOqD,KAAM,OAAQ+D,MAAO,oBAAqBc,QAAS+L,IAC1D,cAAC,EAAD,CAAO5Q,KAAM,WAAY+D,MAAO,gBAAcc,QAASgM,IAcvD,wBAAQzU,UAAU,8DAA8DmG,QA3EtE,WAElB,GAAa,KAATqN,GAAwB,KAATD,EACfrJ,EAAW,wCACXG,EAAW,OAEV,CACD,IAAIlG,EAAU,CACVqP,KAAMA,EACND,KAAMA,GAGVxU,MAAM,GAAD,OAAIkE,EAAJ,kBAAyB,CAC1BjE,OAAQ,OACRC,KAAM4L,KAAKhM,UAAUsF,GACrBjF,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAgF,GACF7C,QAAQC,IAAI4C,GAEI,OAAZA,GACAkG,EAAW,GACXH,EAAW,wCAEXG,EAAW,GACX1E,EAAMwJ,SAAS,CAAEvL,KAAM,kBAAmBC,QAASM,IACnDmK,EAAQI,KAAK,gBA+CrB,kCAIJ,cAAC,EAAD,CAAQvF,KAAM,QAASD,QAASA,EAAS3D,QAASA,EAASkD,QAAS4B,EAAYjB,SAAU,YCvDvF7C,gBANS,SAAC7C,GAAD,MAAY,KAMrB6C,EAtCE,SAACZ,GAEd,MAA0B1H,mBAAS,IAAnC,mBAAOyW,EAAP,KAAcC,EAAd,KACA,EAA0B1W,mBAAS,IAAnC,mBAAO2W,EAAP,KAAcC,EAAd,KACA,EAA0B5W,mBAAS,IAAnC,mBAAO6W,EAAP,KAAcC,EAAd,KACA,EAAsB9W,mBAAS,IAA/B,mBAAO+O,EAAP,KAAYgI,EAAZ,KACA,EAAwB/W,mBAAS,IAAjC,mBAAO2G,EAAP,KAAaqQ,EAAb,KACA,EAA0BhX,mBAAS,IAAnC,6BAaA,OACI,gCACI,cAAC,EAAD,CAAO0J,MAAO,UAAWc,QAASkM,EAAU/Q,KAAM,SAClD,cAAC,EAAD,CAAO+D,MAAO,UAAWc,QAASoM,EAAUjR,KAAM,SAClD,cAAC,EAAD,CAAO+D,MAAO,UAAWc,QAASsM,EAAUnR,KAAM,SAClD,cAAC,EAAD,CAAO+D,MAAO,sBAAoBc,QAASuM,EAAQpR,KAAM,SACzD,cAAC,EAAD,CAAO+D,MAAO,sBAAuBc,QAASwM,EAASrR,KAAM,SAC7D,wBAAQ5D,UAAU,uDAAuDmG,QAlB7D,WAChBpH,MAAM,kCAAD,OAAmC2V,EAAnC,oBAAoDE,EAApD,qBAAsEE,EAAtE,gBAAmF9H,EAAnF,iBAA+FpI,EAA/F,iBAAoH,CACrH5F,OAAQ,QACTG,MAAK,SAAAI,GAAQ,OAAIA,EAASF,UACxBF,MAAK,SAAAC,GACFkC,QAAQC,IAAInC,GACZuG,EAAM8C,QAAQrJ,EAAE6D,SAYpB,+BC0EGsD,gBAPS,SAAC7C,GAAD,MAAY,CAChCP,SAAUO,EAAMP,SAChBC,YAAaM,EAAMN,eAKRmD,EArGgB,SAACZ,GAAW,IAAD,EAGlC6L,EADErO,EAA0BwC,EAA1BxC,SAAUC,EAAgBuC,EAAhBvC,YAEhB9B,QAAQC,IAAIoE,GAEZ,MAA8B1H,mBAAS,IAAvC,mBAAOkG,EAAP,KAAgB+Q,EAAhB,KAEApW,qBAAU,WACN,GAAiB,KAAbqE,EAAiB,CACjB,IAAI2J,EAAM3J,EAASY,QAAO,SAAAI,GAAO,OAAIA,EAAQF,MAAQb,EAAYC,cACjE6R,EAAWpI,MAGhB,CAAC1J,EAAYC,aAEhBvE,qBAAU,WACN2S,KAAWC,OAAOlH,SAASC,eAAe,eAAgB,CAAEkH,QAAS,MAAQxS,MACzE,SAAUyS,GACNJ,EAAUI,EACVpH,SAASC,eAAe,WAAWtK,IAAMqR,QAiBrD,OACI,gCACI,qBAAKxR,UAAU,2BAA2Be,GAAG,UAAUZ,IAAKqR,IAC5D,qBAAKxR,UAAU,iCAAf,SACI,2BAAQe,GAAG,kBAAkBf,UAAU,kGAAvC,oBAA2I,gBAA3I,0BAAmK,YAAnK,0BAfS,WACjByR,KAAWC,OAAOlH,SAASC,eAAe,eAAgB,CAAEkH,QAAS,MAChExS,MAAK,SAAUyS,GAEZ,IAAIG,EAAOvH,SAASwH,cAAc,KAClCD,EAAKD,SAAL,gBAAyB3N,EAAQ,GAAGmD,eAApC,SACAyK,EAAK7Q,KAAO0Q,EACZG,EAAKE,cAQL,8CAEJ,sBAAKjS,UAAU,YAAYC,MAAO,CAAEC,MAAO,SAAUG,OAAQ,UAA7D,UACI,qBAAKL,UAAU,0CAA0CC,MAAO,CAAEC,MAAO,SAAUG,OAAQ,YAC3F,qBAAKL,WAAoC,IAAzBoD,EAAYE,SAAoB,6BAA+B,wBAA/E,SACI,sBAAKvC,GAAG,cAAcf,UAAU,kCAAkCC,MAAO,CAAEC,MAAO,SAAUG,OAAQ,UAApG,UACI,sBAAKL,UAAU,wBAAwBI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAA9H,UACI,sBAAMQ,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,8NAElD,sBAAMA,EAAE,8+DAA8+DH,KAAK,UAAUU,KAAK,mCAC1gE,sBAAMF,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,kNAElD,sBAAMA,EAAE,65DAA65DH,KAAK,UAAUU,KAAK,mCACz7D,sBAAMF,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,sNAElD,sBAAMA,EAAE,06DAA06DH,KAAK,UAAUU,KAAK,mCACt8D,sBAAMF,GAAG,2BAA2BR,KAAK,QAAzC,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,oNAElD,sBAAMA,EAAE,y6DAAy6DH,KAAK,UAAUU,KAAK,uCAE/6D,IAAzBmC,EAAYE,SACT,qBAAKtD,UAAU,6BAA6BI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAnI,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,quHAAquHE,OAAO,UAAUI,YAAY,cAEpzH,qBAAKhB,UAAU,6BAA6BI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAnI,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,quHAAquHE,OAAO,UAAUI,YAAY,mBAIvyHxB,IAAf2E,EAAQ,GACN,sBAAKnE,UAAU,oCAAoCC,MAAO,CAAE+Q,WAAY,QAAxE,UACI,qBAAKhR,UAAU,8BAA8BC,MAAO,CAAEC,MAAO,QAASG,OAAQ,QAAS6G,aAAc,QAASiO,gBAAgB,OAAD,OAAShR,EAAQ,GAAGiD,OAApB,KAA+BgO,mBAAoB,gBAAiBC,iBAAkB,YAAahO,eAAgB,iBAEhP,mBAAGrH,UAAU,uDAAuDC,MAAO,CAAE2Q,SAAU,QAAvF,SAAkGjL,EAAM2P,UACxG,mBAAGtV,UAAU,uDAAuDC,MAAO,CAAE2Q,SAAU,QAAvF,SAAkGzM,EAAQ,GAAGmD,iBAC7G,mBAAGtH,UAAU,0DAA0DC,MAAO,CAAE2Q,SAAU,QAA1F,SAAqGzM,EAAQ,GAAGtB,MAChH,mBAAG7C,UAAU,iEAAiEC,MAAO,CAAE2Q,SAAU,QAAjG,SAA4GzM,EAAQ,GAAGoD,QACvH,mBAAGvH,UAAU,4EAA4EC,MAAO,CAAE2Q,SAAU,OAAQI,WAAY,QAAhI,SAA2I5N,EAAYG,iBAEzJ,mBCtBfgD,gBANS,SAAC7C,GAAD,MAAY,CAChCP,SAAUO,EAAMP,YAKLoD,EA7DoB,SAACZ,GAEhC,IAGItC,EAEAE,EALEJ,EAAawC,EAAbxC,SAEN,EAA4ClF,mBAAS,IAArD,mBAAOsX,EAAP,KAAuBC,EAAvB,KAEIlS,GAAW,EAGXmP,EAAe,SAACpP,EAAYC,EAAUC,GACtCoC,EAAMwJ,SAAS,CACXvL,KAAM,eAAgBC,QAAS,CAAE,WAAcR,EAAY,SAAYC,EAAU,YAAeC,MAkCxG,OAbAzE,qBAAU,WAEN,GAAiB,KAAbqE,EAAiB,CACjB,IAAI2J,EAAM3J,EAASkC,KAAI,SAACoQ,EAAGnQ,GAGvB,MADU,CAAE1C,OAAQ6S,EAAEnO,eAAgBrD,IAAKwR,EAAExR,IAAKyR,IAAKD,EAAExR,QAG7D3C,QAAQC,IAAIuL,GACZ0I,EAAkB1I,MAEvB,CAAC3J,IAIA,gCACI,cAAC,EAAD,CAAOS,KAAM,SAAU+D,MAAO,aAAcC,aAAc,yBAAuBC,SAAU0N,EAAgB9M,QAjCzF,SAACiF,GAEvB+E,EADApP,EAAaqK,EACYpK,EAAUC,MAgC/B,cAAC,GAAD,CAAQkF,QA7BQ,SAACiF,GAErB+E,EAAapP,EADbC,EAAWoK,EACwBnK,MA4B/B,cAAC,EAAD,CAAOK,KAAM,WAAY+D,MAAO,sBAAoBc,QAzBjC,SAACiF,GAExB+E,EAAapP,EAAYC,EADzBC,EAAcmK,YCqGPnH,gBAPS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,IACXP,SAAUgB,EAAMhB,YAKL6D,EA9HQ,SAACZ,GAEpB,MAA8B1H,mBAAS,IAAvC,mBAAOiL,EAAP,KAAgBgB,EAAhB,KACA,EAAsCjM,mBAAS,IAA/C,mBAAOqM,EAAP,KAAoBC,EAApB,KACA,EAA8BtM,mBAAS,GAAvC,mBAAOsH,EAAP,KAAgB8E,EAAhB,KACA,EAAgCpM,mBAAS,GAAzC,mBAAOmL,EAAP,KAAiBuM,EAAjB,KAEM1S,EAAkB0C,EAAlB1C,IAAKP,EAAaiD,EAAbjD,SAEX,EAA8BzE,mBAAS,IAAvC,mBAAO2X,EAAP,KAAgBC,EAAhB,KACA,EAA8B5X,mBAAS,IAAvC,mBAAOyG,EAAP,KAAgBoR,EAAhB,KACA,EAAsC7X,mBAAS,IAA/C,mBAAO0G,EAAP,KAAoBoR,EAApB,KACA,EAAwC9X,mBAAS,IAAjD,mBAAO+X,EAAP,KAAqBC,EAArB,KACA,EAAgDhY,mBAAS,IAAzD,mBAAOiY,EAAP,KAAyBC,EAAzB,KACA,EAAoClY,mBAAS,IAA7C,mBAAOmY,EAAP,KAAmBC,EAAnB,KACA,EAA8BpY,mBAAS,IAAvC,mBAAOkE,EAAP,KAAgB2R,EAAhB,KACA,EAAgD7V,mBAAS,IAAzD,oBAAO8V,GAAP,MAAyBC,GAAzB,MACA,GAA4C/V,mBAAS,IAArD,qBAAOgW,GAAP,MAAuBC,GAAvB,MAEApV,qBAAU,WACU,KAAZ8W,GAAqC,KAAnB3B,IAAqC,KAAZvP,GAAkC,KAAhBC,GAA2C,KAArBuR,GAAgD,KAArBA,GAA0C,KAAfE,GACzI5L,SAASC,eAAe,cAAcC,UAAW,EACjDF,SAASC,eAAe,cAAcxK,MAAM2J,QAAU,MAEtDY,SAASC,eAAe,cAAcC,UAAW,EACjDF,SAASC,eAAe,cAAcxK,MAAM2J,QAAU,SAE3D,CAACqK,GAAgBvP,EAASC,EAAaqR,EAAcE,EAAkBE,IAE1EtX,qBAAU,WACNC,MAAM,GAAD,OAAIkE,EAAJ,kBAAyB,CAC1BjE,OAAQ,QACTG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAgD,GACFb,QAAQC,IAAIY,GACZ2R,EAAW3R,GACX6R,GAAoB7R,MACrBhD,MAAK,iBAIb,IA+DH,OACI,gCACI,cAAC,EAAD,CAAQgK,KAAMmB,EAAapB,QAASA,EAAS3D,QAASA,EAASkD,QAAS4B,EAAYjB,SAAUA,IAC9F,cAAC,EAAD,CAAOxF,KAAM,OAAQ6E,QAASoN,EAAYlO,MAAO,wBACjD,cAAC,EAAD,CAAOA,MAAO,UAAWC,aAAc,mBAAoBhE,KAAM,SAAUiE,SAAUnF,EAAU+F,QAjEhF,SAACiF,GACpBpM,QAAQC,IAAImM,GACZwG,GAAkBxR,EAASqB,QAAO,SAAArD,GAAC,OAAIA,EAAEuD,MAAQyJ,MACjDsG,GAAoB7R,EAAQ4B,QAAO,SAAAoQ,GAAE,OAAIA,EAAGnP,UAAY0I,SA+DpD,cAAC,EAAD,CAAO/F,MAAO,eAAgB/D,KAAM,SAAUgE,aAAc,kBAAmBC,SAAUkM,GAAkBtL,QA3D5F,SAACiF,GACpBpM,QAAQC,IAAImM,GACZoI,EAAW3T,EAAQ4B,QAAO,SAAAuS,GAAM,OAAIA,EAAOrS,MAAQyJ,SA0D/C,cAAC,EAAD,CAAO/F,MAAO,mBAAoB/D,KAAM,SAAUgE,aAAc,oBAAqBC,SAAUkM,GAAkBtL,QAvD9F,SAACiF,GACxBpM,QAAQC,IAAImM,GACZqI,EAAe5T,EAAQ4B,QAAO,SAAAuS,GAAM,OAAIA,EAAOrS,MAAQyJ,SAsDnD,cAAC,EAAD,CAAO/F,MAAO,gBAAiB/D,KAAM,OAAQ6E,QApDzB,SAACiF,GACzBuI,EAAgBvI,MAoDZ,cAAC,EAAD,CAAO/F,MAAO,oBAAqB/D,KAAM,OAAQ6E,QAlDzB,SAACiF,GAC7ByI,EAAoBzI,MAkDf,cAAC,EAAD,CAAO/F,MAAO,mBAAoBc,QA/CzB,SAACiF,GACfxD,EAAW,iBACXyL,EAAY,KACZpL,EAAe,WACfF,EAAW,GACX,IAAMgF,EAAO3B,EAASvM,OAAOyH,MAAM,GAC7B0G,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQH,GACxBC,EAASE,OAAO,gBAAiB,oBAEjCC,IAAMC,KAAK,qDAAsDJ,GAAUnQ,MAAK,SAACC,GAC7E8K,EAAW,2BACXK,EAAe,SACfF,EAAW,GACXgM,EAAcjX,EAAER,KAAKqE,SAiCkCW,KAAM,SAC7D,wBAAQ7C,GAAG,aAAaf,UAAU,uDAAuDmG,QA7B7E,WAChB+D,EAAW,gDACXyL,EAAY,KACZpL,EAAe,WACfF,EAAW,GACXtL,MAAM,kCAAD,OAAmC6W,EAAnC,oBAAsDlR,EAAQ,GAAG9B,OAAjE,oBAAmF+B,EAAY,GAAG/B,OAAlG,oBAAoH8B,EAAQ,GAAGwM,OAA/H,oBAAiJvM,EAAY,GAAGuM,OAAhK,qBAAmL8E,EAAnL,qBAA4ME,EAA5M,oBAAwOjC,GAAe,GAAGhD,UAA1P,uBAAkRmF,EAAlR,sBAAkT,CACnTpX,OAAQ,QACTG,MAAK,SAAAI,GAAQ,OAAIA,EAASF,UACxBF,MAAK,SAAAC,GACFkC,QAAQC,IAAInC,GACZuG,EAAM8C,QAAQrJ,EAAE6D,KAChBiH,EAAW,0BACXyL,EAAY,KACZpL,EAAe,SACfF,EAAW,OAef,+BCpCG9D,gBAPS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,IACXE,SAAUO,EAAMP,YAKLoD,EAzEW,SAACZ,GAKvB,MAAoC1H,mBAAS,IAA7C,mBAAOqW,EAAP,KAAmBhC,EAAnB,KACA,EAAoCrU,mBAAS,IAA7C,mBAAOmW,EAAP,KAAmBC,EAAnB,KACA,EAA0BpW,mBAAS,IAAnC,mBAAOsY,EAAP,KAAcC,EAAd,KAsBA,OApBA1X,qBAAU,WACNuV,EAAc,YACf,IAEHvV,qBAAU,WACN,IAAIkI,EAAIwC,OAAOC,WAAW,uBACtB2I,EAAO5H,SAASC,eAAe,gBAC/BzD,EAAE0C,SAA0B,WAAf0K,EACb9B,EAAcF,EAAK9G,WACZtE,EAAE0C,SAA0B,WAAf0K,GACpB9B,EAAcF,EAAK9G,UAAY,QAEpC,CAAC8I,IAEJtV,qBAAU,WACNwC,QAAQC,IAAI+S,KACb,CAACA,IAKA,qBAAKtU,UAAU,8BAA8BC,MAAO,CAAEsU,UAAU,GAAD,OAAKD,EAAL,OAA/D,SACI,qBAAKtU,UAAU,4FAAf,SACI,sBAAKA,UAAU,wCAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,CAAO4D,KAAM,SAAU+D,MAAO,gBAAiBM,QAAS,OAAQQ,QAAS4L,EAAexM,SAAU,CAAC,CAAE,OAAU,sBAAoB,IAAO,UAAY,CAAE,OAAU,sBAAoB,IAAO,YAAc,CAAE,OAAU,4BAA6B,IAAO,mBAG3O,aAAfuM,EACG,cAAC,GAAD,CAAU3L,QAAS+N,IACH,WAAfpC,EACG,cAAC,GAAD,IACkB,eAAfA,EACC,cAAC,GAAD,CAAgB3L,QAAS+N,IAAe,MAM5D,qBAAKxW,UAAU,aAAf,SACqB,aAAfoU,GAA4C,eAAfA,EAC3B,cAAC,IAAD,CAAanJ,SAAS,EAAMC,OAAQ,EAAG7K,OAAO,QAAQqB,MAAM,EAAMuB,IAAKsT,EAAOvW,UAAU,YACxE,WAAfoU,EACG,8BACI,cAAC,GAAD,CAAiB9B,cAAeA,MAC3B,KAGrB,qBAAKvR,GAAG,2B,UC+GbwF,gBARS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,IACXC,OAAQQ,EAAMR,OACduT,aAAc/S,EAAM+S,gBAKTlQ,EA5KS,SAACZ,GACrB,IAAM1C,EAAgB0C,EAAhB1C,IAAKC,EAAWyC,EAAXzC,OAGX,EAA8BjF,mBAAS,IAAvC,mBAAOiL,EAAP,KAAgBgB,EAAhB,KACA,EAAsCjM,mBAAS,IAA/C,mBAAOqM,EAAP,KAAoBC,EAApB,KACA,EAA8BtM,mBAAS,IAAvC,mBAAOsH,EAAP,KAAgB8E,EAAhB,KAGA,EAAwBpM,mBAAS,IAAjC,mBAAOuV,EAAP,KAAagB,EAAb,KACA,EAA4CvW,mBAAS,IAArD,mBAAOqJ,EAAP,KAAuBoP,EAAvB,KACA,EAAsBzY,mBAAS,IAA/B,mBAAO4E,EAAP,KAAY8T,EAAZ,KACA,EAA0B1Y,mBAAS,IAAnC,mBAAOsJ,EAAP,KAAcqP,EAAd,KACA,EAA0B3Y,mBAAS,IAAnC,mBAAOsU,EAAP,KAAcsE,EAAd,KACA,EAAkC5Y,mBAAS,IAA3C,mBAAO6Y,EAAP,KAAkBC,EAAlB,KACA,EAA4B9Y,mBAAS,IAArC,mBAAOmJ,EAAP,KAAe4P,EAAf,KAEAlY,qBAAU,WACNwC,QAAQC,IAAI6F,GAEC,KAAToM,GAAkC,KAAnBlM,GAAiC,KAARzE,GAAwB,KAAV0E,GAA0B,KAAVgL,GAA2B,KAAXnL,GACtFoD,SAASC,eAAe,cAAcC,UAAW,EACjDF,SAASC,eAAe,cAAcxK,MAAM2J,QAAU,MAEtDY,SAASC,eAAe,cAAcC,UAAW,EACjDF,SAASC,eAAe,cAAcxK,MAAM2J,QAAU,SAE3D,CAAC4J,EAAMlM,EAAgBzE,EAAK0E,EAAOgL,EAAOnL,IAE7C,IAiDM6P,EAAc,SAACC,GACjB,OAAO,IAAIvH,SAAQ,SAACwH,EAASC,GAEzB,IAAMnU,EAAMiU,EACZG,wCAA6B,CACzBpU,MACAqU,OAAQ,2BACR3I,KAAM,UACN/K,KAAM,WACPzE,MAAK,SAAC2T,GACLiE,EAAajE,EAAOgE,WACpBrF,KAAWC,OAAOlH,SAASC,eAAe,UAAW,CAAEkH,QAAS,MAC3DxS,MAAK,SAAUyS,GACZtQ,QAAQC,IAAIqQ,GAGZ,IAAMtC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQoC,GACxBtC,EAASE,OAAO,gBAAiB,oBACjCC,IAAMC,KAAK,qDAAsDJ,GAAUnQ,MAAK,SAACC,GAC7EkC,QAAQC,IAAInC,EAAER,KAAKqE,KACnB+T,EAAU5X,EAAER,KAAKqE,KACjBiH,EAAW,iBACXK,EAAe,SACfF,EAAW,YAKxBkN,OAAM,SAACC,GACNlW,QAAQC,IAAIsJ,KAAKhM,UAAU2Y,IAC3BtN,EAAW,iBACXK,EAAe,SACfF,EAAW,UAMvB,OACI,qBAAKrK,UAAU,2FAA2FC,MAAO,CAAE4J,OAAQ,SAA3H,SACI,sBAAK7J,UAAU,oEAAf,UACI,qBAAKA,UAAU,0BAAf,SAAyC,wBAAQA,UAAU,QAAQmG,QAAS,SAACqC,GAAQ7C,EAAM8R,uBAAlD,SACrC,qBAAKrX,MAAM,6BAA6BJ,UAAU,UAAUO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAnG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,+BAI7E,sBAAKV,UAAU,kCAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,EAAD,CAAQmJ,KAAMmB,EAAapB,QAASA,EAAS3D,QAASA,EAASkD,QAAS4B,EAAYjB,SAAU,MAC9F,oBAAIpJ,UAAU,wCAAd,6BACA,cAAC,EAAD,CAAO4D,KAAM,OAAQ+D,MAAO,oBAAqBc,QAAS+L,IAC1D,cAAC,EAAD,CAAO5Q,KAAM,OAAQ+D,MAAO,kBAAmBc,QAASiO,IACxD,cAAC,EAAD,CAAO9S,KAAM,OAAQ+D,MAAO,MAAOc,QAASkO,IAC5C,cAAC,EAAD,CAAO/S,KAAM,OAAQ+D,MAAO,QAASc,QAASmO,IAE9C,mBAAG5W,UAAU,oBAAb,8CACA,qBAAKA,UAAU,sBAAf,SAEKkD,EAAOmC,KAAI,SAAAkN,GAAK,OAAI,qBAAKvS,UAAU,yCAAyCmG,QAAS,SAACqC,GAEnF,IADA,IAAIkP,EAAWlN,SAAS6H,uBAAuB,YACtC/M,EAAI,EAAGA,EAAIoS,EAAS1O,OAAQ1D,IACjCoS,EAASpS,GAAGqS,UAAUC,OAAO,iBAC7BF,EAASpS,GAAGqS,UAAUC,OAAO,YAEjCpP,EAAErH,OAAOwW,UAAUE,IAAI,iBACvBrP,EAAErH,OAAOwW,UAAUE,IAAI,YACvBhB,EAASrO,EAAErH,OAAOhB,MACnBF,MAAO,CAAEiH,aAAc,QAAyB,UAASqL,EAAMxR,GAAIZ,IAAKoS,EAAMpS,KAAxCoS,EAAMxR,SAEnD,cAAC,EAAD,CAAO6C,KAAM,OAAQ+D,MAAO,kBAAmBc,QAvFnD,SAACiF,GAEbrD,EAAW,GACXE,EAAe,WACfL,EAAW,8BACX,IAAMmF,EAAO3B,EAASvM,OAAOyH,MAAM,GAC7B0G,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQH,GACxBC,EAASE,OAAO,gBAAiB,oBAEjCC,IAAMC,KAAK,qDAAsDJ,GAAUnQ,MAAK,SAACC,GAC7EkC,QAAQC,IAAInC,EAAER,KAAKqE,KACnBgU,EAAY7X,EAAER,KAAKqE,WA4EP,wBAAQjD,UAAU,0EAA0Ee,GAAG,aAAaoF,QAzH3G,WAEjB+D,EAAW,sBACXK,EAAe,WACfF,EAAW,GAEX,IAAIyN,EAAY,CACZtE,KAAMA,EACND,KAAM,YACNjM,eAAgBA,EAChBzE,IAAKA,EACL0E,MAAOA,EACPH,OAAQA,GAGZrI,MAAM,GAAD,OAAIkE,EAAJ,aAAoB,CACrBjE,OAAQ,OACRC,KAAM4L,KAAKhM,UAAUiZ,GACrB5Y,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAA4Y,GACFzW,QAAQC,IAAIwW,GACZ7N,EAAW,+BACXK,EAAe,SACfF,EAAW,GACX1E,EAAMwJ,SAAS,CAAEvL,KAAM,kBAAmBC,QAASkU,IACnDpS,EAAM8R,0BA6FE,+BAGJ,qBAAKzX,UAAU,0CAAf,SACI,qBAAKe,GAAG,SAASd,MAAO,CAAEC,MAAO,QAASG,OAAQ,QAAS6G,aAAc,OAAQtB,WAAW,OAAD,OAAS2M,EAAT,2BAA3F,SACI,qBAAKtS,MAAO,CAAEC,MAAO,QAASG,OAAQ,QAAS6G,aAAc,OAAQtB,WAAW,6BAAD,OAA+BkR,EAA/B,uDCpJ5FkB,GAbI,SAACrS,GAChB,IAAMxB,EAAYwB,EAAZxB,QACN,OACI,yBAAQnE,UAAU,+BAA+BmG,QAAS,SAACqC,GAAQ7C,EAAM8C,QAAQD,EAAErH,OAAO8W,QAAQlX,KAAO,cAAY,SAAS,UAASoD,EAAQF,IAA/I,UACI,sBAAKhE,MAAO,CAAEiY,cAAe,QAAU9X,MAAM,6BAA6BJ,UAAU,kEAAkEO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA7L,UACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,qCACrE,sBAAMG,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,+HAEzE,sBAAMT,MAAO,CAAEiY,cAAe,QAAUlY,UAAU,yFAAlD,2BCKGmY,GAbI,SAACxS,GAChB,IAAMxB,EAAYwB,EAAZxB,QACN,OACI,yBAAQnE,UAAU,+BAA+BmG,QAAS,SAACqC,GAAQ7C,EAAM8C,QAAQD,EAAErH,OAAO8W,QAAQlX,KAAO,cAAY,SAAS,UAASoD,EAAQF,IAA/I,UACI,qBAAKhE,MAAO,CAAEiY,cAAe,QAAU9X,MAAM,6BAA6BJ,UAAU,kEAAkEO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA7L,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,EAAGN,EAAE,+SAEzE,sBAAMT,MAAO,CAAEiY,cAAe,QAAUlY,UAAU,wFAAlD,2BCqGGuG,gBAPS,SAAC7C,GAAD,MAAY,CAChCP,SAAUO,EAAMP,SAChBF,IAAKS,EAAMT,OAKAsD,EAzGO,SAACZ,GAEnB,IAAM1C,EAAkB0C,EAAlB1C,IAAKE,EAAawC,EAAbxC,SAEX7B,QAAQC,IAAI4B,GAIZ,IAAMiV,EAAiB,SAAC1K,GACpBpM,QAAQC,IAAImM,GACZ,IAAI2K,EAAmB,CAAEpU,IAAKyJ,GAC9B3O,MAAM,GAAD,OAAIkE,EAAJ,mBAA0B,CAC3BjE,OAAQ,MACRC,KAAM4L,KAAKhM,UAAUwZ,GACrBnZ,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAC,GACxBkC,QAAQC,IAAInC,GACZuG,EAAMwJ,SAAS,CAAEvL,KAAM,kBAAmBC,QAASzE,QAMrDkZ,EAAiB,SAAC5K,GACpBpM,QAAQC,IAAImM,GACZ,IAAI2K,EAAmB,CAAEpU,IAAKyJ,GAC9B3O,MAAM,GAAD,OAAIkE,EAAJ,mBAA0B,CAC3BjE,OAAQ,MACRC,KAAM4L,KAAKhM,UAAUwZ,GACrBnZ,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAC,GACxBkC,QAAQC,IAAInC,GACZuG,EAAMwJ,SAAS,CAAEvL,KAAM,kBAAmBC,QAASzE,QAO3D,OACI,qBAAKY,UAAU,gBAAf,SACI,qBAAKA,UAAU,0CAAf,SACI,qBAAKA,UAAU,yDAAf,SACI,qBAAKA,UAAU,uEAAf,SACI,wBAAOA,UAAU,0DAAjB,UACI,uBAAOA,UAAU,kBAAjB,SACI,qBAAIA,UAAU,SAAd,UACI,oBAAIuY,MAAM,MAAMvY,UAAU,kGAA1B,sBAEA,oBAAIuY,MAAM,MACNvY,UAAU,4HADd,mBAGA,oBAAIuY,MAAM,MAAMvY,UAAU,sGAA1B,gCAKR,wBAAOA,UAAU,mBAAjB,UACKmD,EAASkC,KAAI,SAAClB,GAAD,OACV,qBAAsBnE,UAAU,2BAAhC,UAEI,qBAAIA,UAAU,oFAAd,gBAAqG,qBAAKC,MAAO,CAAEC,MAAO,OAAQG,OAAQ,OAAQ6G,aAAc,OAAQtB,WAAW,OAAD,OAASzB,EAAQiD,OAAjB,mBAA0CC,eAAgB,YAAamR,YAAa,SAAkBrU,EAAQmD,kBAChS,oBAAItH,UAAU,sGAAd,SAAqHmE,EAAQtB,MAC7H,qBAAI7C,UAAU,gGAAd,UACI,yBAAQA,UAAU,0BAA0BmG,QAAS,SAACqC,GAAQ7C,EAAM8S,WAAWjQ,IAAM,cAAY,SAAS,UAASrE,EAAQF,IAAK,cAAaE,EAAQmD,eAArJ,UAAqK,qBAAKrH,MAAO,CAAEiY,cAAe,QAAU9X,MAAM,6BAA6BJ,UAAU,0EAA0EO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAArM,SACjK,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAY,IAAIN,EAAE,mIADzE,IAEO,sBAAMT,MAAO,CAAEiY,cAAe,QAAUlY,UAAU,iCAAlD,4BAEc,IAApBmE,EAAQoB,QAAmB,cAAC,GAAD,CAAYkD,QAAS6P,EAAgBnU,QAASA,IAAc,cAAC,GAAD,CAAYsE,QAAS2P,EAAgBjU,QAASA,SATrIA,EAAQF,QAgBrB,+BACI,qBAAIhE,MAAO,CAAEyY,OAAQ,WAAavS,QAAS,SAACqC,GAAQ7C,EAAMgT,kBAAiB,IAAS3Y,UAAU,4IAA9F,UACI,qBAAKI,MAAM,6BAA6BH,MAAO,CAAEiY,cAAe,QAAUlY,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA1I,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,kEAF/E,sBAIA,uBACA,2CCxErBkY,GAhBD,SAACjT,GAEX,OADArE,QAAQC,IAAIoE,GAER,qBAAK3F,UAAU,2FAAf,SACI,sBAAKA,UAAU,4FAAf,UACI,oBAAIA,UAAU,uCAAd,0BACA,oBAAGA,UAAU,uBAAb,+BAAsD,uBAAMA,UAAU,gBAAhB,cAAkC2F,EAAMkT,aAAxC,OAAtD,2BACA,sBAAK7Y,UAAU,qCAAf,UACI,wBAAQA,UAAU,yLAAyLmG,QAASR,EAAMmT,YAA1N,sBACA,wBAAQ9Y,UAAU,0IAA0ImG,QAAS,SAACqC,GAAQ7C,EAAMoT,YAAYvQ,IAAM,UAAS7C,EAAMqT,SAArN,6BCwFLzS,gBALS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,OAIAsD,EA5FkB,SAACZ,GAE9B,IAAM1C,EAAQ0C,EAAR1C,IAEN,EAA8BhF,mBAAS,IAAvC,mBAAOiL,EAAP,KAAgBgB,EAAhB,KACA,EAAsCjM,mBAAS,IAA/C,mBAAOqM,EAAP,KAAoBC,EAApB,KACA,EAA0BtM,oBAAS,GAAnC,mBAAOgb,EAAP,KAAcC,EAAd,KACA,EAA0Cjb,oBAAS,GAAnD,mBAAOkb,EAAP,KAAsBR,EAAtB,KACA,EAA8B1a,mBAAS,IAAvC,mBAAOsH,EAAP,KAAgB8E,EAAhB,KACA,EAAgCpM,mBAAS,IAAzC,mBAAO+a,EAAP,KAAiBI,EAAjB,KACA,EAAwCnb,mBAAS,IAAjD,mBAAO4a,EAAP,KAAqBQ,EAArB,KAkCMP,EAAc,WAChBI,GAAS,IASb,OACI,iCAEgB,IAAVD,EACE,cAAE,GAAF,CAAQjZ,UAAS,UAAKiZ,GAASF,YA3CrB,SAACrL,GACnB,IAAIsL,EAAWtL,EAASvM,OAAO8W,QAAQlX,GACvChC,MAAM,GAAD,OAAIkE,EAAJ,oBAA2B,CAC5BjE,OAAQ,SACRC,KAAM4L,KAAKhM,UAAU,CAAEma,SAAUA,IACjC9Z,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAgF,GAEFwB,EAAMwJ,SAAS,CAAEvL,KAAM,mBAAoBC,QAASM,IACpD2U,IACA5O,EAAW,kCACXK,EAAe,SACfF,EAAW,OA4BgD2O,SAAUA,EAAUH,aAAcA,EAAcC,YAAaA,IACtH,IAEc,IAAlBK,EACE,cAAE,GAAF,CAAW1B,oBAdK,WACxBkB,GAAiB,MAcP,GAIN,qBAAK3Y,UAAU,wEAAf,SACI,qBAAKA,UAAU,2BAAf,SAEI,sBAAKA,UAAU,aAAf,UACI,oBAAIA,UAAU,wCAAd,sBAIA,cAAC,GAAD,CAAeyY,WAxChB,SAAC/K,GAEhB0L,EAAY1L,EAASvM,OAAO8W,QAAQlX,IACpCsY,EAAgB3L,EAASvM,OAAO8W,QAAQrV,QACxCsW,GAAS,IAoC8CP,iBAAkBA,WAOrE,cAAC,EAAD,CAAQxP,KAAMmB,EAAapB,QAASA,EAAS3D,QAASA,EAASkD,QAAS4B,EAAYjB,SAAU,YC9B1FkQ,GAxDF,SAAC3T,GAEX,IAAIlD,EAASkD,EAAMlD,OAEnB,OACI,qBAAKzC,UAAU,gBAAf,SACI,qBAAKA,UAAU,0CAAf,SACI,qBAAKA,UAAU,yDAAf,SACI,qBAAKA,UAAU,uEAAf,SACI,wBAAOA,UAAU,2DAAjB,UACI,uBAAOA,UAAU,kBAAjB,SACI,qBAAIA,UAAU,SAAd,UACI,oBAAIuY,MAAM,MAAMvY,UAAU,0GAA1B,yBAEA,oBAAIuY,MAAM,MACNvY,UAAU,6HADd,sBAGA,oBAAIuY,MAAM,MAAMvY,UAAU,6GAA1B,gCAKR,wBAAOA,UAAU,kBAAjB,UACKyC,EAAO4C,KAAI,SAACrB,GAAD,OACR,qBAAoBhE,UAAU,2BAA9B,UACI,oBAAIA,UAAU,oHAAd,SAAkI,cAAC,IAAD,CAAS6F,GAAI,CAAEC,SAAU,cAAeM,WAAY,CAAEpC,MAAOA,IAA7D,SAAyEA,EAAMrG,WACjN,oBAAIqC,UAAU,sGAAd,SAAqHgE,EAAM2J,MAAM3E,SACjI,qBAAIhJ,UAAU,iDAAd,UACI,yBAAQA,UAAU,iDAAiDmG,QAAS,SAACqC,GAAQ7C,EAAM8S,WAAWjQ,IAAM,UAASxE,EAAMC,IAAK,cAAaD,EAAMrG,OAAnJ,UAA2J,qBAAKsC,MAAO,CAAEiY,cAAe,QAAU9X,MAAM,6BAA6BJ,UAAU,0EAA0EO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAArM,SACvJ,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAY,IAAIN,EAAE,mIACnE,sBAAMT,MAAO,CAAEiY,cAAe,QAAUlY,UAAU,wFAAlD,2BAHV,SAHKgE,EAAMC,QAWnB,+BACI,qBAAIhE,MAAO,CAAEyY,OAAQ,WAAavS,QAAS,SAACqC,GAAQ7C,EAAMyJ,eAAc,IAASpP,UAAU,4IAA3F,UACI,qBAAKI,MAAM,6BAA6BH,MAAO,CAAEiY,cAAe,QAAUlY,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAA1I,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,kEAF/E,oBAIA,uBACA,yCC4CrB6F,gBAPS,SAAC7C,GAAD,MAAY,CAChCjB,OAAQiB,EAAMjB,OACdQ,IAAKS,EAAMT,IACXP,SAAUgB,EAAMhB,YAIL6D,EAjFU,SAACZ,GAEtB,IAAMlD,EAAgBkD,EAAhBlD,OAAQQ,EAAQ0C,EAAR1C,IAEd,EAAoChF,oBAAS,GAA7C,mBAAOsb,EAAP,KAAmBnK,EAAnB,KAEA,EAA0BnR,oBAAS,GAAnC,mBAAOgb,EAAP,KAAcC,EAAd,KACA,EAA4Cjb,mBAAS,IAArD,mBAAOub,EAAP,KAAuBC,EAAvB,KACA,EAAoDxb,mBAAS,IAA7D,mBAAOyb,EAAP,KAA2BC,EAA3B,KAEA,EAA8B1b,mBAAS,GAAvC,mBAAOsH,EAAP,KAAgB8E,EAAhB,KACA,EAAsCpM,mBAAS,GAA/C,mBAAOqM,EAAP,KAAoBC,EAApB,KACA,EAA8BtM,mBAAS,IAAvC,mBAAOiL,EAAP,KAAgBgB,EAAhB,KASM4O,EAAc,WAChBI,GAAS,IAwBb,OACI,iCACqB,IAAfK,EACE,cAAC,GAAD,CAAYnK,cAAeA,EAAelF,WAAYA,EAAYK,eAAgBA,EAAgBF,WAAYA,IAAiB,MAEvH,IAAV4O,EACE,cAAE,GAAF,CAAQjZ,UAAS,UAAKiZ,GAASF,YA3BvB,SAACrL,GACjB,IAAIsL,EAAWtL,EAASvM,OAAO8W,QAAQlX,GACvChC,MAAM,GAAD,OAAIkE,EAAJ,kBAAyB,CAC1BjE,OAAQ,SACRC,KAAM4L,KAAKhM,UAAU,CAAEma,SAAUA,IACjC9Z,QAAS,CACL,eAAgB,sBAErBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAA6E,GACF1C,QAAQC,IAAIyC,GACZ2B,EAAMwJ,SAAS,CAAEvL,KAAM,iBAAkBC,QAASG,IAClD8U,IACA5O,EAAW,gCACXK,EAAe,SACfF,EAAW,OAY8C2O,SAAUQ,EAAgBX,aAAca,EAAoBZ,YAAaA,IAChI,GACN,qBAAK9Y,UAAU,wEAAf,SACI,qBAAKA,UAAU,2BAAf,SAEI,sBAAKA,UAAU,aAAf,UACI,oBAAIA,UAAU,wCAAd,wBAIA,cAAC,GAAD,CAAOyY,WAhDR,SAAC/K,GAChBpM,QAAQC,IAAImM,EAASvM,OAAO8W,SAC5BwB,EAAkB/L,EAASvM,OAAO8W,QAAQlX,IAC1C4Y,EAAsBjM,EAASvM,OAAO8W,QAAQta,QAC9Cub,GAAS,IA4CsCzW,OAAQA,EAAQ2M,cAAeA,WAO1E,cAAC,EAAD,CAAQjG,KAAMmB,EAAapB,QAASA,EAAS3D,QAASA,EAASkD,QAAS4B,EAAYjB,SAAU,YCpB1FwQ,GArDA,SAACjU,GAEb,IAAIkU,EAwBJ,OAvBA/a,qBAAU,WAEF+a,OAD6Bra,IAA7BmG,EAAMkU,mBACe,cAEAlU,EAAMkU,mBAK/B,IAFA,IAAIC,EAAQtP,SAAS6H,uBAAuB,WAEnC/M,EAAI,EAAGA,EAAIwU,EAAM9Q,OAAQ1D,IAC9BwU,EAAMxU,GAAGqS,UAAUC,OAAO,gBAC1BkC,EAAMxU,GAAGqS,UAAUC,OAAO,cAC1BkC,EAAMxU,GAAGqS,UAAUE,IAAI,kBAG3B,IAAIkC,EAAUvP,SAASC,eAAeoP,GACtCE,EAAQpC,UAAUE,IAAI,gBACtBkC,EAAQpC,UAAUC,OAAO,kBACzBmC,EAAQpC,UAAUE,IAAI,gBAGvB,CAAClS,EAAMkU,qBAGN,sBAAK7Z,UAAU,2CAAf,UACI,eAAC,IAAD,CAASe,GAAG,cAAcf,UAAU,wHAAwH6F,GAAI,CAAEC,SAAU,SAAUM,WAAY,eAAlM,UACI,qBAAKhG,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,gKAF/E,kBAIA,eAAC,IAAD,CAASK,GAAG,iBAAiBf,UAAU,wHAAwH6F,GAAI,CAAEC,SAAU,SAAUM,WAAY,kBAArM,UACI,qBAAKhG,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,wFAF/E,wBAIA,eAAC,IAAD,CAASK,GAAG,cAAcf,UAAU,wHAAwH6F,GAAI,CAAEC,SAAU,SAAUM,WAAY,eAAlM,UACI,qBAAKhG,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,6HAF/E,kBAIA,eAAC,IAAD,CAASK,GAAG,aAAaf,UAAU,wHAAwH6F,GAAI,CAAEC,SAAU,SAAUM,WAAY,cAAjM,UACI,qBAAKhG,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,2HAF/E,iBAIA,eAAC,IAAD,CAASK,GAAG,oBAAoBf,UAAU,wHAAwH6F,GAAI,CAAEC,SAAU,SAAUM,WAAY,qBAAxM,UACI,qBAAKhG,MAAM,6BAA6BJ,UAAU,eAAeO,KAAK,OAAOD,QAAQ,YAAYM,OAAO,eAAxG,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQE,YAAa,IAAKN,EAAE,6QAF/E,gBAIA,cAAC,IAAD,CAASmF,GAAI,CAAEC,SAAU,KAAO9F,UAAU,uEAA1C,6BCMGuG,gBAJS,SAAC7C,GAAD,MAAY,CAChCV,gBAAiBU,EAAMV,mBAGZuD,EA9CD,SAACZ,GAEX,IAAIqU,EAASrU,EAAM6F,SAASpF,WAExBpD,EAAkB2C,EAAM3C,gBAE5B,OACI,8BAC0B,KAApBA,EACE,cAAC,GAAD,IACA,gCACI,cAAC,GAAD,IACA,sBAAKhD,UAAU,cAAf,UACI,qBAAKA,UAAU,0DAAf,SACI,cAAC,GAAD,CAAS6Z,mBAAoBG,MAGjC,qBAAKha,UAAU,oCAAf,SACiB,mBAAXga,EACE,cAAC,GAAD,IACY,gBAAXA,EACG,cAAC,EAAD,IACY,eAAXA,EACG,cAAC,GAAD,IACY,sBAAXA,EACG,cAAC,GAAD,IACA,cAAC,GAAD,iBCf7BC,GAnBG,WACd,OACI,sBAAKja,UAAU,gFAAf,UACI,sBAAKA,UAAU,0CAA0CI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAhJ,UACI,sBAAMG,EAAE,0vCAA0vCH,KAAK,YACvwC,sBAAMG,EAAE,85CAA85CH,KAAK,YAC36C,sBAAMG,EAAE,m6CAAm6CH,KAAK,YACh7C,sBAAMG,EAAE,s5CAAs5CH,KAAK,eAEv6C,qBAAKP,UAAU,4CAA4CI,MAAM,6BAA6BF,MAAM,MAAMG,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAlJ,SACI,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,w1HAAw1HE,OAAO,UAAUI,YAAY,cAEv6H,oBAAIhB,UAAU,0EAAd,iBACA,oBAAIA,UAAU,mDAAd,uCACA,cAAC,IAAD,CAAS6F,GAAI,CAAEC,SAAU,KAAO9F,UAAU,0EAA1C,iCCwDGuG,gBALS,SAAC7C,GAAD,MAAY,CAChCT,IAAKS,EAAMT,OAIAsD,EA1DI,SAACZ,GAChB,IAAM1C,EAAQ0C,EAAR1C,IA+BN,OA9BAnE,qBAAU,WACNC,MAAM,GAAD,OAAIkE,EAAJ,iBAAwB,CACzBjE,OAAQ,QACTG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAC,GACFuG,EAAMwJ,SAAS,CACXvL,KAAM,gBAAiBC,QAASzE,IAEpCL,MAAM,GAAD,OAAIkE,EAAJ,mBAA0B,CAC3BjE,OAAQ,QACTG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAC,GACFuG,EAAMwJ,SAAS,CACXvL,KAAM,kBAAmBC,QAASzE,IAEtCL,MAAM,GAAD,OAAIkE,EAAJ,mBAA0B,CAC3BjE,OAAQ,QACTG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAC,GACFuG,EAAMwJ,SAAS,CACXvL,KAAM,kBAAmBC,QAASzE,eAQ/D,IAGC,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8a,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWE,IAClC,cAAC,IAAD,CAAOH,KAAK,cAAcC,UAAWG,IACrC,cAAC,IAAD,CAAOJ,KAAK,kBAAkBC,UAAWvM,IACzC,cAAC,IAAD,CAAOsM,KAAK,SAASC,UAAWI,KAChC,cAAC,IAAD,CAAOL,KAAK,SAASC,UAAWK,KAChC,cAAC,IAAD,CAAON,KAAK,oBAAoBC,UAAWM,IAC3C,cAAC,IAAD,CAAOP,KAAK,eAAeC,UAAWO,KACtC,cAAC,IAAD,CAAOR,KAAK,qBAAqBC,UAAWQ,KAC5C,cAAC,IAAD,CAAOT,KAAK,YAAYC,UAAWS,KACnC,cAAC,IAAD,CAAOT,UAAWH,aCvCnBa,GAZH,WAGV,OACE,cAAC,IAAD,CAAUtX,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,SCHOuX,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9b,MAAK,YAAkD,IAA/C+b,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFjR,SAASC,eAAe,SAM1BsQ,O","file":"static/js/main.80002fb4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TitleArrowLottie from '../lotties/TitleArrowLottie'\nimport { Waypoint } from 'react-waypoint'\nimport OrangeCurvedLottie from '../lotties/OrangeCurvedLottie'\n\nconst SociaVitalicia = () => {\n\n    const qs = require('qs')\n\n    let [renderLottie, setRenderLottie] = useState(false);\n    let [renderLottie2, setRenderLottie2] = useState(false);\n\n    const [episodio, setEpisodio] = useState()\n    const client_id = \"4bd394a1bc9941c2bc8340623315b1e0\";\n    const client_secret = \"79730d2cd9cd4c87ab4515ecf9188d51\";\n    const auth_token = Buffer.from(`${client_id}:${client_secret}`, 'utf-8').toString('base64');\n    const data = qs.stringify({ 'grant_type': 'client_credentials' })\n\n\n    useEffect(() => {\n\n\n        fetch('https://accounts.spotify.com/api/token', {\n            method: 'POST',\n            body: data,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': `Basic ${auth_token}`,\n            },\n\n\n        })\n            .then((r => r.json())).then(r => {\n                fetch('https://api.spotify.com/v1/shows/6a14qoWlcAGixLfwVeyPOk/episodes?market=ES&limit=1&offset=0', {\n                    method: 'GET', headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + r.access_token\n                    }\n                })\n                    .then((response) => {\n                        (response.json().then(\n                            (r) => {\n                                /*   console.log(r) */\n                                setEpisodio(r);\n                            }\n                        ));\n                    });\n\n\n\n            });\n    }, [])\n\n\n    let titulo;\n    let n;\n    let invitado;\n    let programa;\n\n    if (episodio !== undefined) {\n        titulo = episodio.items[0].name;\n        n = titulo.lastIndexOf(':');\n        invitado = titulo.substring(n + 1);\n        programa = titulo.substr(0, titulo.indexOf(':'));\n        programa = programa.replace('. ', ' ');\n    }\n\n\n\n    return (\n        <div className=\"w-full md:w-10/12 mx-auto\">\n            <div className=\"grid grid cols-1 md:grid-cols-2 p-4 lg:py-24\">\n\n                <div className=\"col-span-1 md:pt-8 lg:pt-0\">\n                    <h2 className=\"md:hidden py-4 font-title text-5.5xl lg:text-hero text-left relative\">Socias vitalicias\n                    <div className=\"absolute bottom-6 md:bottom-6 right-8 md:left-96\" style={{ width: '118px' }}> {renderLottie && <TitleArrowLottie />}</div>\n                    </h2>\n                    <div className=\"relative mx-auto w-full h-28 lg:w-96 md:h-100\">\n                        <div className=\"hidden  mx-auto md:block w-64 text-center bg-black rounded-xl py-4  lg:left-16 absolute z-30\">\n                            {(episodio !== undefined) ?\n                                <div className=\"\">\n                                    <img className=\"w-56 mx-auto rounded-xl mb-4\" src=\"https://res.cloudinary.com/isita/image/upload/v1638128101/static/Instagram_post_-_59_eb6mfy.png\" />\n                                    <p className=\"font-semibold text-white \"> {invitado}</p>\n                                    <p className=\"font-normal text-sm text-white mb-2\"> {programa}</p>\n                                    <svg className=\"mx-auto mb-2\" xmlns=\"http://www.w3.org/2000/svg\" width=\"227\" height=\"32\" viewBox=\"0 0 227 32\" fill=\"none\">\n                                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.69751 7.33898C0.69751 6.23441 1.82256 5.33898 3.21039 5.33898H223.687C225.075 5.33898 226.2 6.23441 226.2 7.33898C226.2 8.44355 225.075 9.33898 223.687 9.33898H3.21039C1.82256 9.33898 0.69751 8.44355 0.69751 7.33898Z\" fill=\"#FFFCFA\" fillOpacity=\"0.1\" />\n                                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.69751 7.33898C0.69751 6.23441 1.82256 5.33898 3.21039 5.33898H18.6873C20.0751 5.33898 21.2001 6.23441 21.2001 7.33898C21.2001 8.44355 20.0751 9.33898 18.6873 9.33898H3.21039C1.82256 9.33898 0.69751 8.44355 0.69751 7.33898Z\" fill=\"#FFFCFA\" />\n                                        <path d=\"M3.57751 23.4774C5.16751 23.4774 5.72751 21.8174 5.72751 19.9074C5.72751 17.9974 5.15751 16.3074 3.50751 16.3074C1.69751 16.3074 1.34751 18.2374 1.34751 19.8974C1.34751 21.5574 1.71751 23.4774 3.57751 23.4774ZM3.55751 22.8174C2.28751 22.8174 2.05751 21.3674 2.05751 19.8974C2.05751 18.3974 2.28751 16.9674 3.50751 16.9674C4.67751 16.9674 4.98751 18.2874 4.98751 19.8974C4.98751 21.4774 4.68751 22.8174 3.55751 22.8174ZM7.93134 22.7274C9.70134 21.6174 11.2813 20.1974 11.2813 18.4174C11.2813 17.0774 10.4313 16.3074 9.19134 16.3074C7.75134 16.3074 6.96134 17.3474 6.96134 18.7174L7.64134 18.7674C7.65134 17.7374 8.13134 16.9674 9.19134 16.9674C10.0913 16.9674 10.5813 17.5274 10.5813 18.4074C10.5813 20.2574 8.41134 21.7174 6.78134 22.7374V23.3774H11.6013V22.7274H7.93134ZM13.3152 19.7674H14.2052V18.6674H13.3152V19.7674ZM13.3152 23.3774H14.2052V22.2774H13.3152V23.3774ZM18.2529 23.4774C19.6129 23.4774 20.6929 22.7174 20.6929 21.3974C20.6929 20.3774 20.0329 19.7974 19.2729 19.6574C19.7929 19.4874 20.3229 18.9274 20.3229 18.0874C20.3229 16.9474 19.3629 16.3074 18.2629 16.3074C17.0529 16.3074 16.1429 17.0474 16.1429 18.2574L16.8129 18.3074C16.8229 17.4474 17.4229 16.9674 18.2929 16.9674C19.0329 16.9674 19.6329 17.3474 19.6329 18.1674C19.6329 19.0374 18.9229 19.4174 17.9129 19.4174V19.9974C18.8129 19.9974 20.0029 20.1574 20.0029 21.3374C20.0029 22.2874 19.2529 22.8174 18.2629 22.8174C17.2129 22.8174 16.4829 22.2474 16.4829 21.2574L15.8029 21.2974C15.8029 22.7074 16.8629 23.4774 18.2529 23.4774ZM24.0267 23.4774C25.6167 23.4774 26.1767 21.8174 26.1767 19.9074C26.1767 17.9974 25.6067 16.3074 23.9567 16.3074C22.1467 16.3074 21.7967 18.2374 21.7967 19.8974C21.7967 21.5574 22.1667 23.4774 24.0267 23.4774ZM24.0067 22.8174C22.7367 22.8174 22.5067 21.3674 22.5067 19.8974C22.5067 18.3974 22.7367 16.9674 23.9567 16.9674C25.1267 16.9674 25.4367 18.2874 25.4367 19.8974C25.4367 21.4774 25.1367 22.8174 24.0067 22.8174Z\" fill=\"#FFFCFA\" />\n                                        <path d=\"M203.609 21.0574V16.4074H202.969L199.429 21.2674V21.7174H202.919V23.3774H203.609V21.7174H204.739V21.0574H203.609ZM200.349 21.0574L202.919 17.4474V21.0574H200.349ZM207.893 18.7174C207.383 18.7174 206.853 18.8874 206.383 19.3274L206.783 17.0674H209.823V16.4074H206.213L205.583 20.0074L206.283 20.1974C206.633 19.6874 207.143 19.3574 207.813 19.3574C208.823 19.3574 209.423 20.0974 209.423 21.0174C209.423 21.9674 208.763 22.7974 207.733 22.7974C206.823 22.7974 206.193 22.1774 206.043 21.3374L205.363 21.4474C205.563 22.5674 206.473 23.4574 207.733 23.4574C209.123 23.4574 210.153 22.3374 210.153 21.0174C210.153 19.7374 209.203 18.7174 207.893 18.7174ZM211.867 19.7674H212.757V18.6674H211.867V19.7674ZM211.867 23.3774H212.757V22.2774H211.867V23.3774ZM216.995 18.7174C216.485 18.7174 215.955 18.8874 215.485 19.3274L215.885 17.0674H218.925V16.4074H215.315L214.685 20.0074L215.385 20.1974C215.735 19.6874 216.245 19.3574 216.915 19.3574C217.925 19.3574 218.525 20.0974 218.525 21.0174C218.525 21.9674 217.865 22.7974 216.835 22.7974C215.925 22.7974 215.295 22.1774 215.145 21.3374L214.465 21.4474C214.665 22.5674 215.575 23.4574 216.835 23.4574C218.225 23.4574 219.255 22.3374 219.255 21.0174C219.255 19.7374 218.305 18.7174 216.995 18.7174ZM222.578 23.4774C224.168 23.4774 224.728 21.8174 224.728 19.9074C224.728 17.9974 224.158 16.3074 222.508 16.3074C220.698 16.3074 220.348 18.2374 220.348 19.8974C220.348 21.5574 220.718 23.4774 222.578 23.4774ZM222.558 22.8174C221.288 22.8174 221.058 21.3674 221.058 19.8974C221.058 18.3974 221.288 16.9674 222.508 16.9674C223.678 16.9674 223.988 18.2874 223.988 19.8974C223.988 21.4774 223.688 22.8174 222.558 22.8174Z\" fill=\"#FFFCFA\" />\n                                    </svg>\n                                    <svg className=\"mx-auto\" xmlns=\"http://www.w3.org/2000/svg\" width=\"181\" height=\"53\" viewBox=\"0 0 181 53\" fill=\"none\">\n                                        <path d=\"M3.47339 24.3774H13.4734C17.8917 24.3774 21.4734 27.9592 21.4734 32.3774V34.3774M3.47339 24.3774L9.47339 30.3774M3.47339 24.3774L9.47339 18.3774\" stroke=\"#FFFCFA\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M90.4733 47.1774C101.961 47.1774 111.273 37.865 111.273 26.3774C111.273 14.8899 101.961 5.57744 90.4733 5.57744C78.9858 5.57744 69.6733 14.8899 69.6733 26.3774C69.6733 37.865 78.9858 47.1774 90.4733 47.1774ZM89.3156 19.0141C88.5177 18.4822 87.4919 18.4326 86.6465 18.8851C85.8011 19.3375 85.2733 20.2186 85.2733 21.1774V31.5774C85.2733 32.5363 85.8011 33.4174 86.6465 33.8698C87.4919 34.3223 88.5177 34.2727 89.3156 33.7408L97.1156 28.5408C97.8389 28.0586 98.2733 27.2468 98.2733 26.3774C98.2733 25.5081 97.8389 24.6963 97.1156 24.2141L89.3156 19.0141Z\" fill=\"#FFFCFA\" />\n                                        <path d=\"M160.791 20.6955C159.034 22.4528 159.034 25.3021 160.791 27.0594L168.473 34.7415L176.155 27.0594C177.913 25.3021 177.913 22.4528 176.155 20.6955C174.398 18.9381 171.549 18.9381 169.791 20.6955L168.473 22.0135L167.155 20.6955C165.398 18.9381 162.549 18.9381 160.791 20.6955Z\" stroke=\"#FFFCFA\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                    </svg>\n\n                                </div> :\n                                <div></div>\n                            }   </div>\n\n                        <div className=\"block md:hidden w-full text-center bg-black rounded-xl p-4  absolute z-30\">\n                            {(episodio !== undefined) ?\n                                <div className=\"flex items-center\">\n                                    <div className=\"w-24\">\n                                        <img className=\"rounded-xl w-full\" src=\"https://res.cloudinary.com/isita/image/upload/v1638128101/static/Instagram_post_-_59_eb6mfy.png\" />\n                                    </div>\n                                    <div className=\"w-full\">\n                                        <p className=\"font-semibold text-white \"> {invitado}</p>\n                                        <p className=\"font-normal text-sm text-white mb-2\"> {programa}</p>\n                                    </div>\n                                    <div className=\"w-9\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-35 w-35\" viewBox=\"0 0 20 20\" fill=\"#FFFFFF\">\n                                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\n                                        </svg>\n                                    </div>\n                                </div> :\n                                <div></div>\n                            }   </div>\n\n                        <div className=\"hidden lg:block md:w-auto absolute bottom-4 md:-bottom-6 right-0\" style={{ width: '367px' }}>\n                            {renderLottie2 && <OrangeCurvedLottie />}\n                        </div>\n\n                        <svg className=\"h-full md:h-auto absolute -top-5 left-1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"112\" height=\"204\" viewBox=\"0 0 112 204\" fill=\"none\">\n                            <mask id=\"path-1-inside-1_15:2488\" fill=\"white\">\n                                <path d=\"M1.95638 200.256C2.78481 200.256 3.45638 200.928 3.45638 201.756C3.45638 202.584 2.78481 203.256 1.95638 203.256C1.12796 203.256 0.456383 202.584 0.456383 201.756C0.456383 200.928 1.12796 200.256 1.95638 200.256Z\" />\n                                <path d=\"M17.3378 200.256C18.1662 200.256 18.8378 200.928 18.8378 201.756C18.8378 202.584 18.1662 203.256 17.3378 203.256C16.5094 203.256 15.8378 202.584 15.8378 201.756C15.8378 200.928 16.5094 200.256 17.3378 200.256Z\" />\n                                <path d=\"M32.7192 200.256C33.5476 200.256 34.2192 200.928 34.2192 201.756C34.2192 202.584 33.5477 203.256 32.7192 203.256C31.8908 203.256 31.2192 202.584 31.2192 201.756C31.2192 200.928 31.8908 200.256 32.7192 200.256Z\" />\n                                <path d=\"M48.1006 200.256C48.9291 200.256 49.6006 200.928 49.6006 201.756C49.6006 202.584 48.9291 203.256 48.1006 203.256C47.2722 203.256 46.6006 202.584 46.6006 201.756C46.6006 200.928 47.2722 200.256 48.1006 200.256Z\" />\n                                <path d=\"M63.4821 200.256C64.3105 200.256 64.9821 200.928 64.9821 201.756C64.9821 202.584 64.3105 203.256 63.4821 203.256C62.6536 203.256 61.9821 202.584 61.9821 201.756C61.9821 200.928 62.6536 200.256 63.4821 200.256Z\" />\n                                <path d=\"M78.8635 200.256C79.6919 200.256 80.3635 200.928 80.3635 201.756C80.3635 202.584 79.6919 203.256 78.8635 203.256C78.0351 203.256 77.3635 202.584 77.3635 201.756C77.3635 200.928 78.0351 200.256 78.8635 200.256Z\" />\n                                <path d=\"M94.2449 200.256C95.0733 200.256 95.7449 200.928 95.7449 201.756C95.7449 202.584 95.0733 203.256 94.2449 203.256C93.4165 203.256 92.7449 202.584 92.7449 201.756C92.7449 200.928 93.4165 200.256 94.2449 200.256Z\" />\n                                <path d=\"M109.626 200.256C110.455 200.256 111.126 200.928 111.126 201.756C111.126 202.584 110.455 203.256 109.626 203.256C108.798 203.256 108.126 202.584 108.126 201.756C108.126 200.928 108.798 200.256 109.626 200.256Z\" />\n                                <path d=\"M1.95638 184.875C2.78481 184.875 3.45638 185.546 3.45638 186.375C3.45638 187.203 2.78481 187.875 1.95638 187.875C1.12795 187.875 0.456381 187.203 0.456381 186.375C0.456381 185.546 1.12795 184.875 1.95638 184.875Z\" />\n                                <path d=\"M17.3378 184.875C18.1662 184.875 18.8378 185.546 18.8378 186.375C18.8378 187.203 18.1662 187.875 17.3378 187.875C16.5094 187.875 15.8378 187.203 15.8378 186.375C15.8378 185.546 16.5094 184.875 17.3378 184.875Z\" />\n                                <path d=\"M32.7192 184.875C33.5476 184.875 34.2192 185.546 34.2192 186.375C34.2192 187.203 33.5476 187.875 32.7192 187.875C31.8908 187.875 31.2192 187.203 31.2192 186.375C31.2192 185.546 31.8908 184.875 32.7192 184.875Z\" />\n                                <path d=\"M48.1006 184.875C48.9291 184.875 49.6006 185.546 49.6006 186.375C49.6006 187.203 48.9291 187.875 48.1006 187.875C47.2722 187.875 46.6006 187.203 46.6006 186.375C46.6006 185.546 47.2722 184.875 48.1006 184.875Z\" />\n                                <path d=\"M63.4821 184.875C64.3105 184.875 64.9821 185.546 64.9821 186.375C64.9821 187.203 64.3105 187.875 63.4821 187.875C62.6536 187.875 61.9821 187.203 61.9821 186.375C61.9821 185.546 62.6536 184.875 63.4821 184.875Z\" />\n                                <path d=\"M78.8635 184.875C79.6919 184.875 80.3635 185.546 80.3635 186.375C80.3635 187.203 79.6919 187.875 78.8635 187.875C78.0351 187.875 77.3635 187.203 77.3635 186.375C77.3635 185.546 78.0351 184.875 78.8635 184.875Z\" />\n                                <path d=\"M94.2449 184.875C95.0733 184.875 95.7449 185.546 95.7449 186.375C95.7449 187.203 95.0733 187.875 94.2449 187.875C93.4165 187.875 92.7449 187.203 92.7449 186.375C92.7449 185.546 93.4165 184.875 94.2449 184.875Z\" />\n                                <path d=\"M109.626 184.875C110.455 184.875 111.126 185.546 111.126 186.375C111.126 187.203 110.455 187.875 109.626 187.875C108.798 187.875 108.126 187.203 108.126 186.375C108.126 185.546 108.798 184.875 109.626 184.875Z\" />\n                                <path d=\"M1.95638 169.493C2.78481 169.493 3.45638 170.165 3.45638 170.993C3.45638 171.822 2.78481 172.493 1.95638 172.493C1.12795 172.493 0.45638 171.822 0.45638 170.993C0.45638 170.165 1.12795 169.493 1.95638 169.493Z\" />\n                                <path d=\"M17.3378 169.493C18.1662 169.493 18.8378 170.165 18.8378 170.993C18.8378 171.822 18.1662 172.493 17.3378 172.493C16.5094 172.493 15.8378 171.822 15.8378 170.993C15.8378 170.165 16.5094 169.493 17.3378 169.493Z\" />\n                                <path d=\"M32.7192 169.493C33.5476 169.493 34.2192 170.165 34.2192 170.993C34.2192 171.822 33.5476 172.493 32.7192 172.493C31.8908 172.493 31.2192 171.822 31.2192 170.993C31.2192 170.165 31.8908 169.493 32.7192 169.493Z\" />\n                                <path d=\"M48.1006 169.493C48.9291 169.493 49.6006 170.165 49.6006 170.993C49.6006 171.822 48.9291 172.493 48.1006 172.493C47.2722 172.493 46.6006 171.822 46.6006 170.993C46.6006 170.165 47.2722 169.493 48.1006 169.493Z\" />\n                                <path d=\"M63.4821 169.493C64.3105 169.493 64.9821 170.165 64.9821 170.993C64.9821 171.822 64.3105 172.493 63.4821 172.493C62.6536 172.493 61.9821 171.822 61.9821 170.993C61.9821 170.165 62.6536 169.493 63.4821 169.493Z\" />\n                                <path d=\"M78.8635 169.493C79.6919 169.493 80.3635 170.165 80.3635 170.993C80.3635 171.822 79.6919 172.493 78.8635 172.493C78.0351 172.493 77.3635 171.822 77.3635 170.993C77.3635 170.165 78.0351 169.493 78.8635 169.493Z\" />\n                                <path d=\"M94.2449 169.493C95.0733 169.493 95.7449 170.165 95.7449 170.993C95.7449 171.822 95.0733 172.493 94.2449 172.493C93.4165 172.493 92.7449 171.822 92.7449 170.993C92.7449 170.165 93.4165 169.493 94.2449 169.493Z\" />\n                                <path d=\"M109.626 169.493C110.455 169.493 111.126 170.165 111.126 170.993C111.126 171.822 110.455 172.493 109.626 172.493C108.798 172.493 108.126 171.822 108.126 170.993C108.126 170.165 108.798 169.493 109.626 169.493Z\" />\n                                <path d=\"M1.95638 154.112C2.78481 154.112 3.45638 154.783 3.45638 155.612C3.45638 156.44 2.78481 157.112 1.95638 157.112C1.12795 157.112 0.456379 156.44 0.456379 155.612C0.456379 154.783 1.12795 154.112 1.95638 154.112Z\" />\n                                <path d=\"M17.3378 154.112C18.1662 154.112 18.8378 154.783 18.8378 155.612C18.8378 156.44 18.1662 157.112 17.3378 157.112C16.5094 157.112 15.8378 156.44 15.8378 155.612C15.8378 154.783 16.5094 154.112 17.3378 154.112Z\" />\n                                <path d=\"M32.7192 154.112C33.5476 154.112 34.2192 154.783 34.2192 155.612C34.2192 156.44 33.5476 157.112 32.7192 157.112C31.8908 157.112 31.2192 156.44 31.2192 155.612C31.2192 154.783 31.8908 154.112 32.7192 154.112Z\" />\n                                <path d=\"M48.1006 154.112C48.9291 154.112 49.6006 154.783 49.6006 155.612C49.6006 156.44 48.9291 157.112 48.1006 157.112C47.2722 157.112 46.6006 156.44 46.6006 155.612C46.6006 154.783 47.2722 154.112 48.1006 154.112Z\" />\n                                <path d=\"M63.4821 154.112C64.3105 154.112 64.9821 154.783 64.9821 155.612C64.9821 156.44 64.3105 157.112 63.4821 157.112C62.6536 157.112 61.9821 156.44 61.9821 155.612C61.9821 154.783 62.6536 154.112 63.4821 154.112Z\" />\n                                <path d=\"M78.8635 154.112C79.6919 154.112 80.3635 154.783 80.3635 155.612C80.3635 156.44 79.6919 157.112 78.8635 157.112C78.0351 157.112 77.3635 156.44 77.3635 155.612C77.3635 154.783 78.0351 154.112 78.8635 154.112Z\" />\n                                <path d=\"M94.2449 154.112C95.0733 154.112 95.7449 154.783 95.7449 155.612C95.7449 156.44 95.0733 157.112 94.2449 157.112C93.4165 157.112 92.7449 156.44 92.7449 155.612C92.7449 154.783 93.4165 154.112 94.2449 154.112Z\" />\n                                <path d=\"M109.626 154.112C110.455 154.112 111.126 154.783 111.126 155.612C111.126 156.44 110.455 157.112 109.626 157.112C108.798 157.112 108.126 156.44 108.126 155.612C108.126 154.783 108.798 154.112 109.626 154.112Z\" />\n                                <path d=\"M1.95638 138.73C2.7848 138.73 3.45638 139.402 3.45638 140.23C3.45638 141.059 2.7848 141.73 1.95638 141.73C1.12795 141.73 0.456377 141.059 0.456377 140.23C0.456377 139.402 1.12795 138.73 1.95638 138.73Z\" />\n                                <path d=\"M17.3378 138.73C18.1662 138.73 18.8378 139.402 18.8378 140.23C18.8378 141.059 18.1662 141.73 17.3378 141.73C16.5094 141.73 15.8378 141.059 15.8378 140.23C15.8378 139.402 16.5094 138.73 17.3378 138.73Z\" />\n                                <path d=\"M32.7192 138.73C33.5476 138.73 34.2192 139.402 34.2192 140.23C34.2192 141.059 33.5476 141.73 32.7192 141.73C31.8908 141.73 31.2192 141.059 31.2192 140.23C31.2192 139.402 31.8908 138.73 32.7192 138.73Z\" />\n                                <path d=\"M48.1006 138.73C48.9291 138.73 49.6006 139.402 49.6006 140.23C49.6006 141.059 48.9291 141.73 48.1006 141.73C47.2722 141.73 46.6006 141.059 46.6006 140.23C46.6006 139.402 47.2722 138.73 48.1006 138.73Z\" />\n                                <path d=\"M63.4821 138.73C64.3105 138.73 64.9821 139.402 64.9821 140.23C64.9821 141.059 64.3105 141.73 63.4821 141.73C62.6536 141.73 61.9821 141.059 61.9821 140.23C61.9821 139.402 62.6536 138.73 63.4821 138.73Z\" />\n                                <path d=\"M78.8635 138.73C79.6919 138.73 80.3635 139.402 80.3635 140.23C80.3635 141.059 79.6919 141.73 78.8635 141.73C78.0351 141.73 77.3635 141.059 77.3635 140.23C77.3635 139.402 78.0351 138.73 78.8635 138.73Z\" />\n                                <path d=\"M94.2449 138.73C95.0733 138.73 95.7449 139.402 95.7449 140.23C95.7449 141.059 95.0733 141.73 94.2449 141.73C93.4165 141.73 92.7449 141.059 92.7449 140.23C92.7449 139.402 93.4165 138.73 94.2449 138.73Z\" />\n                                <path d=\"M109.626 138.73C110.455 138.73 111.126 139.402 111.126 140.23C111.126 141.059 110.455 141.73 109.626 141.73C108.798 141.73 108.126 141.059 108.126 140.23C108.126 139.402 108.798 138.73 109.626 138.73Z\" />\n                                <path d=\"M1.95638 123.349C2.7848 123.349 3.45638 124.021 3.45638 124.849C3.45638 125.677 2.7848 126.349 1.95638 126.349C1.12795 126.349 0.456376 125.677 0.456376 124.849C0.456376 124.021 1.12795 123.349 1.95638 123.349Z\" />\n                                <path d=\"M17.3378 123.349C18.1662 123.349 18.8378 124.021 18.8378 124.849C18.8378 125.677 18.1662 126.349 17.3378 126.349C16.5094 126.349 15.8378 125.677 15.8378 124.849C15.8378 124.021 16.5094 123.349 17.3378 123.349Z\" />\n                                <path d=\"M32.7192 123.349C33.5476 123.349 34.2192 124.021 34.2192 124.849C34.2192 125.677 33.5476 126.349 32.7192 126.349C31.8908 126.349 31.2192 125.677 31.2192 124.849C31.2192 124.021 31.8908 123.349 32.7192 123.349Z\" />\n                                <path d=\"M48.1006 123.349C48.9291 123.349 49.6006 124.021 49.6006 124.849C49.6006 125.677 48.9291 126.349 48.1006 126.349C47.2722 126.349 46.6006 125.677 46.6006 124.849C46.6006 124.021 47.2722 123.349 48.1006 123.349Z\" />\n                                <path d=\"M63.4821 123.349C64.3105 123.349 64.9821 124.021 64.9821 124.849C64.9821 125.677 64.3105 126.349 63.4821 126.349C62.6536 126.349 61.9821 125.677 61.9821 124.849C61.9821 124.021 62.6536 123.349 63.4821 123.349Z\" />\n                                <path d=\"M78.8635 123.349C79.6919 123.349 80.3635 124.021 80.3635 124.849C80.3635 125.677 79.6919 126.349 78.8635 126.349C78.0351 126.349 77.3635 125.677 77.3635 124.849C77.3635 124.021 78.0351 123.349 78.8635 123.349Z\" />\n                                <path d=\"M94.2449 123.349C95.0733 123.349 95.7449 124.021 95.7449 124.849C95.7449 125.677 95.0733 126.349 94.2449 126.349C93.4165 126.349 92.7449 125.677 92.7449 124.849C92.7449 124.021 93.4165 123.349 94.2449 123.349Z\" />\n                                <path d=\"M109.626 123.349C110.455 123.349 111.126 124.021 111.126 124.849C111.126 125.677 110.455 126.349 109.626 126.349C108.798 126.349 108.126 125.677 108.126 124.849C108.126 124.021 108.798 123.349 109.626 123.349Z\" />\n                                <path d=\"M1.95637 107.968C2.7848 107.968 3.45637 108.639 3.45637 109.468C3.45637 110.296 2.7848 110.968 1.95637 110.968C1.12795 110.968 0.456375 110.296 0.456375 109.468C0.456375 108.639 1.12795 107.968 1.95637 107.968Z\" />\n                                <path d=\"M17.3378 107.968C18.1662 107.968 18.8378 108.639 18.8378 109.468C18.8378 110.296 18.1662 110.968 17.3378 110.968C16.5094 110.968 15.8378 110.296 15.8378 109.468C15.8378 108.639 16.5094 107.968 17.3378 107.968Z\" />\n                                <path d=\"M32.7192 107.968C33.5476 107.968 34.2192 108.639 34.2192 109.468C34.2192 110.296 33.5476 110.968 32.7192 110.968C31.8908 110.968 31.2192 110.296 31.2192 109.468C31.2192 108.639 31.8908 107.968 32.7192 107.968Z\" />\n                                <path d=\"M48.1006 107.968C48.9291 107.968 49.6006 108.639 49.6006 109.468C49.6006 110.296 48.9291 110.968 48.1006 110.968C47.2722 110.968 46.6006 110.296 46.6006 109.468C46.6006 108.639 47.2722 107.968 48.1006 107.968Z\" />\n                                <path d=\"M63.4821 107.968C64.3105 107.968 64.9821 108.639 64.9821 109.468C64.9821 110.296 64.3105 110.968 63.4821 110.968C62.6536 110.968 61.9821 110.296 61.9821 109.468C61.9821 108.639 62.6536 107.968 63.4821 107.968Z\" />\n                                <path d=\"M78.8635 107.968C79.6919 107.968 80.3635 108.639 80.3635 109.468C80.3635 110.296 79.6919 110.968 78.8635 110.968C78.0351 110.968 77.3635 110.296 77.3635 109.468C77.3635 108.639 78.0351 107.968 78.8635 107.968Z\" />\n                                <path d=\"M94.2449 107.968C95.0733 107.968 95.7449 108.639 95.7449 109.468C95.7449 110.296 95.0733 110.968 94.2449 110.968C93.4165 110.968 92.7449 110.296 92.7449 109.468C92.7449 108.639 93.4165 107.968 94.2449 107.968Z\" />\n                                <path d=\"M109.626 107.968C110.455 107.968 111.126 108.639 111.126 109.468C111.126 110.296 110.455 110.968 109.626 110.968C108.798 110.968 108.126 110.296 108.126 109.468C108.126 108.639 108.798 107.968 109.626 107.968Z\" />\n                                <path d=\"M1.95637 92.5861C2.7848 92.5861 3.45637 93.2577 3.45637 94.0861C3.45637 94.9145 2.7848 95.5861 1.95637 95.5861C1.12795 95.5861 0.456373 94.9145 0.456373 94.0861C0.456373 93.2577 1.12795 92.5861 1.95637 92.5861Z\" />\n                                <path d=\"M17.3378 92.5861C18.1662 92.5861 18.8378 93.2577 18.8378 94.0861C18.8378 94.9145 18.1662 95.5861 17.3378 95.5861C16.5094 95.5861 15.8378 94.9145 15.8378 94.0861C15.8378 93.2577 16.5094 92.5861 17.3378 92.5861Z\" />\n                                <path d=\"M32.7192 92.5861C33.5476 92.5861 34.2192 93.2577 34.2192 94.0861C34.2192 94.9145 33.5476 95.5861 32.7192 95.5861C31.8908 95.5861 31.2192 94.9145 31.2192 94.0861C31.2192 93.2577 31.8908 92.5861 32.7192 92.5861Z\" />\n                                <path d=\"M48.1006 92.5861C48.9291 92.5861 49.6006 93.2577 49.6006 94.0861C49.6006 94.9145 48.9291 95.5861 48.1006 95.5861C47.2722 95.5861 46.6006 94.9145 46.6006 94.0861C46.6006 93.2577 47.2722 92.5861 48.1006 92.5861Z\" />\n                                <path d=\"M63.4821 92.5861C64.3105 92.5861 64.9821 93.2577 64.9821 94.0861C64.9821 94.9145 64.3105 95.5861 63.4821 95.5861C62.6536 95.5861 61.9821 94.9145 61.9821 94.0861C61.9821 93.2577 62.6536 92.5861 63.4821 92.5861Z\" />\n                                <path d=\"M78.8635 92.5861C79.6919 92.5861 80.3635 93.2577 80.3635 94.0861C80.3635 94.9145 79.6919 95.5861 78.8635 95.5861C78.0351 95.5861 77.3635 94.9145 77.3635 94.0861C77.3635 93.2577 78.0351 92.5861 78.8635 92.5861Z\" />\n                                <path d=\"M94.2449 92.5861C95.0733 92.5861 95.7449 93.2577 95.7449 94.0861C95.7449 94.9145 95.0733 95.5861 94.2449 95.5861C93.4165 95.5861 92.7449 94.9145 92.7449 94.0861C92.7449 93.2577 93.4165 92.5861 94.2449 92.5861Z\" />\n                                <path d=\"M109.626 92.5861C110.455 92.5861 111.126 93.2577 111.126 94.0861C111.126 94.9145 110.455 95.5861 109.626 95.5861C108.798 95.5861 108.126 94.9145 108.126 94.0861C108.126 93.2577 108.798 92.5861 109.626 92.5861Z\" />\n                                <path d=\"M1.95638 77.2047C2.78481 77.2047 3.45638 77.8763 3.45638 78.7047C3.45638 79.5331 2.78481 80.2047 1.95638 80.2047C1.12795 80.2047 0.45638 79.5331 0.456379 78.7047C0.456379 77.8763 1.12795 77.2047 1.95638 77.2047Z\" />\n                                <path d=\"M17.3378 77.2047C18.1662 77.2047 18.8378 77.8763 18.8378 78.7047C18.8378 79.5331 18.1662 80.2047 17.3378 80.2047C16.5094 80.2047 15.8378 79.5331 15.8378 78.7047C15.8378 77.8763 16.5094 77.2047 17.3378 77.2047Z\" />\n                                <path d=\"M32.7192 77.2047C33.5476 77.2047 34.2192 77.8763 34.2192 78.7047C34.2192 79.5331 33.5476 80.2047 32.7192 80.2047C31.8908 80.2047 31.2192 79.5331 31.2192 78.7047C31.2192 77.8763 31.8908 77.2047 32.7192 77.2047Z\" />\n                                <path d=\"M48.1006 77.2047C48.9291 77.2047 49.6006 77.8763 49.6006 78.7047C49.6006 79.5331 48.9291 80.2047 48.1006 80.2047C47.2722 80.2047 46.6006 79.5331 46.6006 78.7047C46.6006 77.8763 47.2722 77.2047 48.1006 77.2047Z\" />\n                                <path d=\"M63.4821 77.2047C64.3105 77.2047 64.9821 77.8763 64.9821 78.7047C64.9821 79.5331 64.3105 80.2047 63.4821 80.2047C62.6536 80.2047 61.9821 79.5331 61.9821 78.7047C61.9821 77.8763 62.6536 77.2047 63.4821 77.2047Z\" />\n                                <path d=\"M78.8635 77.2047C79.6919 77.2047 80.3635 77.8763 80.3635 78.7047C80.3635 79.5331 79.6919 80.2047 78.8635 80.2047C78.0351 80.2047 77.3635 79.5331 77.3635 78.7047C77.3635 77.8763 78.0351 77.2047 78.8635 77.2047Z\" />\n                                <path d=\"M94.2449 77.2047C95.0733 77.2047 95.7449 77.8763 95.7449 78.7047C95.7449 79.5331 95.0733 80.2047 94.2449 80.2047C93.4165 80.2047 92.7449 79.5331 92.7449 78.7047C92.7449 77.8763 93.4165 77.2047 94.2449 77.2047Z\" />\n                                <path d=\"M109.626 77.2047C110.455 77.2047 111.126 77.8763 111.126 78.7047C111.126 79.5331 110.455 80.2047 109.626 80.2047C108.798 80.2047 108.126 79.5331 108.126 78.7047C108.126 77.8763 108.798 77.2047 109.626 77.2047Z\" />\n                                <path d=\"M1.95638 61.8233C2.78481 61.8233 3.45638 62.4948 3.45638 63.3233C3.45638 64.1517 2.78481 64.8233 1.95638 64.8233C1.12795 64.8233 0.456378 64.1517 0.456378 63.3233C0.456378 62.4948 1.12795 61.8233 1.95638 61.8233Z\" />\n                                <path d=\"M17.3378 61.8233C18.1662 61.8233 18.8378 62.4948 18.8378 63.3233C18.8378 64.1517 18.1662 64.8233 17.3378 64.8233C16.5094 64.8233 15.8378 64.1517 15.8378 63.3233C15.8378 62.4948 16.5094 61.8233 17.3378 61.8233Z\" />\n                                <path d=\"M32.7192 61.8233C33.5476 61.8233 34.2192 62.4948 34.2192 63.3233C34.2192 64.1517 33.5476 64.8233 32.7192 64.8233C31.8908 64.8233 31.2192 64.1517 31.2192 63.3233C31.2192 62.4948 31.8908 61.8233 32.7192 61.8233Z\" />\n                                <path d=\"M48.1006 61.8233C48.9291 61.8233 49.6006 62.4948 49.6006 63.3233C49.6006 64.1517 48.9291 64.8233 48.1006 64.8233C47.2722 64.8233 46.6006 64.1517 46.6006 63.3233C46.6006 62.4948 47.2722 61.8233 48.1006 61.8233Z\" />\n                                <path d=\"M63.4821 61.8233C64.3105 61.8233 64.9821 62.4948 64.9821 63.3233C64.9821 64.1517 64.3105 64.8233 63.4821 64.8233C62.6536 64.8233 61.9821 64.1517 61.9821 63.3233C61.9821 62.4948 62.6536 61.8233 63.4821 61.8233Z\" />\n                                <path d=\"M78.8635 61.8233C79.6919 61.8233 80.3635 62.4948 80.3635 63.3233C80.3635 64.1517 79.6919 64.8233 78.8635 64.8233C78.0351 64.8233 77.3635 64.1517 77.3635 63.3233C77.3635 62.4948 78.0351 61.8233 78.8635 61.8233Z\" />\n                                <path d=\"M94.2449 61.8233C95.0733 61.8233 95.7449 62.4948 95.7449 63.3233C95.7449 64.1517 95.0733 64.8233 94.2449 64.8233C93.4165 64.8233 92.7449 64.1517 92.7449 63.3233C92.7449 62.4948 93.4165 61.8233 94.2449 61.8233Z\" />\n                                <path d=\"M109.626 61.8233C110.455 61.8233 111.126 62.4948 111.126 63.3233C111.126 64.1517 110.455 64.8233 109.626 64.8233C108.798 64.8233 108.126 64.1517 108.126 63.3233C108.126 62.4948 108.798 61.8233 109.626 61.8233Z\" />\n                                <path d=\"M1.95638 46.4419C2.7848 46.4419 3.45638 47.1134 3.45638 47.9419C3.45638 48.7703 2.7848 49.4419 1.95638 49.4419C1.12795 49.4419 0.456377 48.7703 0.456377 47.9419C0.456377 47.1134 1.12795 46.4419 1.95638 46.4419Z\" />\n                                <path d=\"M17.3378 46.4418C18.1662 46.4418 18.8378 47.1134 18.8378 47.9418C18.8378 48.7703 18.1662 49.4418 17.3378 49.4418C16.5094 49.4418 15.8378 48.7703 15.8378 47.9418C15.8378 47.1134 16.5094 46.4418 17.3378 46.4418Z\" />\n                                <path d=\"M32.7192 46.4418C33.5476 46.4418 34.2192 47.1134 34.2192 47.9418C34.2192 48.7703 33.5476 49.4418 32.7192 49.4418C31.8908 49.4418 31.2192 48.7703 31.2192 47.9418C31.2192 47.1134 31.8908 46.4418 32.7192 46.4418Z\" />\n                                <path d=\"M48.1006 46.4418C48.9291 46.4418 49.6006 47.1134 49.6006 47.9418C49.6006 48.7703 48.9291 49.4418 48.1006 49.4418C47.2722 49.4418 46.6006 48.7703 46.6006 47.9418C46.6006 47.1134 47.2722 46.4418 48.1006 46.4418Z\" />\n                                <path d=\"M63.4821 46.4418C64.3105 46.4418 64.9821 47.1134 64.9821 47.9418C64.9821 48.7703 64.3105 49.4418 63.4821 49.4418C62.6536 49.4418 61.9821 48.7703 61.9821 47.9418C61.9821 47.1134 62.6536 46.4418 63.4821 46.4418Z\" />\n                                <path d=\"M78.8635 46.4418C79.6919 46.4418 80.3635 47.1134 80.3635 47.9418C80.3635 48.7703 79.6919 49.4418 78.8635 49.4418C78.0351 49.4418 77.3635 48.7703 77.3635 47.9418C77.3635 47.1134 78.0351 46.4418 78.8635 46.4418Z\" />\n                                <path d=\"M94.2449 46.4418C95.0733 46.4418 95.7449 47.1134 95.7449 47.9418C95.7449 48.7703 95.0733 49.4418 94.2449 49.4418C93.4165 49.4418 92.7449 48.7703 92.7449 47.9418C92.7449 47.1134 93.4165 46.4418 94.2449 46.4418Z\" />\n                                <path d=\"M109.626 46.4418C110.455 46.4418 111.126 47.1134 111.126 47.9418C111.126 48.7703 110.455 49.4418 109.626 49.4418C108.798 49.4418 108.126 48.7703 108.126 47.9418C108.126 47.1134 108.798 46.4418 109.626 46.4418Z\" />\n                                <path d=\"M1.95638 31.0604C2.7848 31.0604 3.45638 31.732 3.45638 32.5604C3.45638 33.3889 2.7848 34.0604 1.95638 34.0604C1.12795 34.0604 0.456375 33.3889 0.456375 32.5604C0.456375 31.732 1.12795 31.0604 1.95638 31.0604Z\" />\n                                <path d=\"M17.3378 31.0604C18.1662 31.0604 18.8378 31.732 18.8378 32.5604C18.8378 33.3889 18.1662 34.0604 17.3378 34.0604C16.5094 34.0604 15.8378 33.3889 15.8378 32.5604C15.8378 31.732 16.5094 31.0604 17.3378 31.0604Z\" />\n                                <path d=\"M32.7192 31.0604C33.5476 31.0604 34.2192 31.732 34.2192 32.5604C34.2192 33.3889 33.5476 34.0604 32.7192 34.0604C31.8908 34.0604 31.2192 33.3889 31.2192 32.5604C31.2192 31.732 31.8908 31.0604 32.7192 31.0604Z\" />\n                                <path d=\"M48.1006 31.0604C48.9291 31.0604 49.6006 31.732 49.6006 32.5604C49.6006 33.3888 48.9291 34.0604 48.1006 34.0604C47.2722 34.0604 46.6006 33.3888 46.6006 32.5604C46.6006 31.732 47.2722 31.0604 48.1006 31.0604Z\" />\n                                <path d=\"M63.4821 31.0604C64.3105 31.0604 64.9821 31.732 64.9821 32.5604C64.9821 33.3888 64.3105 34.0604 63.4821 34.0604C62.6536 34.0604 61.9821 33.3888 61.9821 32.5604C61.9821 31.732 62.6536 31.0604 63.4821 31.0604Z\" />\n                                <path d=\"M78.8635 31.0604C79.6919 31.0604 80.3635 31.732 80.3635 32.5604C80.3635 33.3888 79.6919 34.0604 78.8635 34.0604C78.0351 34.0604 77.3635 33.3888 77.3635 32.5604C77.3635 31.732 78.0351 31.0604 78.8635 31.0604Z\" />\n                                <path d=\"M94.2449 31.0604C95.0733 31.0604 95.7449 31.732 95.7449 32.5604C95.7449 33.3888 95.0733 34.0604 94.2449 34.0604C93.4165 34.0604 92.7449 33.3888 92.7449 32.5604C92.7449 31.732 93.4165 31.0604 94.2449 31.0604Z\" />\n                                <path d=\"M109.626 31.0604C110.455 31.0604 111.126 31.732 111.126 32.5604C111.126 33.3888 110.455 34.0604 109.626 34.0604C108.798 34.0604 108.126 33.3888 108.126 32.5604C108.126 31.732 108.798 31.0604 109.626 31.0604Z\" />\n                                <path d=\"M1.95637 15.679C2.7848 15.679 3.45637 16.3506 3.45637 17.179C3.45637 18.0074 2.7848 18.679 1.95637 18.679C1.12795 18.679 0.456374 18.0074 0.456374 17.179C0.456374 16.3506 1.12795 15.679 1.95637 15.679Z\" />\n                                <path d=\"M17.3378 15.679C18.1662 15.679 18.8378 16.3506 18.8378 17.179C18.8378 18.0074 18.1662 18.679 17.3378 18.679C16.5094 18.679 15.8378 18.0074 15.8378 17.179C15.8378 16.3506 16.5094 15.679 17.3378 15.679Z\" />\n                                <path d=\"M32.7192 15.679C33.5476 15.679 34.2192 16.3506 34.2192 17.179C34.2192 18.0074 33.5476 18.679 32.7192 18.679C31.8908 18.679 31.2192 18.0074 31.2192 17.179C31.2192 16.3506 31.8908 15.679 32.7192 15.679Z\" />\n                                <path d=\"M48.1006 15.679C48.9291 15.679 49.6006 16.3506 49.6006 17.179C49.6006 18.0074 48.9291 18.679 48.1006 18.679C47.2722 18.679 46.6006 18.0074 46.6006 17.179C46.6006 16.3506 47.2722 15.679 48.1006 15.679Z\" />\n                                <path d=\"M63.4821 15.679C64.3105 15.679 64.9821 16.3506 64.9821 17.179C64.9821 18.0074 64.3105 18.679 63.4821 18.679C62.6536 18.679 61.9821 18.0074 61.9821 17.179C61.9821 16.3506 62.6536 15.679 63.4821 15.679Z\" />\n                                <path d=\"M78.8635 15.679C79.6919 15.679 80.3635 16.3506 80.3635 17.179C80.3635 18.0074 79.6919 18.679 78.8635 18.679C78.0351 18.679 77.3635 18.0074 77.3635 17.179C77.3635 16.3506 78.0351 15.679 78.8635 15.679Z\" />\n                                <path d=\"M94.2449 15.679C95.0733 15.679 95.7449 16.3506 95.7449 17.179C95.7449 18.0074 95.0733 18.679 94.2449 18.679C93.4165 18.679 92.7449 18.0074 92.7449 17.179C92.7449 16.3506 93.4165 15.679 94.2449 15.679Z\" />\n                                <path d=\"M109.626 15.679C110.455 15.679 111.126 16.3506 111.126 17.179C111.126 18.0074 110.455 18.679 109.626 18.679C108.798 18.679 108.126 18.0074 108.126 17.179C108.126 16.3506 108.798 15.679 109.626 15.679Z\" />\n                                <path d=\"M1.95637 0.297579C2.7848 0.297579 3.45637 0.969152 3.45637 1.79758C3.45637 2.62601 2.7848 3.29758 1.95637 3.29758C1.12795 3.29758 0.456373 2.62601 0.456373 1.79758C0.456373 0.969152 1.12795 0.297579 1.95637 0.297579Z\" />\n                                <path d=\"M17.3378 0.297577C18.1662 0.297577 18.8378 0.96915 18.8378 1.79758C18.8378 2.626 18.1662 3.29758 17.3378 3.29758C16.5094 3.29758 15.8378 2.626 15.8378 1.79758C15.8378 0.969151 16.5094 0.297578 17.3378 0.297577Z\" />\n                                <path d=\"M32.7192 0.297576C33.5476 0.297576 34.2192 0.969149 34.2192 1.79758C34.2192 2.626 33.5476 3.29758 32.7192 3.29758C31.8908 3.29758 31.2192 2.626 31.2192 1.79758C31.2192 0.969149 31.8908 0.297576 32.7192 0.297576Z\" />\n                                <path d=\"M48.1006 0.297575C48.9291 0.297575 49.6006 0.969148 49.6006 1.79757C49.6006 2.626 48.9291 3.29757 48.1006 3.29757C47.2722 3.29757 46.6006 2.626 46.6006 1.79757C46.6006 0.969148 47.2722 0.297575 48.1006 0.297575Z\" />\n                                <path d=\"M63.4821 0.297573C64.3105 0.297573 64.9821 0.969146 64.9821 1.79757C64.9821 2.626 64.3105 3.29757 63.4821 3.29757C62.6536 3.29757 61.9821 2.626 61.9821 1.79757C61.9821 0.969146 62.6536 0.297573 63.4821 0.297573Z\" />\n                                <path d=\"M78.8635 0.297572C79.6919 0.297572 80.3635 0.969145 80.3635 1.79757C80.3635 2.626 79.6919 3.29757 78.8635 3.29757C78.0351 3.29757 77.3635 2.626 77.3635 1.79757C77.3635 0.969145 78.035 0.297572 78.8635 0.297572Z\" />\n                                <path d=\"M94.2449 0.297571C95.0733 0.297571 95.7449 0.969144 95.7449 1.79757C95.7449 2.626 95.0733 3.29757 94.2449 3.29757C93.4165 3.29757 92.7449 2.626 92.7449 1.79757C92.7449 0.969144 93.4165 0.297571 94.2449 0.297571Z\" />\n                                <path d=\"M109.626 0.297569C110.455 0.297569 111.126 0.969142 111.126 1.79757C111.126 2.626 110.455 3.29757 109.626 3.29757C108.798 3.29757 108.126 2.626 108.126 1.79757C108.126 0.969142 108.798 0.297569 109.626 0.297569Z\" />\n                            </mask>\n                            <path d=\"M1.95638 200.256C2.78481 200.256 3.45638 200.928 3.45638 201.756C3.45638 202.584 2.78481 203.256 1.95638 203.256C1.12796 203.256 0.456383 202.584 0.456383 201.756C0.456383 200.928 1.12796 200.256 1.95638 200.256Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 200.256C18.1662 200.256 18.8378 200.928 18.8378 201.756C18.8378 202.584 18.1662 203.256 17.3378 203.256C16.5094 203.256 15.8378 202.584 15.8378 201.756C15.8378 200.928 16.5094 200.256 17.3378 200.256Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 200.256C33.5476 200.256 34.2192 200.928 34.2192 201.756C34.2192 202.584 33.5477 203.256 32.7192 203.256C31.8908 203.256 31.2192 202.584 31.2192 201.756C31.2192 200.928 31.8908 200.256 32.7192 200.256Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 200.256C48.9291 200.256 49.6006 200.928 49.6006 201.756C49.6006 202.584 48.9291 203.256 48.1006 203.256C47.2722 203.256 46.6006 202.584 46.6006 201.756C46.6006 200.928 47.2722 200.256 48.1006 200.256Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 200.256C64.3105 200.256 64.9821 200.928 64.9821 201.756C64.9821 202.584 64.3105 203.256 63.4821 203.256C62.6536 203.256 61.9821 202.584 61.9821 201.756C61.9821 200.928 62.6536 200.256 63.4821 200.256Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 200.256C79.6919 200.256 80.3635 200.928 80.3635 201.756C80.3635 202.584 79.6919 203.256 78.8635 203.256C78.0351 203.256 77.3635 202.584 77.3635 201.756C77.3635 200.928 78.0351 200.256 78.8635 200.256Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 200.256C95.0733 200.256 95.7449 200.928 95.7449 201.756C95.7449 202.584 95.0733 203.256 94.2449 203.256C93.4165 203.256 92.7449 202.584 92.7449 201.756C92.7449 200.928 93.4165 200.256 94.2449 200.256Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 200.256C110.455 200.256 111.126 200.928 111.126 201.756C111.126 202.584 110.455 203.256 109.626 203.256C108.798 203.256 108.126 202.584 108.126 201.756C108.126 200.928 108.798 200.256 109.626 200.256Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95638 184.875C2.78481 184.875 3.45638 185.546 3.45638 186.375C3.45638 187.203 2.78481 187.875 1.95638 187.875C1.12795 187.875 0.456381 187.203 0.456381 186.375C0.456381 185.546 1.12795 184.875 1.95638 184.875Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 184.875C18.1662 184.875 18.8378 185.546 18.8378 186.375C18.8378 187.203 18.1662 187.875 17.3378 187.875C16.5094 187.875 15.8378 187.203 15.8378 186.375C15.8378 185.546 16.5094 184.875 17.3378 184.875Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 184.875C33.5476 184.875 34.2192 185.546 34.2192 186.375C34.2192 187.203 33.5476 187.875 32.7192 187.875C31.8908 187.875 31.2192 187.203 31.2192 186.375C31.2192 185.546 31.8908 184.875 32.7192 184.875Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 184.875C48.9291 184.875 49.6006 185.546 49.6006 186.375C49.6006 187.203 48.9291 187.875 48.1006 187.875C47.2722 187.875 46.6006 187.203 46.6006 186.375C46.6006 185.546 47.2722 184.875 48.1006 184.875Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 184.875C64.3105 184.875 64.9821 185.546 64.9821 186.375C64.9821 187.203 64.3105 187.875 63.4821 187.875C62.6536 187.875 61.9821 187.203 61.9821 186.375C61.9821 185.546 62.6536 184.875 63.4821 184.875Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 184.875C79.6919 184.875 80.3635 185.546 80.3635 186.375C80.3635 187.203 79.6919 187.875 78.8635 187.875C78.0351 187.875 77.3635 187.203 77.3635 186.375C77.3635 185.546 78.0351 184.875 78.8635 184.875Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 184.875C95.0733 184.875 95.7449 185.546 95.7449 186.375C95.7449 187.203 95.0733 187.875 94.2449 187.875C93.4165 187.875 92.7449 187.203 92.7449 186.375C92.7449 185.546 93.4165 184.875 94.2449 184.875Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 184.875C110.455 184.875 111.126 185.546 111.126 186.375C111.126 187.203 110.455 187.875 109.626 187.875C108.798 187.875 108.126 187.203 108.126 186.375C108.126 185.546 108.798 184.875 109.626 184.875Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95638 169.493C2.78481 169.493 3.45638 170.165 3.45638 170.993C3.45638 171.822 2.78481 172.493 1.95638 172.493C1.12795 172.493 0.45638 171.822 0.45638 170.993C0.45638 170.165 1.12795 169.493 1.95638 169.493Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 169.493C18.1662 169.493 18.8378 170.165 18.8378 170.993C18.8378 171.822 18.1662 172.493 17.3378 172.493C16.5094 172.493 15.8378 171.822 15.8378 170.993C15.8378 170.165 16.5094 169.493 17.3378 169.493Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 169.493C33.5476 169.493 34.2192 170.165 34.2192 170.993C34.2192 171.822 33.5476 172.493 32.7192 172.493C31.8908 172.493 31.2192 171.822 31.2192 170.993C31.2192 170.165 31.8908 169.493 32.7192 169.493Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 169.493C48.9291 169.493 49.6006 170.165 49.6006 170.993C49.6006 171.822 48.9291 172.493 48.1006 172.493C47.2722 172.493 46.6006 171.822 46.6006 170.993C46.6006 170.165 47.2722 169.493 48.1006 169.493Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 169.493C64.3105 169.493 64.9821 170.165 64.9821 170.993C64.9821 171.822 64.3105 172.493 63.4821 172.493C62.6536 172.493 61.9821 171.822 61.9821 170.993C61.9821 170.165 62.6536 169.493 63.4821 169.493Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 169.493C79.6919 169.493 80.3635 170.165 80.3635 170.993C80.3635 171.822 79.6919 172.493 78.8635 172.493C78.0351 172.493 77.3635 171.822 77.3635 170.993C77.3635 170.165 78.0351 169.493 78.8635 169.493Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 169.493C95.0733 169.493 95.7449 170.165 95.7449 170.993C95.7449 171.822 95.0733 172.493 94.2449 172.493C93.4165 172.493 92.7449 171.822 92.7449 170.993C92.7449 170.165 93.4165 169.493 94.2449 169.493Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 169.493C110.455 169.493 111.126 170.165 111.126 170.993C111.126 171.822 110.455 172.493 109.626 172.493C108.798 172.493 108.126 171.822 108.126 170.993C108.126 170.165 108.798 169.493 109.626 169.493Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95638 154.112C2.78481 154.112 3.45638 154.783 3.45638 155.612C3.45638 156.44 2.78481 157.112 1.95638 157.112C1.12795 157.112 0.456379 156.44 0.456379 155.612C0.456379 154.783 1.12795 154.112 1.95638 154.112Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 154.112C18.1662 154.112 18.8378 154.783 18.8378 155.612C18.8378 156.44 18.1662 157.112 17.3378 157.112C16.5094 157.112 15.8378 156.44 15.8378 155.612C15.8378 154.783 16.5094 154.112 17.3378 154.112Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 154.112C33.5476 154.112 34.2192 154.783 34.2192 155.612C34.2192 156.44 33.5476 157.112 32.7192 157.112C31.8908 157.112 31.2192 156.44 31.2192 155.612C31.2192 154.783 31.8908 154.112 32.7192 154.112Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 154.112C48.9291 154.112 49.6006 154.783 49.6006 155.612C49.6006 156.44 48.9291 157.112 48.1006 157.112C47.2722 157.112 46.6006 156.44 46.6006 155.612C46.6006 154.783 47.2722 154.112 48.1006 154.112Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 154.112C64.3105 154.112 64.9821 154.783 64.9821 155.612C64.9821 156.44 64.3105 157.112 63.4821 157.112C62.6536 157.112 61.9821 156.44 61.9821 155.612C61.9821 154.783 62.6536 154.112 63.4821 154.112Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 154.112C79.6919 154.112 80.3635 154.783 80.3635 155.612C80.3635 156.44 79.6919 157.112 78.8635 157.112C78.0351 157.112 77.3635 156.44 77.3635 155.612C77.3635 154.783 78.0351 154.112 78.8635 154.112Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 154.112C95.0733 154.112 95.7449 154.783 95.7449 155.612C95.7449 156.44 95.0733 157.112 94.2449 157.112C93.4165 157.112 92.7449 156.44 92.7449 155.612C92.7449 154.783 93.4165 154.112 94.2449 154.112Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 154.112C110.455 154.112 111.126 154.783 111.126 155.612C111.126 156.44 110.455 157.112 109.626 157.112C108.798 157.112 108.126 156.44 108.126 155.612C108.126 154.783 108.798 154.112 109.626 154.112Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95638 138.73C2.7848 138.73 3.45638 139.402 3.45638 140.23C3.45638 141.059 2.7848 141.73 1.95638 141.73C1.12795 141.73 0.456377 141.059 0.456377 140.23C0.456377 139.402 1.12795 138.73 1.95638 138.73Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 138.73C18.1662 138.73 18.8378 139.402 18.8378 140.23C18.8378 141.059 18.1662 141.73 17.3378 141.73C16.5094 141.73 15.8378 141.059 15.8378 140.23C15.8378 139.402 16.5094 138.73 17.3378 138.73Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 138.73C33.5476 138.73 34.2192 139.402 34.2192 140.23C34.2192 141.059 33.5476 141.73 32.7192 141.73C31.8908 141.73 31.2192 141.059 31.2192 140.23C31.2192 139.402 31.8908 138.73 32.7192 138.73Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 138.73C48.9291 138.73 49.6006 139.402 49.6006 140.23C49.6006 141.059 48.9291 141.73 48.1006 141.73C47.2722 141.73 46.6006 141.059 46.6006 140.23C46.6006 139.402 47.2722 138.73 48.1006 138.73Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 138.73C64.3105 138.73 64.9821 139.402 64.9821 140.23C64.9821 141.059 64.3105 141.73 63.4821 141.73C62.6536 141.73 61.9821 141.059 61.9821 140.23C61.9821 139.402 62.6536 138.73 63.4821 138.73Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 138.73C79.6919 138.73 80.3635 139.402 80.3635 140.23C80.3635 141.059 79.6919 141.73 78.8635 141.73C78.0351 141.73 77.3635 141.059 77.3635 140.23C77.3635 139.402 78.0351 138.73 78.8635 138.73Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 138.73C95.0733 138.73 95.7449 139.402 95.7449 140.23C95.7449 141.059 95.0733 141.73 94.2449 141.73C93.4165 141.73 92.7449 141.059 92.7449 140.23C92.7449 139.402 93.4165 138.73 94.2449 138.73Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 138.73C110.455 138.73 111.126 139.402 111.126 140.23C111.126 141.059 110.455 141.73 109.626 141.73C108.798 141.73 108.126 141.059 108.126 140.23C108.126 139.402 108.798 138.73 109.626 138.73Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95638 123.349C2.7848 123.349 3.45638 124.021 3.45638 124.849C3.45638 125.677 2.7848 126.349 1.95638 126.349C1.12795 126.349 0.456376 125.677 0.456376 124.849C0.456376 124.021 1.12795 123.349 1.95638 123.349Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 123.349C18.1662 123.349 18.8378 124.021 18.8378 124.849C18.8378 125.677 18.1662 126.349 17.3378 126.349C16.5094 126.349 15.8378 125.677 15.8378 124.849C15.8378 124.021 16.5094 123.349 17.3378 123.349Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 123.349C33.5476 123.349 34.2192 124.021 34.2192 124.849C34.2192 125.677 33.5476 126.349 32.7192 126.349C31.8908 126.349 31.2192 125.677 31.2192 124.849C31.2192 124.021 31.8908 123.349 32.7192 123.349Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 123.349C48.9291 123.349 49.6006 124.021 49.6006 124.849C49.6006 125.677 48.9291 126.349 48.1006 126.349C47.2722 126.349 46.6006 125.677 46.6006 124.849C46.6006 124.021 47.2722 123.349 48.1006 123.349Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 123.349C64.3105 123.349 64.9821 124.021 64.9821 124.849C64.9821 125.677 64.3105 126.349 63.4821 126.349C62.6536 126.349 61.9821 125.677 61.9821 124.849C61.9821 124.021 62.6536 123.349 63.4821 123.349Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 123.349C79.6919 123.349 80.3635 124.021 80.3635 124.849C80.3635 125.677 79.6919 126.349 78.8635 126.349C78.0351 126.349 77.3635 125.677 77.3635 124.849C77.3635 124.021 78.0351 123.349 78.8635 123.349Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 123.349C95.0733 123.349 95.7449 124.021 95.7449 124.849C95.7449 125.677 95.0733 126.349 94.2449 126.349C93.4165 126.349 92.7449 125.677 92.7449 124.849C92.7449 124.021 93.4165 123.349 94.2449 123.349Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 123.349C110.455 123.349 111.126 124.021 111.126 124.849C111.126 125.677 110.455 126.349 109.626 126.349C108.798 126.349 108.126 125.677 108.126 124.849C108.126 124.021 108.798 123.349 109.626 123.349Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95637 107.968C2.7848 107.968 3.45637 108.639 3.45637 109.468C3.45637 110.296 2.7848 110.968 1.95637 110.968C1.12795 110.968 0.456375 110.296 0.456375 109.468C0.456375 108.639 1.12795 107.968 1.95637 107.968Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 107.968C18.1662 107.968 18.8378 108.639 18.8378 109.468C18.8378 110.296 18.1662 110.968 17.3378 110.968C16.5094 110.968 15.8378 110.296 15.8378 109.468C15.8378 108.639 16.5094 107.968 17.3378 107.968Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 107.968C33.5476 107.968 34.2192 108.639 34.2192 109.468C34.2192 110.296 33.5476 110.968 32.7192 110.968C31.8908 110.968 31.2192 110.296 31.2192 109.468C31.2192 108.639 31.8908 107.968 32.7192 107.968Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 107.968C48.9291 107.968 49.6006 108.639 49.6006 109.468C49.6006 110.296 48.9291 110.968 48.1006 110.968C47.2722 110.968 46.6006 110.296 46.6006 109.468C46.6006 108.639 47.2722 107.968 48.1006 107.968Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 107.968C64.3105 107.968 64.9821 108.639 64.9821 109.468C64.9821 110.296 64.3105 110.968 63.4821 110.968C62.6536 110.968 61.9821 110.296 61.9821 109.468C61.9821 108.639 62.6536 107.968 63.4821 107.968Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 107.968C79.6919 107.968 80.3635 108.639 80.3635 109.468C80.3635 110.296 79.6919 110.968 78.8635 110.968C78.0351 110.968 77.3635 110.296 77.3635 109.468C77.3635 108.639 78.0351 107.968 78.8635 107.968Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 107.968C95.0733 107.968 95.7449 108.639 95.7449 109.468C95.7449 110.296 95.0733 110.968 94.2449 110.968C93.4165 110.968 92.7449 110.296 92.7449 109.468C92.7449 108.639 93.4165 107.968 94.2449 107.968Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 107.968C110.455 107.968 111.126 108.639 111.126 109.468C111.126 110.296 110.455 110.968 109.626 110.968C108.798 110.968 108.126 110.296 108.126 109.468C108.126 108.639 108.798 107.968 109.626 107.968Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95637 92.5861C2.7848 92.5861 3.45637 93.2577 3.45637 94.0861C3.45637 94.9145 2.7848 95.5861 1.95637 95.5861C1.12795 95.5861 0.456373 94.9145 0.456373 94.0861C0.456373 93.2577 1.12795 92.5861 1.95637 92.5861Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 92.5861C18.1662 92.5861 18.8378 93.2577 18.8378 94.0861C18.8378 94.9145 18.1662 95.5861 17.3378 95.5861C16.5094 95.5861 15.8378 94.9145 15.8378 94.0861C15.8378 93.2577 16.5094 92.5861 17.3378 92.5861Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 92.5861C33.5476 92.5861 34.2192 93.2577 34.2192 94.0861C34.2192 94.9145 33.5476 95.5861 32.7192 95.5861C31.8908 95.5861 31.2192 94.9145 31.2192 94.0861C31.2192 93.2577 31.8908 92.5861 32.7192 92.5861Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 92.5861C48.9291 92.5861 49.6006 93.2577 49.6006 94.0861C49.6006 94.9145 48.9291 95.5861 48.1006 95.5861C47.2722 95.5861 46.6006 94.9145 46.6006 94.0861C46.6006 93.2577 47.2722 92.5861 48.1006 92.5861Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 92.5861C64.3105 92.5861 64.9821 93.2577 64.9821 94.0861C64.9821 94.9145 64.3105 95.5861 63.4821 95.5861C62.6536 95.5861 61.9821 94.9145 61.9821 94.0861C61.9821 93.2577 62.6536 92.5861 63.4821 92.5861Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 92.5861C79.6919 92.5861 80.3635 93.2577 80.3635 94.0861C80.3635 94.9145 79.6919 95.5861 78.8635 95.5861C78.0351 95.5861 77.3635 94.9145 77.3635 94.0861C77.3635 93.2577 78.0351 92.5861 78.8635 92.5861Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 92.5861C95.0733 92.5861 95.7449 93.2577 95.7449 94.0861C95.7449 94.9145 95.0733 95.5861 94.2449 95.5861C93.4165 95.5861 92.7449 94.9145 92.7449 94.0861C92.7449 93.2577 93.4165 92.5861 94.2449 92.5861Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 92.5861C110.455 92.5861 111.126 93.2577 111.126 94.0861C111.126 94.9145 110.455 95.5861 109.626 95.5861C108.798 95.5861 108.126 94.9145 108.126 94.0861C108.126 93.2577 108.798 92.5861 109.626 92.5861Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95638 77.2047C2.78481 77.2047 3.45638 77.8763 3.45638 78.7047C3.45638 79.5331 2.78481 80.2047 1.95638 80.2047C1.12795 80.2047 0.45638 79.5331 0.456379 78.7047C0.456379 77.8763 1.12795 77.2047 1.95638 77.2047Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 77.2047C18.1662 77.2047 18.8378 77.8763 18.8378 78.7047C18.8378 79.5331 18.1662 80.2047 17.3378 80.2047C16.5094 80.2047 15.8378 79.5331 15.8378 78.7047C15.8378 77.8763 16.5094 77.2047 17.3378 77.2047Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 77.2047C33.5476 77.2047 34.2192 77.8763 34.2192 78.7047C34.2192 79.5331 33.5476 80.2047 32.7192 80.2047C31.8908 80.2047 31.2192 79.5331 31.2192 78.7047C31.2192 77.8763 31.8908 77.2047 32.7192 77.2047Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 77.2047C48.9291 77.2047 49.6006 77.8763 49.6006 78.7047C49.6006 79.5331 48.9291 80.2047 48.1006 80.2047C47.2722 80.2047 46.6006 79.5331 46.6006 78.7047C46.6006 77.8763 47.2722 77.2047 48.1006 77.2047Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 77.2047C64.3105 77.2047 64.9821 77.8763 64.9821 78.7047C64.9821 79.5331 64.3105 80.2047 63.4821 80.2047C62.6536 80.2047 61.9821 79.5331 61.9821 78.7047C61.9821 77.8763 62.6536 77.2047 63.4821 77.2047Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 77.2047C79.6919 77.2047 80.3635 77.8763 80.3635 78.7047C80.3635 79.5331 79.6919 80.2047 78.8635 80.2047C78.0351 80.2047 77.3635 79.5331 77.3635 78.7047C77.3635 77.8763 78.0351 77.2047 78.8635 77.2047Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 77.2047C95.0733 77.2047 95.7449 77.8763 95.7449 78.7047C95.7449 79.5331 95.0733 80.2047 94.2449 80.2047C93.4165 80.2047 92.7449 79.5331 92.7449 78.7047C92.7449 77.8763 93.4165 77.2047 94.2449 77.2047Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 77.2047C110.455 77.2047 111.126 77.8763 111.126 78.7047C111.126 79.5331 110.455 80.2047 109.626 80.2047C108.798 80.2047 108.126 79.5331 108.126 78.7047C108.126 77.8763 108.798 77.2047 109.626 77.2047Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95638 61.8233C2.78481 61.8233 3.45638 62.4948 3.45638 63.3233C3.45638 64.1517 2.78481 64.8233 1.95638 64.8233C1.12795 64.8233 0.456378 64.1517 0.456378 63.3233C0.456378 62.4948 1.12795 61.8233 1.95638 61.8233Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 61.8233C18.1662 61.8233 18.8378 62.4948 18.8378 63.3233C18.8378 64.1517 18.1662 64.8233 17.3378 64.8233C16.5094 64.8233 15.8378 64.1517 15.8378 63.3233C15.8378 62.4948 16.5094 61.8233 17.3378 61.8233Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 61.8233C33.5476 61.8233 34.2192 62.4948 34.2192 63.3233C34.2192 64.1517 33.5476 64.8233 32.7192 64.8233C31.8908 64.8233 31.2192 64.1517 31.2192 63.3233C31.2192 62.4948 31.8908 61.8233 32.7192 61.8233Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 61.8233C48.9291 61.8233 49.6006 62.4948 49.6006 63.3233C49.6006 64.1517 48.9291 64.8233 48.1006 64.8233C47.2722 64.8233 46.6006 64.1517 46.6006 63.3233C46.6006 62.4948 47.2722 61.8233 48.1006 61.8233Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 61.8233C64.3105 61.8233 64.9821 62.4948 64.9821 63.3233C64.9821 64.1517 64.3105 64.8233 63.4821 64.8233C62.6536 64.8233 61.9821 64.1517 61.9821 63.3233C61.9821 62.4948 62.6536 61.8233 63.4821 61.8233Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 61.8233C79.6919 61.8233 80.3635 62.4948 80.3635 63.3233C80.3635 64.1517 79.6919 64.8233 78.8635 64.8233C78.0351 64.8233 77.3635 64.1517 77.3635 63.3233C77.3635 62.4948 78.0351 61.8233 78.8635 61.8233Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 61.8233C95.0733 61.8233 95.7449 62.4948 95.7449 63.3233C95.7449 64.1517 95.0733 64.8233 94.2449 64.8233C93.4165 64.8233 92.7449 64.1517 92.7449 63.3233C92.7449 62.4948 93.4165 61.8233 94.2449 61.8233Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 61.8233C110.455 61.8233 111.126 62.4948 111.126 63.3233C111.126 64.1517 110.455 64.8233 109.626 64.8233C108.798 64.8233 108.126 64.1517 108.126 63.3233C108.126 62.4948 108.798 61.8233 109.626 61.8233Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95638 46.4419C2.7848 46.4419 3.45638 47.1134 3.45638 47.9419C3.45638 48.7703 2.7848 49.4419 1.95638 49.4419C1.12795 49.4419 0.456377 48.7703 0.456377 47.9419C0.456377 47.1134 1.12795 46.4419 1.95638 46.4419Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 46.4418C18.1662 46.4418 18.8378 47.1134 18.8378 47.9418C18.8378 48.7703 18.1662 49.4418 17.3378 49.4418C16.5094 49.4418 15.8378 48.7703 15.8378 47.9418C15.8378 47.1134 16.5094 46.4418 17.3378 46.4418Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 46.4418C33.5476 46.4418 34.2192 47.1134 34.2192 47.9418C34.2192 48.7703 33.5476 49.4418 32.7192 49.4418C31.8908 49.4418 31.2192 48.7703 31.2192 47.9418C31.2192 47.1134 31.8908 46.4418 32.7192 46.4418Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 46.4418C48.9291 46.4418 49.6006 47.1134 49.6006 47.9418C49.6006 48.7703 48.9291 49.4418 48.1006 49.4418C47.2722 49.4418 46.6006 48.7703 46.6006 47.9418C46.6006 47.1134 47.2722 46.4418 48.1006 46.4418Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 46.4418C64.3105 46.4418 64.9821 47.1134 64.9821 47.9418C64.9821 48.7703 64.3105 49.4418 63.4821 49.4418C62.6536 49.4418 61.9821 48.7703 61.9821 47.9418C61.9821 47.1134 62.6536 46.4418 63.4821 46.4418Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 46.4418C79.6919 46.4418 80.3635 47.1134 80.3635 47.9418C80.3635 48.7703 79.6919 49.4418 78.8635 49.4418C78.0351 49.4418 77.3635 48.7703 77.3635 47.9418C77.3635 47.1134 78.0351 46.4418 78.8635 46.4418Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 46.4418C95.0733 46.4418 95.7449 47.1134 95.7449 47.9418C95.7449 48.7703 95.0733 49.4418 94.2449 49.4418C93.4165 49.4418 92.7449 48.7703 92.7449 47.9418C92.7449 47.1134 93.4165 46.4418 94.2449 46.4418Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 46.4418C110.455 46.4418 111.126 47.1134 111.126 47.9418C111.126 48.7703 110.455 49.4418 109.626 49.4418C108.798 49.4418 108.126 48.7703 108.126 47.9418C108.126 47.1134 108.798 46.4418 109.626 46.4418Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95638 31.0604C2.7848 31.0604 3.45638 31.732 3.45638 32.5604C3.45638 33.3889 2.7848 34.0604 1.95638 34.0604C1.12795 34.0604 0.456375 33.3889 0.456375 32.5604C0.456375 31.732 1.12795 31.0604 1.95638 31.0604Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 31.0604C18.1662 31.0604 18.8378 31.732 18.8378 32.5604C18.8378 33.3889 18.1662 34.0604 17.3378 34.0604C16.5094 34.0604 15.8378 33.3889 15.8378 32.5604C15.8378 31.732 16.5094 31.0604 17.3378 31.0604Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 31.0604C33.5476 31.0604 34.2192 31.732 34.2192 32.5604C34.2192 33.3889 33.5476 34.0604 32.7192 34.0604C31.8908 34.0604 31.2192 33.3889 31.2192 32.5604C31.2192 31.732 31.8908 31.0604 32.7192 31.0604Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 31.0604C48.9291 31.0604 49.6006 31.732 49.6006 32.5604C49.6006 33.3888 48.9291 34.0604 48.1006 34.0604C47.2722 34.0604 46.6006 33.3888 46.6006 32.5604C46.6006 31.732 47.2722 31.0604 48.1006 31.0604Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 31.0604C64.3105 31.0604 64.9821 31.732 64.9821 32.5604C64.9821 33.3888 64.3105 34.0604 63.4821 34.0604C62.6536 34.0604 61.9821 33.3888 61.9821 32.5604C61.9821 31.732 62.6536 31.0604 63.4821 31.0604Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 31.0604C79.6919 31.0604 80.3635 31.732 80.3635 32.5604C80.3635 33.3888 79.6919 34.0604 78.8635 34.0604C78.0351 34.0604 77.3635 33.3888 77.3635 32.5604C77.3635 31.732 78.0351 31.0604 78.8635 31.0604Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 31.0604C95.0733 31.0604 95.7449 31.732 95.7449 32.5604C95.7449 33.3888 95.0733 34.0604 94.2449 34.0604C93.4165 34.0604 92.7449 33.3888 92.7449 32.5604C92.7449 31.732 93.4165 31.0604 94.2449 31.0604Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 31.0604C110.455 31.0604 111.126 31.732 111.126 32.5604C111.126 33.3888 110.455 34.0604 109.626 34.0604C108.798 34.0604 108.126 33.3888 108.126 32.5604C108.126 31.732 108.798 31.0604 109.626 31.0604Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95637 15.679C2.7848 15.679 3.45637 16.3506 3.45637 17.179C3.45637 18.0074 2.7848 18.679 1.95637 18.679C1.12795 18.679 0.456374 18.0074 0.456374 17.179C0.456374 16.3506 1.12795 15.679 1.95637 15.679Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 15.679C18.1662 15.679 18.8378 16.3506 18.8378 17.179C18.8378 18.0074 18.1662 18.679 17.3378 18.679C16.5094 18.679 15.8378 18.0074 15.8378 17.179C15.8378 16.3506 16.5094 15.679 17.3378 15.679Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 15.679C33.5476 15.679 34.2192 16.3506 34.2192 17.179C34.2192 18.0074 33.5476 18.679 32.7192 18.679C31.8908 18.679 31.2192 18.0074 31.2192 17.179C31.2192 16.3506 31.8908 15.679 32.7192 15.679Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 15.679C48.9291 15.679 49.6006 16.3506 49.6006 17.179C49.6006 18.0074 48.9291 18.679 48.1006 18.679C47.2722 18.679 46.6006 18.0074 46.6006 17.179C46.6006 16.3506 47.2722 15.679 48.1006 15.679Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 15.679C64.3105 15.679 64.9821 16.3506 64.9821 17.179C64.9821 18.0074 64.3105 18.679 63.4821 18.679C62.6536 18.679 61.9821 18.0074 61.9821 17.179C61.9821 16.3506 62.6536 15.679 63.4821 15.679Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 15.679C79.6919 15.679 80.3635 16.3506 80.3635 17.179C80.3635 18.0074 79.6919 18.679 78.8635 18.679C78.0351 18.679 77.3635 18.0074 77.3635 17.179C77.3635 16.3506 78.0351 15.679 78.8635 15.679Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 15.679C95.0733 15.679 95.7449 16.3506 95.7449 17.179C95.7449 18.0074 95.0733 18.679 94.2449 18.679C93.4165 18.679 92.7449 18.0074 92.7449 17.179C92.7449 16.3506 93.4165 15.679 94.2449 15.679Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 15.679C110.455 15.679 111.126 16.3506 111.126 17.179C111.126 18.0074 110.455 18.679 109.626 18.679C108.798 18.679 108.126 18.0074 108.126 17.179C108.126 16.3506 108.798 15.679 109.626 15.679Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M1.95637 0.297579C2.7848 0.297579 3.45637 0.969152 3.45637 1.79758C3.45637 2.62601 2.7848 3.29758 1.95637 3.29758C1.12795 3.29758 0.456373 2.62601 0.456373 1.79758C0.456373 0.969152 1.12795 0.297579 1.95637 0.297579Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M17.3378 0.297577C18.1662 0.297577 18.8378 0.96915 18.8378 1.79758C18.8378 2.626 18.1662 3.29758 17.3378 3.29758C16.5094 3.29758 15.8378 2.626 15.8378 1.79758C15.8378 0.969151 16.5094 0.297578 17.3378 0.297577Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M32.7192 0.297576C33.5476 0.297576 34.2192 0.969149 34.2192 1.79758C34.2192 2.626 33.5476 3.29758 32.7192 3.29758C31.8908 3.29758 31.2192 2.626 31.2192 1.79758C31.2192 0.969149 31.8908 0.297576 32.7192 0.297576Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M48.1006 0.297575C48.9291 0.297575 49.6006 0.969148 49.6006 1.79757C49.6006 2.626 48.9291 3.29757 48.1006 3.29757C47.2722 3.29757 46.6006 2.626 46.6006 1.79757C46.6006 0.969148 47.2722 0.297575 48.1006 0.297575Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M63.4821 0.297573C64.3105 0.297573 64.9821 0.969146 64.9821 1.79757C64.9821 2.626 64.3105 3.29757 63.4821 3.29757C62.6536 3.29757 61.9821 2.626 61.9821 1.79757C61.9821 0.969146 62.6536 0.297573 63.4821 0.297573Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M78.8635 0.297572C79.6919 0.297572 80.3635 0.969145 80.3635 1.79757C80.3635 2.626 79.6919 3.29757 78.8635 3.29757C78.0351 3.29757 77.3635 2.626 77.3635 1.79757C77.3635 0.969145 78.035 0.297572 78.8635 0.297572Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M94.2449 0.297571C95.0733 0.297571 95.7449 0.969144 95.7449 1.79757C95.7449 2.626 95.0733 3.29757 94.2449 3.29757C93.4165 3.29757 92.7449 2.626 92.7449 1.79757C92.7449 0.969144 93.4165 0.297571 94.2449 0.297571Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                            <path d=\"M109.626 0.297569C110.455 0.297569 111.126 0.969142 111.126 1.79757C111.126 2.626 110.455 3.29757 109.626 3.29757C108.798 3.29757 108.126 2.626 108.126 1.79757C108.126 0.969142 108.798 0.297569 109.626 0.297569Z\" stroke=\"#031030\" strokeWidth=\"4.95257\" mask=\"url(#path-1-inside-1_15:2488)\" />\n                        </svg>\n\n\n                    </div>\n\n                </div>\n                <div className=\"col-span-1  lg:text-right flex align-center\">\n                    <div className=\"self-center\">\n                        <h2 className=\"hidden md:block font-title text-5xl md:text-left lg:text-right lg:text-hero text-right relative\">Socias vitalicias\n                        <div className=\"absolute left-48 lg:right-96 bottom-0 lg:bottom-6\" style={{ width: '118px' }}> {renderLottie && <TitleArrowLottie />}</div>\n                        </h2>\n                        <p className=\"py-4 md:py-0 font-body text-base text-left lg:text-right mb-4\">\n                            Todos los Domingos recibimos en nuestro programa a una figura del deporte femenino. Charlamos del deporte, los sacrificios y la vida misma.\n                        </p>\n                        <a href=\"https://open.spotify.com/show/6a14qoWlcAGixLfwVeyPOk?si=944b088ae93341f4\" target=\"_blank\" className=\"block text-center md:inline-block bg-orange py-3 px-8 rounded-3xl text-white text-base hover:bg-orangelight transition-all\">Escuchanos en Spotify</a>\n                        <Waypoint onEnter={() => setRenderLottie(true)} />\n                        <Waypoint onEnter={() =>\n                            setTimeout(() => {\n                                console.log(\"entro2\")\n                                setRenderLottie2(true)\n                            }, 2000)} />\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default SociaVitalicia\n","import React from 'react'\nimport Lottie from 'react-lottie';\nimport animationData from './files/orange-curved.json'\n\nconst OrangeCurvedLottie = () => {\n\n    const defaultOptions = {\n        loop: false,\n        autoplay: true,\n        animationData: animationData,\n        rendererSettings: {\n        },\n    };\n\n    return (\n        <div>\n            <Lottie options={defaultOptions} />\n        </div>\n    )\n}\n\nexport default OrangeCurvedLottie\n","import React from 'react'\nimport Lottie from 'react-lottie';\nimport animationData from './files/title-arrow.json'\n\nconst TitleArrowLottie = () => {\n\n    const defaultOptions = {\n        loop: false,\n        autoplay: true,\n        animationData: animationData,\n        rendererSettings: {\n        },\n\n    };\n\n    return (\n        <div>\n            <Lottie options={defaultOptions} />\n        </div>\n    )\n}\n\nexport default TitleArrowLottie\n","\nexport const initialState = {\n    img: \"\",\n    texto: \"\",\n    equipos: [],\n    equipo1: \"\",\n    sociaVitalicia: { \"fotoFondo\": \"\", \"fotoMain\": \"\", \"nombre\": \"\", \"profesion\": \"\", \"fecha\": \"\", \"spCode\": \"\", \"frase\": \"\", \"darkMode\": false },\n    noticias: { \"foto\": \"\", \"titulo\": \"\", \"darkMode\": false },\n    proximoPartido: { \"eqLocal\": \"\", \"eqVisitante\": \"\", \"fecha\": \"\", \"hora\": \"\", \"lugar\": \"\", \"fotoLocal\": \"\", \"fotoVisitante\": \"\", \"deporte\": [], \"darkMode\": false },\n    finalPartido: { \"eqLocal\": \"\", \"eqVisitante\": \"\", \"pLocal\": \"\", \"pVisitante\": \"\", \"foto\": \"\", \"deporte\": [], \"darkMode\": false },\n    albums: [],\n    deportes: [],\n    integrantes: [\n        { nombre: \"Cecilia Piazza\", rol: \"Periodista deportivo\", chiste: \"No presenta ni un límite\", foto: \"https://res.cloudinary.com/isita/image/upload/v1636928040/static/Avatars_web_2x_pk94de.png\" },\n        { nombre: \"Alfredo Raucher\", rol: \"Fotográfo\", chiste: \"Lengua filosa\", foto: \"https://res.cloudinary.com/isita/image/upload/v1636928039/static/Avatars_web_2x-1_dtfftv.png\" },\n        { nombre: \"Vicky Burisich\", rol: \"Periodista deportivo\", chiste: \"Yendo al Chuy\", foto: \"https://res.cloudinary.com/isita/image/upload/v1636928039/static/Avatars_web_2x-2_nywwjl.png\" },\n        { nombre: \"Facundo Banchero\", rol: \"Periodista deportivo\", chiste: \"El dueño del programa\", foto: \"https://res.cloudinary.com/isita/image/upload/v1636928040/static/Avatars_web_2x-3_dzfe9j.png\" },\n        { nombre: \"Mariana Alvarez\", rol: \"Periodista deportivo\", chiste: \"Y los resultados son...\", foto: \"https://res.cloudinary.com/isita/image/upload/v1636928040/static/Avatars_web_2x-4_kskzfv.png\" },\n    ],\n    usuarioLogueado: \"\",\n    url: \"http://localhost:3001\",\n    fondos: [\n        { id: 1, src: \"https://res.cloudinary.com/isita/image/upload/v1641861366/static/fondos/Property_1_2_cas5lb.png\" },\n        { id: 2, src: \"https://res.cloudinary.com/isita/image/upload/v1641861366/static/fondos/Property_1_3_wu8a5t.png\" },\n        { id: 3, src: \"https://res.cloudinary.com/isita/image/upload/v1641861366/static/fondos/Property_1_4_cs2cal.png\" },\n        { id: 4, src: \"https://res.cloudinary.com/isita/image/upload/v1641861366/static/fondos/Property_1_1_nk4ghu.png\" },\n        { id: 5, src: \"https://res.cloudinary.com/isita/image/upload/v1641861366/static/fondos/Property_1_Variant5_cp76k0.png\" }\n    ],\n    usuarios: [],\n    storyEquipo: { integrante: \"\", darkMode: false, descripcion: \"\" }\n\n}\n\n/* https://igualando.herokuapp.com/ */","import { createStore } from \"redux\";\nimport { reducer } from '../reducers/reducer'\n\nexport const store = createStore(reducer);\n","import { initialState } from '../store/initialState';\nimport { addStaticComposition } from 'remotion/dist/register-root';\n\nexport const reducer = (state = initialState, action) => {\n    console.log(state, action);\n    switch (action.type) {\n        case \"PRUEBA\":\n            return state\n        case \"DATOS_ENVIADOS\":\n            return { ...state, img: action.payload.img, texto: action.payload.texto }\n\n        case \"LISTAR_EQUIPOS\":\n            return { ...state, equipos: action.payload }\n\n        case \"LISTAR_ALBUMS\":\n            return { ...state, albums: action.payload }\n\n        case \"LISTAR_DEPORTES\":\n            return { ...state, deportes: action.payload }\n\n        case \"AGREGAR_ALBUM\":\n            return { ...state, albums: [...state.albums, action.payload] }\n\n        case \"AGREGAR_USUARIO\":\n            return { ...state, usuarios: [...state.usuarios, action.payload] }\n\n        case \"ELIMINAR_ALBUM\":\n            let albumsNuevos = state.albums.filter(album => album._id !== action.payload._id);\n            return { ...state, albums: albumsNuevos }\n\n        case \"ELIMINAR_USUARIO\":\n            let usuariosNuevos = state.usuarios.filter(usuario => usuario._id !== action.payload._id);\n            return { ...state, usuarios: usuariosNuevos }\n\n        case \"EQUIPOS_ELEGIDOS\":\n            return { ...state, equipo1: action.payload }\n\n        case \"SOCIA_VITALICIA\":\n            return { ...state, sociaVitalicia: { \"fotoMain\": action.payload.fotoMain, \"fotoFondo\": action.payload.fotoFondo, \"nombre\": action.payload.nombre, \"profesion\": action.payload.profesion, \"fecha\": action.payload.fecha, \"spCode\": action.payload.spCode, \"frase\": action.payload.frase, \"darkMode\": action.payload.darkMode } }\n        case \"NOTICIAS\":\n            return { ...state, noticias: { \"foto\": action.payload.foto, \"titulo\": action.payload.titulo, \"darkMode\": action.payload.darkMode } }\n\n\n        case \"PROXIMO_PARTIDO\":\n            return { ...state, proximoPartido: { \"eqLocal\": action.payload.eqLocal, \"eqVisitante\": action.payload.eqVisitante, \"fecha\": action.payload.fecha, \"hora\": action.payload.hora, \"lugar\": action.payload.lugar, \"fotoLocal\": action.payload.fotoLocal, \"fotoVisitante\": action.payload.fotoVisitante, \"deporte\": action.payload.deporte, \"darkMode\": action.payload.darkMode } }\n\n        case \"FINAL_PARTIDO\":\n            return { ...state, finalPartido: { \"eqLocal\": action.payload.eqLocal, \"eqVisitante\": action.payload.eqVisitante, \"pLocal\": action.payload.pLocal, \"pVisitante\": action.payload.pVisitante, \"foto\": action.payload.foto, \"deporte\": action.payload.deporte, \"darkMode\": action.payload.darkMode } }\n\n        case \"STORY_EQUIPO\":\n            return { ...state, storyEquipo: { \"integrante\": action.payload.integrante, \"darkMode\": action.payload.darkMode, \"descripcion\": action.payload.descripcion } }\n\n        case \"SESION_INICIADA\":\n            return { ...state, usuarioLogueado: action.payload }\n\n        case \"CAMBIAR_CONTRASENA\":\n            return { ...state, usuarioLogueado: action.payload }\n\n        case \"MOSTRAR_USUARIO\":\n            let index = state.usuarios.findIndex((usuario) => usuario._id === action.payload._id)\n            return {\n                ...state,\n                usuarios: state.usuarios.map(\n                    (usuario, i) => i === index ? { ...usuario, visible: true }\n                        : usuario\n                )\n            }\n\n        case \"OCULTAR_USUARIO\":\n            let index2 = state.usuarios.findIndex((usuario) => usuario._id === action.payload._id)\n            return {\n                ...state,\n                usuarios: state.usuarios.map(\n                    (usuario, i) => i === index2 ? { ...usuario, visible: false }\n                        : usuario\n                )\n            }\n\n\n\n\n        case \"LISTAR_USUARIOS\":\n            return { ...state, usuarios: action.payload }\n\n        case \"CERRAR_SESION\":\n            return { ...state, usuarioLogueado: \"\" }\n\n        default:\n            return state\n    }\n\n}\n","import React from 'react'\nimport Lottie from 'react-lottie';\nimport animationData from './files/short-lines.json'\n\nconst ShortLinesLottie = () => {\n\n    const defaultOptions = {\n        loop: false,\n        autoplay: true,\n        animationData: animationData,\n        rendererSettings: {\n        },\n    };\n\n    return (\n        <div>\n            <Lottie options={defaultOptions} />\n        </div>\n    )\n}\n\nexport default ShortLinesLottie\n","import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport TitleArrowLottie from '../lotties/TitleArrowLottie'\nimport { Waypoint } from 'react-waypoint'\nimport ShortLinesLottie from '../lotties/ShortLinesLottie'\n\nconst NuestraGaleria = (props) => {\n\n    /*  console.log(props) */\n    let episodio;\n    let n;\n    let invitado;\n    let programa;\n\n    let [renderLottie, setRenderLottie] = useState(false);\n    let [renderLottie2, setRenderLottie2] = useState(false);\n\n    if (props.episodio !== undefined) {\n        episodio = props.episodio.items[0].name;\n        n = episodio.lastIndexOf(':');\n        invitado = episodio.substring(n + 1);\n        programa = episodio.substr(0, episodio.indexOf(':'));\n        programa = programa.replace('. ', ' ');\n    }\n\n\n\n    return (\n        <div className=\"w-full md:w-10/12 mx-auto\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 p-4 md:py-24\">\n                <div className=\"col-span-1 text-left flex align-center\">\n                    <div className=\"self-center\">\n                        <h2 className=\"py-4 md:p-0 font-title text-5xl lg:text-hero relative\">Nuestra galería\n                        <div className=\"absolute bottom-1 left-48 lg:bottom-6  lg:right-8 \" style={{ width: '118px', height: '24px' }}> {renderLottie && <TitleArrowLottie />}</div>\n                        </h2>\n                        <div className=\"block md:hidden relative mx-auto w-full \">\n                            <div className=\"relative h-72 pl-2\">\n                                <div style={{ background: \"url(https://res.cloudinary.com/isita/image/upload/v1635200451/static/image_32_zjmn2y.png) center bottom /cover\" }} className=\"h-48 w-60  bg-orange absolute bottom-2 z-10\">\n\n                                </div>\n                                <div className=\"w-40 h-56 absolute right-8\" style={{ background: \"url(https://res.cloudinary.com/isita/image/upload/v1635200659/static/image_34_canwjl.png) center bottom /cover\" }}>\n                                </div>\n                                <svg className=\"absolute -left-10 bottom-16\" xmlns=\"http://www.w3.org/2000/svg\" width=\"111\" height=\"204\" viewBox=\"0 0 111 204\" fill=\"none\">\n\n                                    <path d=\"M1.665 200.289C2.49343 200.289 3.165 200.96 3.165 201.789C3.165 202.617 2.49343 203.289 1.665 203.289C0.836571 203.289 0.165001 202.617 0.165001 201.789C0.165001 200.96 0.83657 200.289 1.665 200.289Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 200.289C17.8748 200.289 18.5464 200.96 18.5464 201.789C18.5464 202.617 17.8748 203.289 17.0464 203.289C16.218 203.289 15.5464 202.617 15.5464 201.789C15.5464 200.96 16.218 200.289 17.0464 200.289Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 200.289C33.2563 200.289 33.9278 200.96 33.9278 201.789C33.9278 202.617 33.2563 203.289 32.4278 203.289C31.5994 203.289 30.9278 202.617 30.9278 201.789C30.9278 200.96 31.5994 200.289 32.4278 200.289Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 200.289C48.6377 200.289 49.3093 200.96 49.3093 201.789C49.3093 202.617 48.6377 203.289 47.8093 203.289C46.9808 203.289 46.3093 202.617 46.3093 201.789C46.3093 200.96 46.9808 200.289 47.8093 200.289Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 200.289C64.0191 200.289 64.6907 200.96 64.6907 201.789C64.6907 202.617 64.0191 203.289 63.1907 203.289C62.3623 203.289 61.6907 202.617 61.6907 201.789C61.6907 200.96 62.3623 200.289 63.1907 200.289Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 200.289C79.4005 200.289 80.0721 200.96 80.0721 201.789C80.0721 202.617 79.4005 203.289 78.5721 203.289C77.7437 203.289 77.0721 202.617 77.0721 201.789C77.0721 200.96 77.7437 200.289 78.5721 200.289Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 200.289C94.782 200.289 95.4535 200.96 95.4535 201.789C95.4535 202.617 94.782 203.289 93.9535 203.289C93.1251 203.289 92.4535 202.617 92.4535 201.789C92.4535 200.96 93.1251 200.289 93.9535 200.289Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 200.289C110.163 200.289 110.835 200.96 110.835 201.789C110.835 202.617 110.163 203.289 109.335 203.289C108.507 203.289 107.835 202.617 107.835 201.789C107.835 200.96 108.507 200.289 109.335 200.289Z\" fill=\"#031030\" />\n                                    <path d=\"M1.665 184.907C2.49343 184.907 3.165 185.579 3.165 186.407C3.165 187.236 2.49343 187.907 1.665 187.907C0.836569 187.907 0.165 187.236 0.164999 186.407C0.164999 185.579 0.836569 184.907 1.665 184.907Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 184.907C17.8748 184.907 18.5464 185.579 18.5464 186.407C18.5464 187.236 17.8748 187.907 17.0464 187.907C16.218 187.907 15.5464 187.236 15.5464 186.407C15.5464 185.579 16.218 184.907 17.0464 184.907Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 184.907C33.2563 184.907 33.9278 185.579 33.9278 186.407C33.9278 187.236 33.2563 187.907 32.4278 187.907C31.5994 187.907 30.9278 187.236 30.9278 186.407C30.9278 185.579 31.5994 184.907 32.4278 184.907Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 184.907C48.6377 184.907 49.3093 185.579 49.3093 186.407C49.3093 187.236 48.6377 187.907 47.8093 187.907C46.9808 187.907 46.3093 187.236 46.3093 186.407C46.3093 185.579 46.9808 184.907 47.8093 184.907Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 184.907C64.0191 184.907 64.6907 185.579 64.6907 186.407C64.6907 187.236 64.0191 187.907 63.1907 187.907C62.3623 187.907 61.6907 187.236 61.6907 186.407C61.6907 185.579 62.3623 184.907 63.1907 184.907Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 184.907C79.4005 184.907 80.0721 185.579 80.0721 186.407C80.0721 187.236 79.4005 187.907 78.5721 187.907C77.7437 187.907 77.0721 187.236 77.0721 186.407C77.0721 185.579 77.7437 184.907 78.5721 184.907Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 184.907C94.782 184.907 95.4535 185.579 95.4535 186.407C95.4535 187.236 94.782 187.907 93.9535 187.907C93.1251 187.907 92.4535 187.236 92.4535 186.407C92.4535 185.579 93.1251 184.907 93.9535 184.907Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 184.907C110.163 184.907 110.835 185.579 110.835 186.407C110.835 187.236 110.163 187.907 109.335 187.907C108.507 187.907 107.835 187.236 107.835 186.407C107.835 185.579 108.507 184.907 109.335 184.907Z\" fill=\"#031030\" />\n                                    <path d=\"M1.665 169.526C2.49343 169.526 3.165 170.197 3.165 171.026C3.165 171.854 2.49343 172.526 1.665 172.526C0.836568 172.526 0.164998 171.854 0.164998 171.026C0.164998 170.197 0.836568 169.526 1.665 169.526Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 169.526C17.8749 169.526 18.5464 170.197 18.5464 171.026C18.5464 171.854 17.8749 172.526 17.0464 172.526C16.218 172.526 15.5464 171.854 15.5464 171.026C15.5464 170.197 16.218 169.526 17.0464 169.526Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 169.526C33.2563 169.526 33.9278 170.197 33.9278 171.026C33.9278 171.854 33.2563 172.526 32.4278 172.526C31.5994 172.526 30.9278 171.854 30.9278 171.026C30.9278 170.197 31.5994 169.526 32.4278 169.526Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 169.526C48.6377 169.526 49.3093 170.197 49.3093 171.026C49.3093 171.854 48.6377 172.526 47.8093 172.526C46.9808 172.526 46.3093 171.854 46.3093 171.026C46.3093 170.197 46.9808 169.526 47.8093 169.526Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 169.526C64.0191 169.526 64.6907 170.197 64.6907 171.026C64.6907 171.854 64.0191 172.526 63.1907 172.526C62.3623 172.526 61.6907 171.854 61.6907 171.026C61.6907 170.197 62.3623 169.526 63.1907 169.526Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 169.526C79.4005 169.526 80.0721 170.197 80.0721 171.026C80.0721 171.854 79.4005 172.526 78.5721 172.526C77.7437 172.526 77.0721 171.854 77.0721 171.026C77.0721 170.197 77.7437 169.526 78.5721 169.526Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 169.526C94.782 169.526 95.4535 170.197 95.4535 171.026C95.4535 171.854 94.782 172.526 93.9535 172.526C93.1251 172.526 92.4535 171.854 92.4535 171.026C92.4535 170.197 93.1251 169.526 93.9535 169.526Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 169.526C110.163 169.526 110.835 170.197 110.835 171.026C110.835 171.854 110.163 172.526 109.335 172.526C108.507 172.526 107.835 171.854 107.835 171.026C107.835 170.197 108.507 169.526 109.335 169.526Z\" fill=\"#031030\" />\n                                    <path d=\"M1.665 154.145C2.49343 154.145 3.165 154.816 3.165 155.645C3.165 156.473 2.49343 157.145 1.665 157.145C0.836567 157.145 0.164997 156.473 0.164997 155.645C0.164997 154.816 0.836566 154.145 1.665 154.145Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 154.145C17.8749 154.145 18.5464 154.816 18.5464 155.645C18.5464 156.473 17.8749 157.145 17.0464 157.145C16.218 157.145 15.5464 156.473 15.5464 155.645C15.5464 154.816 16.218 154.145 17.0464 154.145Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 154.144C33.2563 154.144 33.9278 154.816 33.9278 155.644C33.9278 156.473 33.2563 157.144 32.4278 157.144C31.5994 157.145 30.9278 156.473 30.9278 155.645C30.9278 154.816 31.5994 154.145 32.4278 154.144Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 154.144C48.6377 154.144 49.3093 154.816 49.3093 155.644C49.3093 156.473 48.6377 157.144 47.8093 157.144C46.9808 157.144 46.3093 156.473 46.3093 155.644C46.3093 154.816 46.9808 154.144 47.8093 154.144Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 154.144C64.0191 154.144 64.6907 154.816 64.6907 155.644C64.6907 156.473 64.0191 157.144 63.1907 157.144C62.3623 157.144 61.6907 156.473 61.6907 155.644C61.6907 154.816 62.3623 154.144 63.1907 154.144Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 154.144C79.4005 154.144 80.0721 154.816 80.0721 155.644C80.0721 156.473 79.4005 157.144 78.5721 157.144C77.7437 157.144 77.0721 156.473 77.0721 155.644C77.0721 154.816 77.7437 154.144 78.5721 154.144Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 154.144C94.782 154.144 95.4535 154.816 95.4535 155.644C95.4535 156.473 94.782 157.144 93.9535 157.144C93.1251 157.144 92.4535 156.473 92.4535 155.644C92.4535 154.816 93.1251 154.144 93.9535 154.144Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 154.144C110.163 154.144 110.835 154.816 110.835 155.644C110.835 156.473 110.163 157.144 109.335 157.144C108.507 157.144 107.835 156.473 107.835 155.644C107.835 154.816 108.507 154.144 109.335 154.144Z\" fill=\"#031030\" />\n                                    <path d=\"M1.665 138.763C2.49343 138.763 3.165 139.435 3.165 140.263C3.165 141.092 2.49343 141.763 1.665 141.763C0.836565 141.763 0.164995 141.092 0.164995 140.263C0.164995 139.435 0.836565 138.763 1.665 138.763Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 138.763C17.8748 138.763 18.5464 139.435 18.5464 140.263C18.5464 141.092 17.8748 141.763 17.0464 141.763C16.218 141.763 15.5464 141.092 15.5464 140.263C15.5464 139.435 16.218 138.763 17.0464 138.763Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 138.763C33.2563 138.763 33.9278 139.435 33.9278 140.263C33.9278 141.092 33.2563 141.763 32.4278 141.763C31.5994 141.763 30.9278 141.092 30.9278 140.263C30.9278 139.435 31.5994 138.763 32.4278 138.763Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 138.763C48.6377 138.763 49.3093 139.435 49.3093 140.263C49.3093 141.092 48.6377 141.763 47.8093 141.763C46.9808 141.763 46.3093 141.092 46.3093 140.263C46.3093 139.435 46.9808 138.763 47.8093 138.763Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 138.763C64.0191 138.763 64.6907 139.435 64.6907 140.263C64.6907 141.092 64.0191 141.763 63.1907 141.763C62.3622 141.763 61.6907 141.092 61.6907 140.263C61.6907 139.435 62.3622 138.763 63.1907 138.763Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 138.763C79.4005 138.763 80.0721 139.435 80.0721 140.263C80.0721 141.092 79.4005 141.763 78.5721 141.763C77.7437 141.763 77.0721 141.092 77.0721 140.263C77.0721 139.435 77.7437 138.763 78.5721 138.763Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 138.763C94.782 138.763 95.4535 139.435 95.4535 140.263C95.4535 141.092 94.782 141.763 93.9535 141.763C93.1251 141.763 92.4535 141.092 92.4535 140.263C92.4535 139.435 93.1251 138.763 93.9535 138.763Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 138.763C110.163 138.763 110.835 139.435 110.835 140.263C110.835 141.092 110.163 141.763 109.335 141.763C108.507 141.763 107.835 141.092 107.835 140.263C107.835 139.435 108.507 138.763 109.335 138.763Z\" fill=\"#031030\" />\n                                    <path d=\"M1.66499 123.382C2.49342 123.382 3.16499 124.053 3.16499 124.882C3.16499 125.71 2.49342 126.382 1.66499 126.382C0.836564 126.382 0.164994 125.71 0.164994 124.882C0.164994 124.053 0.836564 123.382 1.66499 123.382Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 123.382C17.8748 123.382 18.5464 124.053 18.5464 124.882C18.5464 125.71 17.8748 126.382 17.0464 126.382C16.218 126.382 15.5464 125.71 15.5464 124.882C15.5464 124.053 16.218 123.382 17.0464 123.382Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 123.382C33.2563 123.382 33.9278 124.053 33.9278 124.882C33.9278 125.71 33.2563 126.382 32.4278 126.382C31.5994 126.382 30.9278 125.71 30.9278 124.882C30.9278 124.053 31.5994 123.382 32.4278 123.382Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 123.382C48.6377 123.382 49.3093 124.053 49.3093 124.882C49.3093 125.71 48.6377 126.382 47.8093 126.382C46.9808 126.382 46.3093 125.71 46.3093 124.882C46.3093 124.053 46.9808 123.382 47.8093 123.382Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 123.382C64.0191 123.382 64.6907 124.053 64.6907 124.882C64.6907 125.71 64.0191 126.382 63.1907 126.382C62.3623 126.382 61.6907 125.71 61.6907 124.882C61.6907 124.053 62.3623 123.382 63.1907 123.382Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 123.382C79.4005 123.382 80.0721 124.053 80.0721 124.882C80.0721 125.71 79.4005 126.382 78.5721 126.382C77.7437 126.382 77.0721 125.71 77.0721 124.882C77.0721 124.053 77.7437 123.382 78.5721 123.382Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 123.382C94.782 123.382 95.4535 124.053 95.4535 124.882C95.4535 125.71 94.782 126.382 93.9535 126.382C93.1251 126.382 92.4535 125.71 92.4535 124.882C92.4535 124.053 93.1251 123.382 93.9535 123.382Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 123.382C110.163 123.382 110.835 124.053 110.835 124.882C110.835 125.71 110.163 126.382 109.335 126.382C108.507 126.382 107.835 125.71 107.835 124.882C107.835 124.053 108.507 123.382 109.335 123.382Z\" fill=\"#031030\" />\n                                    <path d=\"M1.66499 108C2.49342 108 3.16499 108.672 3.16499 109.5C3.16499 110.329 2.49342 111 1.66499 111C0.836563 111 0.164993 110.329 0.164993 109.5C0.164993 108.672 0.836562 108 1.66499 108Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 108C17.8748 108 18.5464 108.672 18.5464 109.5C18.5464 110.329 17.8748 111 17.0464 111C16.218 111 15.5464 110.329 15.5464 109.5C15.5464 108.672 16.218 108 17.0464 108Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 108C33.2563 108 33.9278 108.672 33.9278 109.5C33.9278 110.329 33.2563 111 32.4278 111C31.5994 111 30.9278 110.329 30.9278 109.5C30.9278 108.672 31.5994 108 32.4278 108Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 108C48.6377 108 49.3093 108.672 49.3093 109.5C49.3093 110.329 48.6377 111 47.8093 111C46.9808 111 46.3093 110.329 46.3093 109.5C46.3093 108.672 46.9808 108 47.8093 108Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 108C64.0191 108 64.6907 108.672 64.6907 109.5C64.6907 110.329 64.0191 111 63.1907 111C62.3623 111 61.6907 110.329 61.6907 109.5C61.6907 108.672 62.3623 108 63.1907 108Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 108C79.4005 108 80.0721 108.672 80.0721 109.5C80.0721 110.329 79.4005 111 78.5721 111C77.7437 111 77.0721 110.329 77.0721 109.5C77.0721 108.672 77.7437 108 78.5721 108Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 108C94.782 108 95.4535 108.672 95.4535 109.5C95.4535 110.329 94.7819 111 93.9535 111C93.1251 111 92.4535 110.329 92.4535 109.5C92.4535 108.672 93.1251 108 93.9535 108Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 108C110.163 108 110.835 108.672 110.835 109.5C110.835 110.329 110.163 111 109.335 111C108.507 111 107.835 110.329 107.835 109.5C107.835 108.672 108.507 108 109.335 108Z\" fill=\"#031030\" />\n                                    <path d=\"M1.66499 92.6188C2.49342 92.6188 3.16499 93.2904 3.16499 94.1188C3.16499 94.9472 2.49342 95.6188 1.66499 95.6188C0.836561 95.6188 0.164991 94.9472 0.164991 94.1188C0.164991 93.2904 0.836561 92.6188 1.66499 92.6188Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 92.6188C17.8748 92.6188 18.5464 93.2904 18.5464 94.1188C18.5464 94.9472 17.8748 95.6188 17.0464 95.6188C16.218 95.6188 15.5464 94.9472 15.5464 94.1188C15.5464 93.2904 16.218 92.6188 17.0464 92.6188Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 92.6188C33.2563 92.6188 33.9278 93.2904 33.9278 94.1188C33.9278 94.9472 33.2563 95.6188 32.4278 95.6188C31.5994 95.6188 30.9278 94.9472 30.9278 94.1188C30.9278 93.2904 31.5994 92.6188 32.4278 92.6188Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 92.6188C48.6377 92.6188 49.3093 93.2904 49.3093 94.1188C49.3093 94.9472 48.6377 95.6188 47.8093 95.6188C46.9808 95.6188 46.3093 94.9472 46.3093 94.1188C46.3093 93.2904 46.9808 92.6188 47.8093 92.6188Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 92.6188C64.0191 92.6188 64.6907 93.2904 64.6907 94.1188C64.6907 94.9472 64.0191 95.6188 63.1907 95.6188C62.3622 95.6188 61.6907 94.9472 61.6907 94.1188C61.6907 93.2904 62.3622 92.6188 63.1907 92.6188Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 92.6188C79.4005 92.6188 80.0721 93.2904 80.0721 94.1188C80.0721 94.9472 79.4005 95.6188 78.5721 95.6188C77.7437 95.6188 77.0721 94.9472 77.0721 94.1188C77.0721 93.2904 77.7437 92.6188 78.5721 92.6188Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 92.6188C94.7819 92.6188 95.4535 93.2904 95.4535 94.1188C95.4535 94.9472 94.782 95.6188 93.9535 95.6188C93.1251 95.6188 92.4535 94.9472 92.4535 94.1188C92.4535 93.2904 93.1251 92.6188 93.9535 92.6188Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 92.6188C110.163 92.6188 110.835 93.2904 110.835 94.1188C110.835 94.9472 110.163 95.6188 109.335 95.6188C108.507 95.6188 107.835 94.9472 107.835 94.1188C107.835 93.2904 108.507 92.6188 109.335 92.6188Z\" fill=\"#031030\" />\n                                    <path d=\"M1.665 77.2374C2.49343 77.2374 3.165 77.909 3.165 78.7374C3.165 79.5658 2.49343 80.2374 1.665 80.2374C0.836568 80.2374 0.164998 79.5658 0.164998 78.7374C0.164998 77.909 0.836567 77.2374 1.665 77.2374Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 77.2374C17.8748 77.2374 18.5464 77.909 18.5464 78.7374C18.5464 79.5658 17.8748 80.2374 17.0464 80.2374C16.218 80.2374 15.5464 79.5658 15.5464 78.7374C15.5464 77.909 16.218 77.2374 17.0464 77.2374Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 77.2374C33.2563 77.2374 33.9278 77.909 33.9278 78.7374C33.9278 79.5658 33.2563 80.2374 32.4278 80.2374C31.5994 80.2374 30.9278 79.5658 30.9278 78.7374C30.9278 77.909 31.5994 77.2374 32.4278 77.2374Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 77.2374C48.6377 77.2374 49.3093 77.909 49.3093 78.7374C49.3093 79.5658 48.6377 80.2374 47.8093 80.2374C46.9808 80.2374 46.3093 79.5658 46.3093 78.7374C46.3093 77.909 46.9808 77.2374 47.8093 77.2374Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 77.2374C64.0191 77.2374 64.6907 77.909 64.6907 78.7374C64.6907 79.5658 64.0191 80.2374 63.1907 80.2374C62.3622 80.2374 61.6907 79.5658 61.6907 78.7374C61.6907 77.909 62.3622 77.2374 63.1907 77.2374Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 77.2374C79.4005 77.2374 80.0721 77.909 80.0721 78.7374C80.0721 79.5658 79.4005 80.2374 78.5721 80.2374C77.7437 80.2374 77.0721 79.5658 77.0721 78.7374C77.0721 77.909 77.7437 77.2374 78.5721 77.2374Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 77.2374C94.7819 77.2374 95.4535 77.909 95.4535 78.7374C95.4535 79.5658 94.7819 80.2374 93.9535 80.2374C93.1251 80.2374 92.4535 79.5658 92.4535 78.7374C92.4535 77.909 93.1251 77.2374 93.9535 77.2374Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 77.2374C110.163 77.2374 110.835 77.909 110.835 78.7374C110.835 79.5658 110.163 80.2374 109.335 80.2374C108.507 80.2374 107.835 79.5658 107.835 78.7374C107.835 77.909 108.507 77.2374 109.335 77.2374Z\" fill=\"#031030\" />\n                                    <path d=\"M1.665 61.856C2.49343 61.856 3.165 62.5275 3.165 63.356C3.165 64.1844 2.49343 64.856 1.665 64.856C0.836566 64.856 0.164996 64.1844 0.164996 63.356C0.164996 62.5275 0.836566 61.856 1.665 61.856Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 61.856C17.8748 61.856 18.5464 62.5275 18.5464 63.356C18.5464 64.1844 17.8748 64.856 17.0464 64.856C16.218 64.856 15.5464 64.1844 15.5464 63.356C15.5464 62.5275 16.218 61.856 17.0464 61.856Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 61.856C33.2563 61.856 33.9278 62.5275 33.9278 63.356C33.9278 64.1844 33.2563 64.856 32.4278 64.856C31.5994 64.856 30.9278 64.1844 30.9278 63.356C30.9278 62.5275 31.5994 61.856 32.4278 61.856Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 61.856C48.6377 61.856 49.3093 62.5275 49.3093 63.356C49.3093 64.1844 48.6377 64.856 47.8093 64.856C46.9808 64.856 46.3093 64.1844 46.3093 63.356C46.3093 62.5275 46.9808 61.856 47.8093 61.856Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 61.856C64.0191 61.856 64.6907 62.5275 64.6907 63.356C64.6907 64.1844 64.0191 64.856 63.1907 64.856C62.3622 64.856 61.6907 64.1844 61.6907 63.356C61.6907 62.5275 62.3622 61.856 63.1907 61.856Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 61.856C79.4005 61.856 80.0721 62.5275 80.0721 63.356C80.0721 64.1844 79.4005 64.856 78.5721 64.856C77.7437 64.856 77.0721 64.1844 77.0721 63.356C77.0721 62.5275 77.7437 61.856 78.5721 61.856Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 61.856C94.7819 61.856 95.4535 62.5275 95.4535 63.356C95.4535 64.1844 94.7819 64.856 93.9535 64.856C93.1251 64.856 92.4535 64.1844 92.4535 63.356C92.4535 62.5275 93.1251 61.856 93.9535 61.856Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 61.856C110.163 61.856 110.835 62.5275 110.835 63.356C110.835 64.1844 110.163 64.856 109.335 64.856C108.507 64.856 107.835 64.1844 107.835 63.356C107.835 62.5275 108.507 61.856 109.335 61.856Z\" fill=\"#031030\" />\n                                    <path d=\"M1.66499 46.4745C2.49343 46.4745 3.16499 47.1461 3.16499 47.9745C3.165 48.803 2.49343 49.4745 1.665 49.4745C0.836565 49.4745 0.164995 48.803 0.164995 47.9745C0.164995 47.1461 0.836565 46.4745 1.66499 46.4745Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 46.4745C17.8748 46.4745 18.5464 47.1461 18.5464 47.9745C18.5464 48.803 17.8748 49.4745 17.0464 49.4745C16.218 49.4745 15.5464 48.803 15.5464 47.9745C15.5464 47.1461 16.218 46.4745 17.0464 46.4745Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 46.4745C33.2563 46.4745 33.9278 47.1461 33.9278 47.9745C33.9278 48.803 33.2563 49.4745 32.4278 49.4745C31.5994 49.4745 30.9278 48.803 30.9278 47.9745C30.9278 47.1461 31.5994 46.4745 32.4278 46.4745Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 46.4745C48.6377 46.4745 49.3093 47.1461 49.3093 47.9745C49.3093 48.803 48.6377 49.4745 47.8093 49.4745C46.9808 49.4745 46.3093 48.803 46.3093 47.9745C46.3093 47.1461 46.9808 46.4745 47.8093 46.4745Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 46.4745C64.0191 46.4745 64.6907 47.1461 64.6907 47.9745C64.6907 48.803 64.0191 49.4745 63.1907 49.4745C62.3622 49.4745 61.6907 48.803 61.6907 47.9745C61.6907 47.1461 62.3622 46.4745 63.1907 46.4745Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 46.4745C79.4005 46.4745 80.0721 47.1461 80.0721 47.9745C80.0721 48.803 79.4005 49.4745 78.5721 49.4745C77.7437 49.4745 77.0721 48.803 77.0721 47.9745C77.0721 47.1461 77.7437 46.4745 78.5721 46.4745Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 46.4745C94.7819 46.4745 95.4535 47.1461 95.4535 47.9745C95.4535 48.803 94.7819 49.4745 93.9535 49.4745C93.1251 49.4745 92.4535 48.803 92.4535 47.9745C92.4535 47.1461 93.1251 46.4745 93.9535 46.4745Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 46.4745C110.163 46.4745 110.835 47.1461 110.835 47.9745C110.835 48.803 110.163 49.4745 109.335 49.4745C108.507 49.4745 107.835 48.803 107.835 47.9745C107.835 47.1461 108.507 46.4745 109.335 46.4745Z\" fill=\"#031030\" />\n                                    <path d=\"M1.66499 31.0931C2.49342 31.0931 3.16499 31.7647 3.16499 32.5931C3.16499 33.4215 2.49342 34.0931 1.66499 34.0931C0.836564 34.0931 0.164994 33.4215 0.164994 32.5931C0.164994 31.7647 0.836563 31.0931 1.66499 31.0931Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 31.0931C17.8748 31.0931 18.5464 31.7647 18.5464 32.5931C18.5464 33.4215 17.8748 34.0931 17.0464 34.0931C16.218 34.0931 15.5464 33.4215 15.5464 32.5931C15.5464 31.7647 16.218 31.0931 17.0464 31.0931Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 31.0931C33.2563 31.0931 33.9278 31.7647 33.9278 32.5931C33.9278 33.4215 33.2563 34.0931 32.4278 34.0931C31.5994 34.0931 30.9278 33.4215 30.9278 32.5931C30.9278 31.7647 31.5994 31.0931 32.4278 31.0931Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 31.0931C48.6377 31.0931 49.3093 31.7647 49.3093 32.5931C49.3093 33.4215 48.6377 34.0931 47.8093 34.0931C46.9808 34.0931 46.3093 33.4215 46.3093 32.5931C46.3093 31.7647 46.9808 31.0931 47.8093 31.0931Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 31.0931C64.0191 31.0931 64.6907 31.7647 64.6907 32.5931C64.6907 33.4215 64.0191 34.0931 63.1907 34.0931C62.3622 34.0931 61.6907 33.4215 61.6907 32.5931C61.6907 31.7647 62.3622 31.0931 63.1907 31.0931Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 31.0931C79.4005 31.0931 80.0721 31.7647 80.0721 32.5931C80.0721 33.4215 79.4005 34.0931 78.5721 34.0931C77.7437 34.0931 77.0721 33.4215 77.0721 32.5931C77.0721 31.7647 77.7437 31.0931 78.5721 31.0931Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 31.0931C94.7819 31.0931 95.4535 31.7647 95.4535 32.5931C95.4535 33.4215 94.7819 34.0931 93.9535 34.0931C93.1251 34.0931 92.4535 33.4215 92.4535 32.5931C92.4535 31.7647 93.1251 31.0931 93.9535 31.0931Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 31.0931C110.163 31.0931 110.835 31.7647 110.835 32.5931C110.835 33.4215 110.163 34.0931 109.335 34.0931C108.507 34.0931 107.835 33.4215 107.835 32.5931C107.835 31.7647 108.507 31.0931 109.335 31.0931Z\" fill=\"#031030\" />\n                                    <path d=\"M1.66499 15.7117C2.49342 15.7117 3.16499 16.3833 3.16499 17.2117C3.16499 18.0401 2.49342 18.7117 1.66499 18.7117C0.836562 18.7117 0.164992 18.0401 0.164992 17.2117C0.164992 16.3833 0.836562 15.7117 1.66499 15.7117Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 15.7117C17.8748 15.7117 18.5464 16.3833 18.5464 17.2117C18.5464 18.0401 17.8748 18.7117 17.0464 18.7117C16.218 18.7117 15.5464 18.0401 15.5464 17.2117C15.5464 16.3833 16.218 15.7117 17.0464 15.7117Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 15.7117C33.2563 15.7117 33.9278 16.3833 33.9278 17.2117C33.9278 18.0401 33.2563 18.7117 32.4278 18.7117C31.5994 18.7117 30.9278 18.0401 30.9278 17.2117C30.9278 16.3833 31.5994 15.7117 32.4278 15.7117Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 15.7117C48.6377 15.7117 49.3093 16.3833 49.3093 17.2117C49.3093 18.0401 48.6377 18.7117 47.8093 18.7117C46.9808 18.7117 46.3092 18.0401 46.3092 17.2117C46.3092 16.3833 46.9808 15.7117 47.8093 15.7117Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 15.7117C64.0191 15.7117 64.6907 16.3833 64.6907 17.2117C64.6907 18.0401 64.0191 18.7117 63.1907 18.7117C62.3622 18.7117 61.6907 18.0401 61.6907 17.2117C61.6907 16.3833 62.3622 15.7117 63.1907 15.7117Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 15.7117C79.4005 15.7117 80.0721 16.3833 80.0721 17.2117C80.0721 18.0401 79.4005 18.7117 78.5721 18.7117C77.7437 18.7117 77.0721 18.0401 77.0721 17.2117C77.0721 16.3833 77.7437 15.7117 78.5721 15.7117Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 15.7117C94.7819 15.7117 95.4535 16.3833 95.4535 17.2117C95.4535 18.0401 94.7819 18.7117 93.9535 18.7117C93.1251 18.7117 92.4535 18.0401 92.4535 17.2117C92.4535 16.3833 93.1251 15.7117 93.9535 15.7117Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 15.7117C110.163 15.7117 110.835 16.3833 110.835 17.2117C110.835 18.0401 110.163 18.7117 109.335 18.7117C108.507 18.7117 107.835 18.0401 107.835 17.2117C107.835 16.3833 108.507 15.7117 109.335 15.7117Z\" fill=\"#031030\" />\n                                    <path d=\"M1.66499 0.330271C2.49342 0.330271 3.16499 1.00184 3.16499 1.83027C3.16499 2.6587 2.49342 3.33027 1.66499 3.33027C0.836561 3.33027 0.164991 2.6587 0.164991 1.83027C0.164991 1.00184 0.836561 0.330271 1.66499 0.330271Z\" fill=\"#031030\" />\n                                    <path d=\"M17.0464 0.330269C17.8748 0.330269 18.5464 1.00184 18.5464 1.83027C18.5464 2.6587 17.8748 3.33027 17.0464 3.33027C16.218 3.33027 15.5464 2.6587 15.5464 1.83027C15.5464 1.00184 16.218 0.33027 17.0464 0.330269Z\" fill=\"#031030\" />\n                                    <path d=\"M32.4278 0.330268C33.2563 0.330268 33.9278 1.00184 33.9278 1.83027C33.9278 2.6587 33.2563 3.33027 32.4278 3.33027C31.5994 3.33027 30.9278 2.6587 30.9278 1.83027C30.9278 1.00184 31.5994 0.330268 32.4278 0.330268Z\" fill=\"#031030\" />\n                                    <path d=\"M47.8093 0.330267C48.6377 0.330267 49.3093 1.00184 49.3093 1.83027C49.3093 2.6587 48.6377 3.33027 47.8093 3.33027C46.9808 3.33027 46.3092 2.6587 46.3092 1.83027C46.3092 1.00184 46.9808 0.330267 47.8093 0.330267Z\" fill=\"#031030\" />\n                                    <path d=\"M63.1907 0.330265C64.0191 0.330265 64.6907 1.00184 64.6907 1.83027C64.6907 2.6587 64.0191 3.33027 63.1907 3.33027C62.3622 3.33027 61.6907 2.6587 61.6907 1.83027C61.6907 1.00184 62.3622 0.330265 63.1907 0.330265Z\" fill=\"#031030\" />\n                                    <path d=\"M78.5721 0.330264C79.4005 0.330264 80.0721 1.00183 80.0721 1.83026C80.0721 2.65869 79.4005 3.33026 78.5721 3.33026C77.7437 3.33026 77.0721 2.65869 77.0721 1.83026C77.0721 1.00183 77.7437 0.330264 78.5721 0.330264Z\" fill=\"#031030\" />\n                                    <path d=\"M93.9535 0.330263C94.7819 0.330263 95.4535 1.00183 95.4535 1.83026C95.4535 2.65869 94.7819 3.33026 93.9535 3.33026C93.1251 3.33026 92.4535 2.65869 92.4535 1.83026C92.4535 1.00183 93.1251 0.330263 93.9535 0.330263Z\" fill=\"#031030\" />\n                                    <path d=\"M109.335 0.330261C110.163 0.330261 110.835 1.00183 110.835 1.83026C110.835 2.65869 110.163 3.33026 109.335 3.33026C108.507 3.33026 107.835 2.65869 107.835 1.83026C107.835 1.00183 108.507 0.330261 109.335 0.330261Z\" fill=\"#031030\" />\n                                </svg>\n                                <svg className=\"absolute bottom-4 -right-3\" xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"34\" viewBox=\"0 0 272 34\" fill=\"none\">\n                                    <path d=\"M5.49121 33.3279L5.49121 0.955474M34.4983 33.3279L34.4983 0.955473M63.5054 33.3279L63.5054 0.955471M92.5124 33.3279L92.5124 0.95547M121.52 33.3279L121.52 0.955469M150.527 33.3279L150.527 0.955467M179.534 33.3279L179.534 0.955466M208.541 33.3279L208.541 0.955465M237.548 33.3279L237.548 0.955464M266.555 33.3279L266.555 0.955462\" stroke=\"#F06F46\" strokeWidth=\"10.8777\" />\n                                </svg>\n                            </div>\n                        </div>\n                        <p className=\"font-body text-base mb-4 py-4 md:p-0\">\n                            Buscá en la primer galería uruguaya dedicada al deporte femenino fotos de tus jugadoras y partidos favoritos.\n                        </p> <Waypoint onEnter={() => setRenderLottie(true)} />\n\n                        <NavLink to={{ pathname: '/galeria' }} className=\"text-center block md:inline-block bg-orange py-3 px-8 rounded-3xl text-white text-base hover:bg-orangelight transition-all\">Ver más fotos</NavLink>\n                    </div>\n                </div>\n\n\n                <div className=\"hidden md:block col-span-1\">\n                    <div className=\"relative mx-auto w-full md:w-96 \">\n                        <div className=\"relative h-84 pl-2\">\n                            <div style={{ background: \"url(https://res.cloudinary.com/isita/image/upload/v1635200451/static/image_32_zjmn2y.png) center bottom /cover\" }} className=\"h-48 w-64  lg:h-52 lg:w-72  bg-orange absolute left-8 lg:left-0 bottom-0 z-10\">\n\n                            </div>\n                            <div className=\"w-40 h-60 lg:w-48 lg:h-72 top-8 lg:top-0 bg-orange absolute right-12 lg:right-8 bg-black\" style={{ background: \"url(https://res.cloudinary.com/isita/image/upload/v1635200659/static/image_34_canwjl.png) center bottom /cover\" }}>\n                            </div>\n                            <svg className=\"absolute left-4 lg:-left-3 bottom-16\" xmlns=\"http://www.w3.org/2000/svg\" width=\"111\" height=\"204\" viewBox=\"0 0 111 204\" fill=\"none\">\n\n                                <path d=\"M1.665 200.289C2.49343 200.289 3.165 200.96 3.165 201.789C3.165 202.617 2.49343 203.289 1.665 203.289C0.836571 203.289 0.165001 202.617 0.165001 201.789C0.165001 200.96 0.83657 200.289 1.665 200.289Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 200.289C17.8748 200.289 18.5464 200.96 18.5464 201.789C18.5464 202.617 17.8748 203.289 17.0464 203.289C16.218 203.289 15.5464 202.617 15.5464 201.789C15.5464 200.96 16.218 200.289 17.0464 200.289Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 200.289C33.2563 200.289 33.9278 200.96 33.9278 201.789C33.9278 202.617 33.2563 203.289 32.4278 203.289C31.5994 203.289 30.9278 202.617 30.9278 201.789C30.9278 200.96 31.5994 200.289 32.4278 200.289Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 200.289C48.6377 200.289 49.3093 200.96 49.3093 201.789C49.3093 202.617 48.6377 203.289 47.8093 203.289C46.9808 203.289 46.3093 202.617 46.3093 201.789C46.3093 200.96 46.9808 200.289 47.8093 200.289Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 200.289C64.0191 200.289 64.6907 200.96 64.6907 201.789C64.6907 202.617 64.0191 203.289 63.1907 203.289C62.3623 203.289 61.6907 202.617 61.6907 201.789C61.6907 200.96 62.3623 200.289 63.1907 200.289Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 200.289C79.4005 200.289 80.0721 200.96 80.0721 201.789C80.0721 202.617 79.4005 203.289 78.5721 203.289C77.7437 203.289 77.0721 202.617 77.0721 201.789C77.0721 200.96 77.7437 200.289 78.5721 200.289Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 200.289C94.782 200.289 95.4535 200.96 95.4535 201.789C95.4535 202.617 94.782 203.289 93.9535 203.289C93.1251 203.289 92.4535 202.617 92.4535 201.789C92.4535 200.96 93.1251 200.289 93.9535 200.289Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 200.289C110.163 200.289 110.835 200.96 110.835 201.789C110.835 202.617 110.163 203.289 109.335 203.289C108.507 203.289 107.835 202.617 107.835 201.789C107.835 200.96 108.507 200.289 109.335 200.289Z\" fill=\"#031030\" />\n                                <path d=\"M1.665 184.907C2.49343 184.907 3.165 185.579 3.165 186.407C3.165 187.236 2.49343 187.907 1.665 187.907C0.836569 187.907 0.165 187.236 0.164999 186.407C0.164999 185.579 0.836569 184.907 1.665 184.907Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 184.907C17.8748 184.907 18.5464 185.579 18.5464 186.407C18.5464 187.236 17.8748 187.907 17.0464 187.907C16.218 187.907 15.5464 187.236 15.5464 186.407C15.5464 185.579 16.218 184.907 17.0464 184.907Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 184.907C33.2563 184.907 33.9278 185.579 33.9278 186.407C33.9278 187.236 33.2563 187.907 32.4278 187.907C31.5994 187.907 30.9278 187.236 30.9278 186.407C30.9278 185.579 31.5994 184.907 32.4278 184.907Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 184.907C48.6377 184.907 49.3093 185.579 49.3093 186.407C49.3093 187.236 48.6377 187.907 47.8093 187.907C46.9808 187.907 46.3093 187.236 46.3093 186.407C46.3093 185.579 46.9808 184.907 47.8093 184.907Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 184.907C64.0191 184.907 64.6907 185.579 64.6907 186.407C64.6907 187.236 64.0191 187.907 63.1907 187.907C62.3623 187.907 61.6907 187.236 61.6907 186.407C61.6907 185.579 62.3623 184.907 63.1907 184.907Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 184.907C79.4005 184.907 80.0721 185.579 80.0721 186.407C80.0721 187.236 79.4005 187.907 78.5721 187.907C77.7437 187.907 77.0721 187.236 77.0721 186.407C77.0721 185.579 77.7437 184.907 78.5721 184.907Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 184.907C94.782 184.907 95.4535 185.579 95.4535 186.407C95.4535 187.236 94.782 187.907 93.9535 187.907C93.1251 187.907 92.4535 187.236 92.4535 186.407C92.4535 185.579 93.1251 184.907 93.9535 184.907Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 184.907C110.163 184.907 110.835 185.579 110.835 186.407C110.835 187.236 110.163 187.907 109.335 187.907C108.507 187.907 107.835 187.236 107.835 186.407C107.835 185.579 108.507 184.907 109.335 184.907Z\" fill=\"#031030\" />\n                                <path d=\"M1.665 169.526C2.49343 169.526 3.165 170.197 3.165 171.026C3.165 171.854 2.49343 172.526 1.665 172.526C0.836568 172.526 0.164998 171.854 0.164998 171.026C0.164998 170.197 0.836568 169.526 1.665 169.526Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 169.526C17.8749 169.526 18.5464 170.197 18.5464 171.026C18.5464 171.854 17.8749 172.526 17.0464 172.526C16.218 172.526 15.5464 171.854 15.5464 171.026C15.5464 170.197 16.218 169.526 17.0464 169.526Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 169.526C33.2563 169.526 33.9278 170.197 33.9278 171.026C33.9278 171.854 33.2563 172.526 32.4278 172.526C31.5994 172.526 30.9278 171.854 30.9278 171.026C30.9278 170.197 31.5994 169.526 32.4278 169.526Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 169.526C48.6377 169.526 49.3093 170.197 49.3093 171.026C49.3093 171.854 48.6377 172.526 47.8093 172.526C46.9808 172.526 46.3093 171.854 46.3093 171.026C46.3093 170.197 46.9808 169.526 47.8093 169.526Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 169.526C64.0191 169.526 64.6907 170.197 64.6907 171.026C64.6907 171.854 64.0191 172.526 63.1907 172.526C62.3623 172.526 61.6907 171.854 61.6907 171.026C61.6907 170.197 62.3623 169.526 63.1907 169.526Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 169.526C79.4005 169.526 80.0721 170.197 80.0721 171.026C80.0721 171.854 79.4005 172.526 78.5721 172.526C77.7437 172.526 77.0721 171.854 77.0721 171.026C77.0721 170.197 77.7437 169.526 78.5721 169.526Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 169.526C94.782 169.526 95.4535 170.197 95.4535 171.026C95.4535 171.854 94.782 172.526 93.9535 172.526C93.1251 172.526 92.4535 171.854 92.4535 171.026C92.4535 170.197 93.1251 169.526 93.9535 169.526Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 169.526C110.163 169.526 110.835 170.197 110.835 171.026C110.835 171.854 110.163 172.526 109.335 172.526C108.507 172.526 107.835 171.854 107.835 171.026C107.835 170.197 108.507 169.526 109.335 169.526Z\" fill=\"#031030\" />\n                                <path d=\"M1.665 154.145C2.49343 154.145 3.165 154.816 3.165 155.645C3.165 156.473 2.49343 157.145 1.665 157.145C0.836567 157.145 0.164997 156.473 0.164997 155.645C0.164997 154.816 0.836566 154.145 1.665 154.145Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 154.145C17.8749 154.145 18.5464 154.816 18.5464 155.645C18.5464 156.473 17.8749 157.145 17.0464 157.145C16.218 157.145 15.5464 156.473 15.5464 155.645C15.5464 154.816 16.218 154.145 17.0464 154.145Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 154.144C33.2563 154.144 33.9278 154.816 33.9278 155.644C33.9278 156.473 33.2563 157.144 32.4278 157.144C31.5994 157.145 30.9278 156.473 30.9278 155.645C30.9278 154.816 31.5994 154.145 32.4278 154.144Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 154.144C48.6377 154.144 49.3093 154.816 49.3093 155.644C49.3093 156.473 48.6377 157.144 47.8093 157.144C46.9808 157.144 46.3093 156.473 46.3093 155.644C46.3093 154.816 46.9808 154.144 47.8093 154.144Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 154.144C64.0191 154.144 64.6907 154.816 64.6907 155.644C64.6907 156.473 64.0191 157.144 63.1907 157.144C62.3623 157.144 61.6907 156.473 61.6907 155.644C61.6907 154.816 62.3623 154.144 63.1907 154.144Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 154.144C79.4005 154.144 80.0721 154.816 80.0721 155.644C80.0721 156.473 79.4005 157.144 78.5721 157.144C77.7437 157.144 77.0721 156.473 77.0721 155.644C77.0721 154.816 77.7437 154.144 78.5721 154.144Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 154.144C94.782 154.144 95.4535 154.816 95.4535 155.644C95.4535 156.473 94.782 157.144 93.9535 157.144C93.1251 157.144 92.4535 156.473 92.4535 155.644C92.4535 154.816 93.1251 154.144 93.9535 154.144Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 154.144C110.163 154.144 110.835 154.816 110.835 155.644C110.835 156.473 110.163 157.144 109.335 157.144C108.507 157.144 107.835 156.473 107.835 155.644C107.835 154.816 108.507 154.144 109.335 154.144Z\" fill=\"#031030\" />\n                                <path d=\"M1.665 138.763C2.49343 138.763 3.165 139.435 3.165 140.263C3.165 141.092 2.49343 141.763 1.665 141.763C0.836565 141.763 0.164995 141.092 0.164995 140.263C0.164995 139.435 0.836565 138.763 1.665 138.763Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 138.763C17.8748 138.763 18.5464 139.435 18.5464 140.263C18.5464 141.092 17.8748 141.763 17.0464 141.763C16.218 141.763 15.5464 141.092 15.5464 140.263C15.5464 139.435 16.218 138.763 17.0464 138.763Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 138.763C33.2563 138.763 33.9278 139.435 33.9278 140.263C33.9278 141.092 33.2563 141.763 32.4278 141.763C31.5994 141.763 30.9278 141.092 30.9278 140.263C30.9278 139.435 31.5994 138.763 32.4278 138.763Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 138.763C48.6377 138.763 49.3093 139.435 49.3093 140.263C49.3093 141.092 48.6377 141.763 47.8093 141.763C46.9808 141.763 46.3093 141.092 46.3093 140.263C46.3093 139.435 46.9808 138.763 47.8093 138.763Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 138.763C64.0191 138.763 64.6907 139.435 64.6907 140.263C64.6907 141.092 64.0191 141.763 63.1907 141.763C62.3622 141.763 61.6907 141.092 61.6907 140.263C61.6907 139.435 62.3622 138.763 63.1907 138.763Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 138.763C79.4005 138.763 80.0721 139.435 80.0721 140.263C80.0721 141.092 79.4005 141.763 78.5721 141.763C77.7437 141.763 77.0721 141.092 77.0721 140.263C77.0721 139.435 77.7437 138.763 78.5721 138.763Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 138.763C94.782 138.763 95.4535 139.435 95.4535 140.263C95.4535 141.092 94.782 141.763 93.9535 141.763C93.1251 141.763 92.4535 141.092 92.4535 140.263C92.4535 139.435 93.1251 138.763 93.9535 138.763Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 138.763C110.163 138.763 110.835 139.435 110.835 140.263C110.835 141.092 110.163 141.763 109.335 141.763C108.507 141.763 107.835 141.092 107.835 140.263C107.835 139.435 108.507 138.763 109.335 138.763Z\" fill=\"#031030\" />\n                                <path d=\"M1.66499 123.382C2.49342 123.382 3.16499 124.053 3.16499 124.882C3.16499 125.71 2.49342 126.382 1.66499 126.382C0.836564 126.382 0.164994 125.71 0.164994 124.882C0.164994 124.053 0.836564 123.382 1.66499 123.382Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 123.382C17.8748 123.382 18.5464 124.053 18.5464 124.882C18.5464 125.71 17.8748 126.382 17.0464 126.382C16.218 126.382 15.5464 125.71 15.5464 124.882C15.5464 124.053 16.218 123.382 17.0464 123.382Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 123.382C33.2563 123.382 33.9278 124.053 33.9278 124.882C33.9278 125.71 33.2563 126.382 32.4278 126.382C31.5994 126.382 30.9278 125.71 30.9278 124.882C30.9278 124.053 31.5994 123.382 32.4278 123.382Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 123.382C48.6377 123.382 49.3093 124.053 49.3093 124.882C49.3093 125.71 48.6377 126.382 47.8093 126.382C46.9808 126.382 46.3093 125.71 46.3093 124.882C46.3093 124.053 46.9808 123.382 47.8093 123.382Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 123.382C64.0191 123.382 64.6907 124.053 64.6907 124.882C64.6907 125.71 64.0191 126.382 63.1907 126.382C62.3623 126.382 61.6907 125.71 61.6907 124.882C61.6907 124.053 62.3623 123.382 63.1907 123.382Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 123.382C79.4005 123.382 80.0721 124.053 80.0721 124.882C80.0721 125.71 79.4005 126.382 78.5721 126.382C77.7437 126.382 77.0721 125.71 77.0721 124.882C77.0721 124.053 77.7437 123.382 78.5721 123.382Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 123.382C94.782 123.382 95.4535 124.053 95.4535 124.882C95.4535 125.71 94.782 126.382 93.9535 126.382C93.1251 126.382 92.4535 125.71 92.4535 124.882C92.4535 124.053 93.1251 123.382 93.9535 123.382Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 123.382C110.163 123.382 110.835 124.053 110.835 124.882C110.835 125.71 110.163 126.382 109.335 126.382C108.507 126.382 107.835 125.71 107.835 124.882C107.835 124.053 108.507 123.382 109.335 123.382Z\" fill=\"#031030\" />\n                                <path d=\"M1.66499 108C2.49342 108 3.16499 108.672 3.16499 109.5C3.16499 110.329 2.49342 111 1.66499 111C0.836563 111 0.164993 110.329 0.164993 109.5C0.164993 108.672 0.836562 108 1.66499 108Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 108C17.8748 108 18.5464 108.672 18.5464 109.5C18.5464 110.329 17.8748 111 17.0464 111C16.218 111 15.5464 110.329 15.5464 109.5C15.5464 108.672 16.218 108 17.0464 108Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 108C33.2563 108 33.9278 108.672 33.9278 109.5C33.9278 110.329 33.2563 111 32.4278 111C31.5994 111 30.9278 110.329 30.9278 109.5C30.9278 108.672 31.5994 108 32.4278 108Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 108C48.6377 108 49.3093 108.672 49.3093 109.5C49.3093 110.329 48.6377 111 47.8093 111C46.9808 111 46.3093 110.329 46.3093 109.5C46.3093 108.672 46.9808 108 47.8093 108Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 108C64.0191 108 64.6907 108.672 64.6907 109.5C64.6907 110.329 64.0191 111 63.1907 111C62.3623 111 61.6907 110.329 61.6907 109.5C61.6907 108.672 62.3623 108 63.1907 108Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 108C79.4005 108 80.0721 108.672 80.0721 109.5C80.0721 110.329 79.4005 111 78.5721 111C77.7437 111 77.0721 110.329 77.0721 109.5C77.0721 108.672 77.7437 108 78.5721 108Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 108C94.782 108 95.4535 108.672 95.4535 109.5C95.4535 110.329 94.7819 111 93.9535 111C93.1251 111 92.4535 110.329 92.4535 109.5C92.4535 108.672 93.1251 108 93.9535 108Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 108C110.163 108 110.835 108.672 110.835 109.5C110.835 110.329 110.163 111 109.335 111C108.507 111 107.835 110.329 107.835 109.5C107.835 108.672 108.507 108 109.335 108Z\" fill=\"#031030\" />\n                                <path d=\"M1.66499 92.6188C2.49342 92.6188 3.16499 93.2904 3.16499 94.1188C3.16499 94.9472 2.49342 95.6188 1.66499 95.6188C0.836561 95.6188 0.164991 94.9472 0.164991 94.1188C0.164991 93.2904 0.836561 92.6188 1.66499 92.6188Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 92.6188C17.8748 92.6188 18.5464 93.2904 18.5464 94.1188C18.5464 94.9472 17.8748 95.6188 17.0464 95.6188C16.218 95.6188 15.5464 94.9472 15.5464 94.1188C15.5464 93.2904 16.218 92.6188 17.0464 92.6188Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 92.6188C33.2563 92.6188 33.9278 93.2904 33.9278 94.1188C33.9278 94.9472 33.2563 95.6188 32.4278 95.6188C31.5994 95.6188 30.9278 94.9472 30.9278 94.1188C30.9278 93.2904 31.5994 92.6188 32.4278 92.6188Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 92.6188C48.6377 92.6188 49.3093 93.2904 49.3093 94.1188C49.3093 94.9472 48.6377 95.6188 47.8093 95.6188C46.9808 95.6188 46.3093 94.9472 46.3093 94.1188C46.3093 93.2904 46.9808 92.6188 47.8093 92.6188Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 92.6188C64.0191 92.6188 64.6907 93.2904 64.6907 94.1188C64.6907 94.9472 64.0191 95.6188 63.1907 95.6188C62.3622 95.6188 61.6907 94.9472 61.6907 94.1188C61.6907 93.2904 62.3622 92.6188 63.1907 92.6188Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 92.6188C79.4005 92.6188 80.0721 93.2904 80.0721 94.1188C80.0721 94.9472 79.4005 95.6188 78.5721 95.6188C77.7437 95.6188 77.0721 94.9472 77.0721 94.1188C77.0721 93.2904 77.7437 92.6188 78.5721 92.6188Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 92.6188C94.7819 92.6188 95.4535 93.2904 95.4535 94.1188C95.4535 94.9472 94.782 95.6188 93.9535 95.6188C93.1251 95.6188 92.4535 94.9472 92.4535 94.1188C92.4535 93.2904 93.1251 92.6188 93.9535 92.6188Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 92.6188C110.163 92.6188 110.835 93.2904 110.835 94.1188C110.835 94.9472 110.163 95.6188 109.335 95.6188C108.507 95.6188 107.835 94.9472 107.835 94.1188C107.835 93.2904 108.507 92.6188 109.335 92.6188Z\" fill=\"#031030\" />\n                                <path d=\"M1.665 77.2374C2.49343 77.2374 3.165 77.909 3.165 78.7374C3.165 79.5658 2.49343 80.2374 1.665 80.2374C0.836568 80.2374 0.164998 79.5658 0.164998 78.7374C0.164998 77.909 0.836567 77.2374 1.665 77.2374Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 77.2374C17.8748 77.2374 18.5464 77.909 18.5464 78.7374C18.5464 79.5658 17.8748 80.2374 17.0464 80.2374C16.218 80.2374 15.5464 79.5658 15.5464 78.7374C15.5464 77.909 16.218 77.2374 17.0464 77.2374Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 77.2374C33.2563 77.2374 33.9278 77.909 33.9278 78.7374C33.9278 79.5658 33.2563 80.2374 32.4278 80.2374C31.5994 80.2374 30.9278 79.5658 30.9278 78.7374C30.9278 77.909 31.5994 77.2374 32.4278 77.2374Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 77.2374C48.6377 77.2374 49.3093 77.909 49.3093 78.7374C49.3093 79.5658 48.6377 80.2374 47.8093 80.2374C46.9808 80.2374 46.3093 79.5658 46.3093 78.7374C46.3093 77.909 46.9808 77.2374 47.8093 77.2374Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 77.2374C64.0191 77.2374 64.6907 77.909 64.6907 78.7374C64.6907 79.5658 64.0191 80.2374 63.1907 80.2374C62.3622 80.2374 61.6907 79.5658 61.6907 78.7374C61.6907 77.909 62.3622 77.2374 63.1907 77.2374Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 77.2374C79.4005 77.2374 80.0721 77.909 80.0721 78.7374C80.0721 79.5658 79.4005 80.2374 78.5721 80.2374C77.7437 80.2374 77.0721 79.5658 77.0721 78.7374C77.0721 77.909 77.7437 77.2374 78.5721 77.2374Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 77.2374C94.7819 77.2374 95.4535 77.909 95.4535 78.7374C95.4535 79.5658 94.7819 80.2374 93.9535 80.2374C93.1251 80.2374 92.4535 79.5658 92.4535 78.7374C92.4535 77.909 93.1251 77.2374 93.9535 77.2374Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 77.2374C110.163 77.2374 110.835 77.909 110.835 78.7374C110.835 79.5658 110.163 80.2374 109.335 80.2374C108.507 80.2374 107.835 79.5658 107.835 78.7374C107.835 77.909 108.507 77.2374 109.335 77.2374Z\" fill=\"#031030\" />\n                                <path d=\"M1.665 61.856C2.49343 61.856 3.165 62.5275 3.165 63.356C3.165 64.1844 2.49343 64.856 1.665 64.856C0.836566 64.856 0.164996 64.1844 0.164996 63.356C0.164996 62.5275 0.836566 61.856 1.665 61.856Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 61.856C17.8748 61.856 18.5464 62.5275 18.5464 63.356C18.5464 64.1844 17.8748 64.856 17.0464 64.856C16.218 64.856 15.5464 64.1844 15.5464 63.356C15.5464 62.5275 16.218 61.856 17.0464 61.856Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 61.856C33.2563 61.856 33.9278 62.5275 33.9278 63.356C33.9278 64.1844 33.2563 64.856 32.4278 64.856C31.5994 64.856 30.9278 64.1844 30.9278 63.356C30.9278 62.5275 31.5994 61.856 32.4278 61.856Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 61.856C48.6377 61.856 49.3093 62.5275 49.3093 63.356C49.3093 64.1844 48.6377 64.856 47.8093 64.856C46.9808 64.856 46.3093 64.1844 46.3093 63.356C46.3093 62.5275 46.9808 61.856 47.8093 61.856Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 61.856C64.0191 61.856 64.6907 62.5275 64.6907 63.356C64.6907 64.1844 64.0191 64.856 63.1907 64.856C62.3622 64.856 61.6907 64.1844 61.6907 63.356C61.6907 62.5275 62.3622 61.856 63.1907 61.856Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 61.856C79.4005 61.856 80.0721 62.5275 80.0721 63.356C80.0721 64.1844 79.4005 64.856 78.5721 64.856C77.7437 64.856 77.0721 64.1844 77.0721 63.356C77.0721 62.5275 77.7437 61.856 78.5721 61.856Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 61.856C94.7819 61.856 95.4535 62.5275 95.4535 63.356C95.4535 64.1844 94.7819 64.856 93.9535 64.856C93.1251 64.856 92.4535 64.1844 92.4535 63.356C92.4535 62.5275 93.1251 61.856 93.9535 61.856Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 61.856C110.163 61.856 110.835 62.5275 110.835 63.356C110.835 64.1844 110.163 64.856 109.335 64.856C108.507 64.856 107.835 64.1844 107.835 63.356C107.835 62.5275 108.507 61.856 109.335 61.856Z\" fill=\"#031030\" />\n                                <path d=\"M1.66499 46.4745C2.49343 46.4745 3.16499 47.1461 3.16499 47.9745C3.165 48.803 2.49343 49.4745 1.665 49.4745C0.836565 49.4745 0.164995 48.803 0.164995 47.9745C0.164995 47.1461 0.836565 46.4745 1.66499 46.4745Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 46.4745C17.8748 46.4745 18.5464 47.1461 18.5464 47.9745C18.5464 48.803 17.8748 49.4745 17.0464 49.4745C16.218 49.4745 15.5464 48.803 15.5464 47.9745C15.5464 47.1461 16.218 46.4745 17.0464 46.4745Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 46.4745C33.2563 46.4745 33.9278 47.1461 33.9278 47.9745C33.9278 48.803 33.2563 49.4745 32.4278 49.4745C31.5994 49.4745 30.9278 48.803 30.9278 47.9745C30.9278 47.1461 31.5994 46.4745 32.4278 46.4745Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 46.4745C48.6377 46.4745 49.3093 47.1461 49.3093 47.9745C49.3093 48.803 48.6377 49.4745 47.8093 49.4745C46.9808 49.4745 46.3093 48.803 46.3093 47.9745C46.3093 47.1461 46.9808 46.4745 47.8093 46.4745Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 46.4745C64.0191 46.4745 64.6907 47.1461 64.6907 47.9745C64.6907 48.803 64.0191 49.4745 63.1907 49.4745C62.3622 49.4745 61.6907 48.803 61.6907 47.9745C61.6907 47.1461 62.3622 46.4745 63.1907 46.4745Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 46.4745C79.4005 46.4745 80.0721 47.1461 80.0721 47.9745C80.0721 48.803 79.4005 49.4745 78.5721 49.4745C77.7437 49.4745 77.0721 48.803 77.0721 47.9745C77.0721 47.1461 77.7437 46.4745 78.5721 46.4745Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 46.4745C94.7819 46.4745 95.4535 47.1461 95.4535 47.9745C95.4535 48.803 94.7819 49.4745 93.9535 49.4745C93.1251 49.4745 92.4535 48.803 92.4535 47.9745C92.4535 47.1461 93.1251 46.4745 93.9535 46.4745Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 46.4745C110.163 46.4745 110.835 47.1461 110.835 47.9745C110.835 48.803 110.163 49.4745 109.335 49.4745C108.507 49.4745 107.835 48.803 107.835 47.9745C107.835 47.1461 108.507 46.4745 109.335 46.4745Z\" fill=\"#031030\" />\n                                <path d=\"M1.66499 31.0931C2.49342 31.0931 3.16499 31.7647 3.16499 32.5931C3.16499 33.4215 2.49342 34.0931 1.66499 34.0931C0.836564 34.0931 0.164994 33.4215 0.164994 32.5931C0.164994 31.7647 0.836563 31.0931 1.66499 31.0931Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 31.0931C17.8748 31.0931 18.5464 31.7647 18.5464 32.5931C18.5464 33.4215 17.8748 34.0931 17.0464 34.0931C16.218 34.0931 15.5464 33.4215 15.5464 32.5931C15.5464 31.7647 16.218 31.0931 17.0464 31.0931Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 31.0931C33.2563 31.0931 33.9278 31.7647 33.9278 32.5931C33.9278 33.4215 33.2563 34.0931 32.4278 34.0931C31.5994 34.0931 30.9278 33.4215 30.9278 32.5931C30.9278 31.7647 31.5994 31.0931 32.4278 31.0931Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 31.0931C48.6377 31.0931 49.3093 31.7647 49.3093 32.5931C49.3093 33.4215 48.6377 34.0931 47.8093 34.0931C46.9808 34.0931 46.3093 33.4215 46.3093 32.5931C46.3093 31.7647 46.9808 31.0931 47.8093 31.0931Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 31.0931C64.0191 31.0931 64.6907 31.7647 64.6907 32.5931C64.6907 33.4215 64.0191 34.0931 63.1907 34.0931C62.3622 34.0931 61.6907 33.4215 61.6907 32.5931C61.6907 31.7647 62.3622 31.0931 63.1907 31.0931Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 31.0931C79.4005 31.0931 80.0721 31.7647 80.0721 32.5931C80.0721 33.4215 79.4005 34.0931 78.5721 34.0931C77.7437 34.0931 77.0721 33.4215 77.0721 32.5931C77.0721 31.7647 77.7437 31.0931 78.5721 31.0931Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 31.0931C94.7819 31.0931 95.4535 31.7647 95.4535 32.5931C95.4535 33.4215 94.7819 34.0931 93.9535 34.0931C93.1251 34.0931 92.4535 33.4215 92.4535 32.5931C92.4535 31.7647 93.1251 31.0931 93.9535 31.0931Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 31.0931C110.163 31.0931 110.835 31.7647 110.835 32.5931C110.835 33.4215 110.163 34.0931 109.335 34.0931C108.507 34.0931 107.835 33.4215 107.835 32.5931C107.835 31.7647 108.507 31.0931 109.335 31.0931Z\" fill=\"#031030\" />\n                                <path d=\"M1.66499 15.7117C2.49342 15.7117 3.16499 16.3833 3.16499 17.2117C3.16499 18.0401 2.49342 18.7117 1.66499 18.7117C0.836562 18.7117 0.164992 18.0401 0.164992 17.2117C0.164992 16.3833 0.836562 15.7117 1.66499 15.7117Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 15.7117C17.8748 15.7117 18.5464 16.3833 18.5464 17.2117C18.5464 18.0401 17.8748 18.7117 17.0464 18.7117C16.218 18.7117 15.5464 18.0401 15.5464 17.2117C15.5464 16.3833 16.218 15.7117 17.0464 15.7117Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 15.7117C33.2563 15.7117 33.9278 16.3833 33.9278 17.2117C33.9278 18.0401 33.2563 18.7117 32.4278 18.7117C31.5994 18.7117 30.9278 18.0401 30.9278 17.2117C30.9278 16.3833 31.5994 15.7117 32.4278 15.7117Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 15.7117C48.6377 15.7117 49.3093 16.3833 49.3093 17.2117C49.3093 18.0401 48.6377 18.7117 47.8093 18.7117C46.9808 18.7117 46.3092 18.0401 46.3092 17.2117C46.3092 16.3833 46.9808 15.7117 47.8093 15.7117Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 15.7117C64.0191 15.7117 64.6907 16.3833 64.6907 17.2117C64.6907 18.0401 64.0191 18.7117 63.1907 18.7117C62.3622 18.7117 61.6907 18.0401 61.6907 17.2117C61.6907 16.3833 62.3622 15.7117 63.1907 15.7117Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 15.7117C79.4005 15.7117 80.0721 16.3833 80.0721 17.2117C80.0721 18.0401 79.4005 18.7117 78.5721 18.7117C77.7437 18.7117 77.0721 18.0401 77.0721 17.2117C77.0721 16.3833 77.7437 15.7117 78.5721 15.7117Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 15.7117C94.7819 15.7117 95.4535 16.3833 95.4535 17.2117C95.4535 18.0401 94.7819 18.7117 93.9535 18.7117C93.1251 18.7117 92.4535 18.0401 92.4535 17.2117C92.4535 16.3833 93.1251 15.7117 93.9535 15.7117Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 15.7117C110.163 15.7117 110.835 16.3833 110.835 17.2117C110.835 18.0401 110.163 18.7117 109.335 18.7117C108.507 18.7117 107.835 18.0401 107.835 17.2117C107.835 16.3833 108.507 15.7117 109.335 15.7117Z\" fill=\"#031030\" />\n                                <path d=\"M1.66499 0.330271C2.49342 0.330271 3.16499 1.00184 3.16499 1.83027C3.16499 2.6587 2.49342 3.33027 1.66499 3.33027C0.836561 3.33027 0.164991 2.6587 0.164991 1.83027C0.164991 1.00184 0.836561 0.330271 1.66499 0.330271Z\" fill=\"#031030\" />\n                                <path d=\"M17.0464 0.330269C17.8748 0.330269 18.5464 1.00184 18.5464 1.83027C18.5464 2.6587 17.8748 3.33027 17.0464 3.33027C16.218 3.33027 15.5464 2.6587 15.5464 1.83027C15.5464 1.00184 16.218 0.33027 17.0464 0.330269Z\" fill=\"#031030\" />\n                                <path d=\"M32.4278 0.330268C33.2563 0.330268 33.9278 1.00184 33.9278 1.83027C33.9278 2.6587 33.2563 3.33027 32.4278 3.33027C31.5994 3.33027 30.9278 2.6587 30.9278 1.83027C30.9278 1.00184 31.5994 0.330268 32.4278 0.330268Z\" fill=\"#031030\" />\n                                <path d=\"M47.8093 0.330267C48.6377 0.330267 49.3093 1.00184 49.3093 1.83027C49.3093 2.6587 48.6377 3.33027 47.8093 3.33027C46.9808 3.33027 46.3092 2.6587 46.3092 1.83027C46.3092 1.00184 46.9808 0.330267 47.8093 0.330267Z\" fill=\"#031030\" />\n                                <path d=\"M63.1907 0.330265C64.0191 0.330265 64.6907 1.00184 64.6907 1.83027C64.6907 2.6587 64.0191 3.33027 63.1907 3.33027C62.3622 3.33027 61.6907 2.6587 61.6907 1.83027C61.6907 1.00184 62.3622 0.330265 63.1907 0.330265Z\" fill=\"#031030\" />\n                                <path d=\"M78.5721 0.330264C79.4005 0.330264 80.0721 1.00183 80.0721 1.83026C80.0721 2.65869 79.4005 3.33026 78.5721 3.33026C77.7437 3.33026 77.0721 2.65869 77.0721 1.83026C77.0721 1.00183 77.7437 0.330264 78.5721 0.330264Z\" fill=\"#031030\" />\n                                <path d=\"M93.9535 0.330263C94.7819 0.330263 95.4535 1.00183 95.4535 1.83026C95.4535 2.65869 94.7819 3.33026 93.9535 3.33026C93.1251 3.33026 92.4535 2.65869 92.4535 1.83026C92.4535 1.00183 93.1251 0.330263 93.9535 0.330263Z\" fill=\"#031030\" />\n                                <path d=\"M109.335 0.330261C110.163 0.330261 110.835 1.00183 110.835 1.83026C110.835 2.65869 110.163 3.33026 109.335 3.33026C108.507 3.33026 107.835 2.65869 107.835 1.83026C107.835 1.00183 108.507 0.330261 109.335 0.330261Z\" fill=\"#031030\" />\n                            </svg>\n\n                            <div className=\"absolute -bottom-4 right-8 lg:-right-1\" style={{ width: '272px' }}>\n                                {renderLottie2 && <ShortLinesLottie />}\n                            </div>\n\n                            {/* <svg className=\"absolute -bottom-4 -right-1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"34\" viewBox=\"0 0 272 34\" fill=\"none\">\n                                <path d=\"M5.49121 33.3279L5.49121 0.955474M34.4983 33.3279L34.4983 0.955473M63.5054 33.3279L63.5054 0.955471M92.5124 33.3279L92.5124 0.95547M121.52 33.3279L121.52 0.955469M150.527 33.3279L150.527 0.955467M179.534 33.3279L179.534 0.955466M208.541 33.3279L208.541 0.955465M237.548 33.3279L237.548 0.955464M266.555 33.3279L266.555 0.955462\" stroke=\"#F06F46\" strokeWidth=\"10.8777\" />\n                            </svg> */}\n                        </div>\n                    </div>\n                    <Waypoint onEnter={() => setRenderLottie2(true)} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NuestraGaleria\n","import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Navbar = (props) => {\n    let navbarBg = props.navbarBg\n    const [menu, setMenu] = useState(\"cerrado\")\n    const toggleMenu = () => {\n        if (menu === \"cerrado\") {\n            setMenu(\"abierto\");\n        } else {\n            setMenu(\"cerrado\")\n        }\n    }\n    return (\n        <div className={navbarBg === \"solid\" ? 'bg-white w-screen fixed top-0  z-50' : 'w-screen fixed top-0  z-50'}>\n            <nav className=\"w-full flex justify-between items-center p-4  md:py-2 md:px-14  \" >\n                <div className=\"w-full md:w-auto flex items-center justify-between\" >\n                    <NavLink to={{ pathname: \"/\" }}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"57\" height=\"56\" viewBox=\"0 0 57 56\" fill=\"none\">\n                        <path d=\"M7.85302 25.3496C9.62007 21.5958 13.5938 19.5882 17.4973 20.1461C18.3849 20.273 19.2689 20.5325 20.1225 20.9343C22.1424 21.8851 23.6568 23.475 24.5378 25.349C25.6663 27.7495 25.7558 30.6163 24.5378 33.2037\" stroke=\"#F06F46\" strokeWidth=\"5.68166\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.4811 35.0452C16.6665 36.5446 20.4644 35.1779 21.9638 31.9925L27.1044 34.4124C24.6575 39.6105 18.9744 42.2479 13.5914 41.0519L12.4848 43.4027L14.469 44.3367C15.1382 44.6517 15.4254 45.4497 15.1104 46.1189L14.2279 47.9935C13.9129 48.6628 13.1149 48.95 12.4456 48.6349L10.4615 47.7009L8.48761 51.8941C8.23557 52.4295 7.59721 52.6592 7.06179 52.4072L4.25005 51.0836C3.71463 50.8315 3.48491 50.1932 3.73695 49.6578L5.71082 45.4646L3.68812 44.5124C3.01884 44.1974 2.73169 43.3994 3.04674 42.7302L3.92917 40.8556C4.24422 40.1863 5.04218 39.8991 5.71145 40.2142L7.73415 41.1663L8.83456 38.8287C4.44259 35.4503 2.83096 29.3618 5.28784 24.1425L10.4284 26.5624C8.92894 29.7478 10.2957 33.5457 13.4811 35.0452Z\" fill=\"#F06F46\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27.4048 7.7278C26.4919 7.59352 25.8607 6.7446 25.9949 5.83169L26.6427 1.42783C26.777 0.514919 27.6259 -0.116277 28.5388 0.0180088C29.4518 0.152295 30.083 1.00121 29.9487 1.91412L29.3009 6.31799C29.1666 7.23089 28.3177 7.86209 27.4048 7.7278ZM19.5127 7.03654C19.7768 7.92066 20.7076 8.42329 21.5917 8.15918C22.4759 7.89508 22.9785 6.96425 22.7144 6.08013L21.4403 1.8151C21.1762 0.930975 20.2454 0.42835 19.3613 0.692456C18.4772 0.956562 17.9745 1.88739 18.2386 2.77151L19.5127 7.03654ZM30.8135 12.4547C30.6866 12.3976 30.5564 12.3576 30.4254 12.3337C25.3706 10.5821 19.8055 12.3935 16.7211 16.6351C16.2665 17.2544 15.8647 17.9264 15.5251 18.6476L15.53 18.6499C12.6941 24.6744 15.2789 31.8572 21.3034 34.6931C27.3278 37.529 34.5106 34.9442 37.3465 28.9197L37.3505 28.9216C37.4693 28.6691 37.5786 28.4146 37.6786 28.1585C37.7281 28.0883 37.7767 28.0181 37.8243 27.9479L52.3568 29.7295C52.9607 29.8035 53.5571 29.5435 53.9137 29.0506L56.4843 26.2196C56.7787 25.8127 56.8744 25.295 56.745 24.8097C56.6156 24.3244 56.2748 23.9231 55.8168 23.7169L30.8135 12.4547ZM32.2099 26.5017C33.7105 23.3139 32.3428 19.5131 29.1549 18.0125C25.9671 16.5119 22.1663 17.8797 20.6657 21.0675L20.6706 21.0698C19.1711 24.2552 20.5378 28.053 23.7232 29.5525C26.9086 31.052 30.7065 29.6853 32.206 26.4999L32.2099 26.5017ZM16.8294 12.5188C16.1957 13.1895 15.1383 13.2196 14.4675 12.5859L11.2319 9.52904C10.5611 8.89537 10.5311 7.83793 11.1648 7.1672C11.7984 6.49646 12.8559 6.46641 13.5266 7.10009L16.7623 10.1569C17.433 10.7906 17.463 11.848 16.8294 12.5188Z\" fill=\"#031030\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.9128 23.5036C20.3127 24.1626 21.3571 25.259 21.9672 26.5567L27.109 24.1394C25.957 21.6891 23.9727 19.6058 21.3327 18.363C20.2205 17.8395 19.0639 17.4993 17.8996 17.3329C12.7959 16.6034 7.59633 19.2245 5.28304 24.1387L10.4236 26.5586C11.6444 23.9652 14.3924 22.571 17.0957 22.9574C17.7066 23.0447 18.3179 23.2236 18.9128 23.5036Z\" fill=\"#F06F46\" />\n                    </svg>\n                    </NavLink>\n                    <div className=\"md:hidden\" onClick={toggleMenu}>\n                        {(menu === \"cerrado\") ?\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"display:block h-6 w-6 stroke-current text-black\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\" />\n                            </svg> :\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\" display:block h-6 w-6 stroke-current text-black\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                        }\n                    </div>\n\n                </div>\n                <div className=\"hidden md:block\">\n                    <NavLink to={{ pathname: '/', aboutProps: { id: \"quienes\" } }} className=\"py-3 px-4 text-base opacity-100 hover:opacity-80 transition-all\">Quiénes somos</NavLink>\n                    <NavLink to={{ pathname: '/', aboutProps: { id: \"sociasVitalicias\" } }} className=\"py-3 px-4 text-base opacity-100 hover:opacity-80 transition-all\">Socias Vitalicias</NavLink>\n                    <NavLink to={{ pathname: '/', aboutProps: { id: \"galeria\" } }} className=\"py-3 px-4 text-base opacity-100 hover:opacity-80 transition-all\">Nuestra galería</NavLink>\n                    <NavLink to={{ pathname: '/', aboutProps: { id: \"sumate\" } }} className=\"text-center block md:inline-block bg-orange py-3 px-8 rounded-3xl text-white text-base hover:bg-orangelight transition-all\">Sumate</NavLink>\n                </div>\n\n            </nav>\n            {/* Hamburger menu */}\n            {(menu === \"cerrado\") ?\n                \"\" :\n                <div className=\" md:hidden flex flex-col w-full fixed bg-white z-50 text-center transition-all p-4\" >\n                    <NavLink to={{ pathname: '/', aboutProps: { id: \"quienes\" } }} className=\"py-3 px-4 text-base opacity-100 hover:opacity-80 transition-all\" onClick={() => { setMenu(\"cerrado\") }}>Quiénes somos</NavLink>\n                    <NavLink to={{ pathname: '/', aboutProps: { id: \"sociasVitalicias\" } }} className=\"py-3 px-4 text-base opacity-100 hover:opacity-80 transition-all\" onClick={() => { setMenu(\"cerrado\") }}>Socias Vitalicias</NavLink>\n                    <NavLink to={{ pathname: '/', aboutProps: { id: \"galeria\" } }} className=\"py-3 px-4 text-base opacity-100 hover:opacity-80 transition-all\" onClick={() => { setMenu(\"cerrado\") }}>Nuestra galería</NavLink>\n                    <NavLink to={{ pathname: '/', aboutProps: { id: \"sumate\" } }} className=\"text-center block md:inline-block bg-orange py-3 px-8 rounded-3xl text-white text-base hover:bg-orangelight transition-all\" onClick={() => { setMenu(\"cerrado\") }}>Sumate</NavLink>\n                </div>\n            }\n        </div>\n\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Lottie from 'react-lottie';\nimport animationData from './files/cross-pattern.json'\n\nconst CrossPatternLottie = () => {\n\n    const defaultOptions = {\n        loop: false,\n        autoplay: true,\n        animationData: animationData,\n        rendererSettings: {\n        },\n    };\n\n    return (\n        <div>\n            <Lottie options={defaultOptions} />\n        </div>\n    )\n}\n\nexport default CrossPatternLottie\n","import React from 'react'\nimport Lottie from 'react-lottie';\nimport animationData from './files/curved-line.json'\n\nconst CurvedLineLottie = () => {\n\n    const defaultOptions = {\n        loop: false,\n        autoplay: true,\n        animationData: animationData,\n        rendererSettings: {\n        },\n    };\n\n    return (\n        <div>\n            <Lottie options={defaultOptions} />\n        </div>\n    )\n}\n\nexport default CurvedLineLottie\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport CrossPatternLottie from '../lotties/CrossPatternLottie'\nimport CurvedLineLottie from '../lotties/CurvedLineLottie'\n\nimport { Waypoint } from 'react-waypoint'\n\nconst Stats = (props) => {\n\n    let { url } = props\n\n    let [renderLottie, setRenderLottie] = useState(false);\n    let [renderLottie2, setRenderLottie2] = useState(false);\n    const [programas, setProgramas] = useState();\n    const [socias, setSocias] = useState()\n    const [partidos, setPartidos] = useState()\n\n    fetch(`${url}/traerDatos`, {\n        method: \"GET\",\n    }).then(r => r.json())\n        .then(r => {\n            /*  console.log(r); */\n            setProgramas(r[0].programas)\n            setSocias(r[0].socias)\n            setPartidos(r[0].partidos)\n        })\n\n    return (\n        <div className=\"bg-orange h-auto md:h-80 w-full relative\">\n\n            <div className=\"absolute right-8 -top-20\" style={{ width: '55px' }}> {renderLottie && <CrossPatternLottie />}</div >\n\n            <div className=\"hidden md:block  absolute left-8 -bottom-32\" style={{ width: '47px' }}>{renderLottie2 && <CurvedLineLottie />}</div>\n            {/* < svg className=\"hidden md:block  absolute left-8 -bottom-32\" xmlns=\"http://www.w3.org/2000/svg\" width=\"47\" height=\"247\" viewBox=\"0 0 47 247\" fill=\"none\">\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.76712 238.153C12.4272 239.99 16.7425 241.272 22.9838 240.716L23.5162 246.692C16.2575 247.339 10.4478 245.915 6.35789 243.09C2.24852 240.253 1.41456e-06 236.059 1.98935e-06 231.676C2.56414e-06 227.293 2.24852 223.099 6.35789 220.261C10.4478 217.437 16.2575 216.013 23.5162 216.66C29.7575 217.216 34.0728 215.934 36.7329 214.097C39.3735 212.274 40.5 209.852 40.5 207.62C40.5 205.388 39.3735 202.966 36.7329 201.143C34.0728 199.306 29.7575 198.024 23.5162 198.58C16.2575 199.227 10.4478 197.802 6.35789 194.978C2.24852 192.141 7.72374e-06 187.947 8.29853e-06 183.564C8.87332e-06 179.18 2.24853 174.987 6.3579 172.149C10.4478 169.325 16.2575 167.901 23.5162 168.547C29.7575 169.103 34.0728 167.821 36.7329 165.985C39.3735 164.161 40.5 161.74 40.5 159.507C40.5 157.275 39.3735 154.854 36.7329 153.03C34.0728 151.193 29.7575 149.911 23.5162 150.468C16.2575 151.114 10.4478 149.69 6.3579 146.866C2.24853 144.028 1.40329e-05 139.834 1.46077e-05 135.451C1.51825e-05 131.068 2.24853 126.874 6.3579 124.037C10.4478 121.213 16.2575 119.788 23.5163 120.435C29.7575 120.991 34.0728 119.709 36.7329 117.872C39.3735 116.049 40.5 113.627 40.5 111.395C40.5 109.163 39.3735 106.741 36.7329 104.918C34.0728 103.081 29.7575 101.799 23.5163 102.355C16.2575 103.002 10.4478 101.578 6.35791 98.7534C2.24854 95.9159 2.03421e-05 91.7221 2.09169e-05 87.3389C2.14917e-05 82.9557 2.24854 78.7619 6.35791 75.9243C10.4478 73.1003 16.2575 71.6759 23.5163 72.3227C29.7575 72.8787 34.0728 71.5967 36.7329 69.76C39.3735 67.9366 40.5 65.515 40.5 63.2827C40.5 61.0505 39.3735 58.6289 36.7329 56.8055C34.0728 54.9687 29.7575 53.6867 23.5163 54.2428C16.2575 54.8895 10.4478 53.4652 6.35791 50.6411C2.24854 47.8036 2.66513e-05 43.6098 2.7226e-05 39.2266C2.78008e-05 34.8433 2.24855 30.6495 6.35791 27.812C10.4478 24.9879 16.2575 23.5636 23.5163 24.2103C29.7575 24.7664 34.0728 23.4844 36.7329 21.6476C39.3735 19.8243 40.5 17.4026 40.5 15.1704C40.5 12.9382 39.3735 10.5165 36.7329 8.69317C34.0728 6.85637 29.7575 5.57439 23.5163 6.13047L22.9838 0.154147C30.2425 -0.492596 36.0522 0.931752 40.1421 3.75585C44.2515 6.59337 46.5 10.7872 46.5 15.1704C46.5 19.5536 44.2515 23.7474 40.1421 26.585C36.0522 29.409 30.2425 30.8334 22.9838 30.1866C16.7425 29.6306 12.4272 30.9125 9.76714 32.7493C7.12651 34.5727 6.00003 36.9943 6.00003 39.2266C6.00003 41.4588 7.12651 43.8804 9.76714 45.7038C12.4272 47.5406 16.7425 48.8226 22.9838 48.2665C30.2425 47.6198 36.0522 49.0441 40.1421 51.8682C44.2515 54.7057 46.5 58.8995 46.5 63.2827C46.5 67.666 44.2515 71.8598 40.1421 74.6973C36.0522 77.5214 30.2425 78.9457 22.9838 78.299C16.7425 77.7429 12.4272 79.0249 9.76714 80.8617C7.1265 82.685 6.00002 85.1067 6.00002 87.3389C6.00002 89.5711 7.1265 91.9928 9.76713 93.8161C12.4272 95.6529 16.7425 96.9349 22.9838 96.3788C30.2425 95.7321 36.0522 97.1564 40.1421 99.9805C44.2515 102.818 46.5 107.012 46.5 111.395C46.5 115.778 44.2515 119.972 40.1421 122.81C36.0522 125.634 30.2425 127.058 22.9838 126.411C16.7425 125.855 12.4272 127.137 9.76713 128.974C7.1265 130.797 6.00001 133.219 6.00001 135.451C6.00001 137.683 7.1265 140.105 9.76713 141.928C12.4272 143.765 16.7425 145.047 22.9838 144.491C30.2425 143.844 36.0522 145.269 40.1421 148.093C44.2515 150.93 46.5 155.124 46.5 159.507C46.5 163.891 44.2515 168.084 40.1421 170.922C36.0522 173.746 30.2425 175.17 22.9838 174.524C16.7425 173.968 12.4272 175.25 9.76712 177.086C7.12649 178.91 6.00001 181.331 6.00001 183.564C6.00001 185.796 7.12649 188.217 9.76712 190.041C12.4272 191.878 16.7425 193.16 22.9838 192.604C30.2425 191.957 36.0522 193.381 40.1421 196.205C44.2515 199.043 46.5 203.237 46.5 207.62C46.5 212.003 44.2515 216.197 40.1421 219.034C36.0522 221.858 30.2425 223.283 22.9838 222.636C16.7425 222.08 12.4272 223.362 9.76712 225.199C7.12649 227.022 6 229.444 6 231.676C6 233.908 7.12648 236.33 9.76712 238.153Z\" fill=\"#171717\" />\n            </svg> */}\n            <Waypoint onEnter={() => setRenderLottie(true)} />\n            <div className=\"w-full p-8  lg:w-7/12 mx-auto flex  flex-col md:flex-row lg:p-0 lg:pt-14 justify-around h-auto md:h-80\">\n                <div className=\"text-center w-full h-auto md:w-auto md:h-48 \">\n                    <h3 className=\"text-6xl font-title md:text-hero text-white\">{programas}</h3>\n                    <p className=\"text-lg md:text-2xl mx-auto uppercase tracking-wider font-bold text-black w-full md:w-48 leading-7\">Programas al aire</p>\n                </div>\n                <div className=\"text-center  h-auto md:h-48 \">\n                    <h3 className=\"text-6xl font-title md:text-hero text-white\">{socias}</h3>\n                    <p className=\"text-lg md:text-2xl mx-auto uppercase tracking-wider font-bold text-black w-full md:w-48 leading-7\">Socias Vitalicias</p>\n                </div>\n                <div className=\"text-center  h-auto md:h-48 \">\n                    <h3 className=\"text-6xl font-title md:text-hero text-white\">{partidos}</h3>\n                    <p className=\"text-lg md:text-2xl mx-auto uppercase tracking-wider font-bold text-black w-full md:w-48 leading-7\">Partidos cubiertos</p>\n                </div>\n\n\n\n            </div>\n\n            <Waypoint onEnter={() => setRenderLottie2(true)} />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    url: state.url\n})\n\n\nexport default connect(mapStateToProps)(Stats)","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer className=\"w-full bg-black p-4 py-8 pt-20 text-white flex flex-col text-center z-50\">\n            <div>\n                <svg className=\"mx-auto\" xmlns=\"http://www.w3.org/2000/svg\" width=\"162\" height=\"44\" viewBox=\"0 0 162 44\" fill=\"none\">\n                    <path d=\"M55.4161 17.4587V4.10025H52.7348V17.4587H55.4161ZM66.1397 6.20697V8.12216C65.3497 6.99698 63.9851 5.99151 62.3093 5.99151C59.3168 5.99151 57.2819 8.91218 57.2819 11.8329C57.2819 14.7535 59.0535 17.6742 61.4953 17.6742C63.3148 17.6742 65.1582 16.4772 66.1397 15.2323V17.4587C66.1397 18.9191 65.3976 20.2358 63.0754 20.2358C60.4181 20.2358 59.0056 18.7515 59.0056 18.7515L57.4974 20.4752C57.4974 20.4752 59.1492 22.3664 63.1472 22.3664C67.1212 22.3664 68.6773 20.3315 68.6773 17.4587V6.20697H66.1397ZM66.1397 12.9341C65.2779 14.2747 63.7218 15.5675 62.0938 15.5675C60.825 15.5675 59.7956 14.2987 59.7956 11.8329C59.7956 9.36704 61.615 8.09822 62.8839 8.09822C64.3442 8.09822 65.4694 9.12764 66.1397 10.3007V12.9341ZM79.6355 6.20697V12.9102C78.7736 14.2029 77.2415 15.4478 75.5896 15.4478C73.2914 15.4478 73.2914 12.7905 73.2914 11.0907V6.20697H70.7777V11.0907C70.7777 15.9745 72.3098 17.6742 74.9911 17.6742C76.8106 17.6742 78.6539 16.4772 79.6355 15.2323V17.4587H82.1731V6.20697H79.6355ZM89.7729 5.99151C86.7325 5.99151 84.147 7.6673 84.147 7.6673L85.2961 9.36704C85.2961 9.36704 87.331 8.05034 89.9405 8.05034C92.5739 8.05034 92.8851 9.03188 92.8851 11.1625V12.3117C91.7839 11.5695 90.0602 10.9231 88.3365 10.9231C85.2722 10.9231 84.0273 12.6229 84.0273 14.2987C84.0273 15.9984 85.1525 17.6742 88.3365 17.6742C90.0602 17.6742 91.7839 17.0278 92.8851 16.2857V17.4587H95.4227V11.1625C95.4227 8.05034 94.1779 5.99151 89.7729 5.99151ZM92.8851 14.5381C91.9275 15.3041 90.4911 15.9984 88.959 15.9984C87.5944 15.9984 86.541 15.2084 86.541 14.2987C86.541 13.4129 87.2113 12.6229 88.959 12.6229C90.4911 12.6229 91.9275 13.3171 92.8851 14.0832V14.5381ZM100.089 17.4587V2.16111H97.5749V17.4587H100.089ZM107.681 5.99151C104.641 5.99151 102.055 7.6673 102.055 7.6673L103.204 9.36704C103.204 9.36704 105.239 8.05034 107.849 8.05034C110.482 8.05034 110.793 9.03188 110.793 11.1625V12.3117C109.692 11.5695 107.968 10.9231 106.245 10.9231C103.18 10.9231 101.936 12.6229 101.936 14.2987C101.936 15.9984 103.061 17.6742 106.245 17.6742C107.968 17.6742 109.692 17.0278 110.793 16.2857V17.4587H113.331V11.1625C113.331 8.05034 112.086 5.99151 107.681 5.99151ZM110.793 14.5381C109.836 15.3041 108.399 15.9984 106.867 15.9984C105.503 15.9984 104.449 15.2084 104.449 14.2987C104.449 13.4129 105.12 12.6229 106.867 12.6229C108.399 12.6229 109.836 13.3171 110.793 14.0832V14.5381ZM122.641 5.99151C120.822 5.99151 118.978 7.1885 117.997 8.43338V6.20697H115.483V17.4587H117.997V10.7556C118.859 9.43886 120.415 8.21792 122.067 8.21792C124.341 8.21792 124.341 10.8753 124.341 12.575V17.4587H126.879V12.575C126.879 7.69124 125.322 5.99151 122.641 5.99151ZM137.422 2.16111V8.40944C136.632 7.28426 135.268 5.99151 133.592 5.99151C130.647 5.99151 128.565 8.91218 128.565 11.8329C128.565 14.7535 129.809 17.6742 132.778 17.6742C134.597 17.6742 136.441 16.7645 137.422 15.5196V17.4587H139.96V2.16111H137.422ZM137.422 13.3411C136.561 14.6817 135.004 15.5675 133.377 15.5675C131.701 15.5675 131.03 13.8199 131.03 11.8329C131.03 9.8219 132.036 8.09822 134.167 8.09822C135.627 8.09822 136.752 9.55856 137.422 10.7316V13.3411ZM147.781 5.99151C143.257 5.99151 141.749 9.39098 141.749 11.8329C141.749 14.2747 143.257 17.6742 147.781 17.6742C152.306 17.6742 153.838 14.2747 153.838 11.8329C153.838 9.39098 152.306 5.99151 147.781 5.99151ZM147.781 15.7111C145.1 15.7111 144.095 13.4847 144.095 11.8329C144.095 10.181 145.1 7.95458 147.781 7.95458C150.487 7.95458 151.468 10.181 151.468 11.8329C151.468 13.4847 150.487 15.7111 147.781 15.7111ZM55.2246 39.4587V24.1611H52.7109V39.4587H55.2246ZM62.8171 27.9915C59.7767 27.9915 57.1912 29.6673 57.1912 29.6673L58.3403 31.367C58.3403 31.367 60.3752 30.0503 62.9847 30.0503C65.6181 30.0503 65.9293 31.0319 65.9293 33.1625V34.3117C64.8281 33.5695 63.1044 32.9231 61.3807 32.9231C58.3164 32.9231 57.0715 34.6229 57.0715 36.2987C57.0715 37.9984 58.1967 39.6742 61.3807 39.6742C63.1044 39.6742 64.8281 39.0278 65.9293 38.2857V39.4587H68.4669V33.1625C68.4669 30.0503 67.222 27.9915 62.8171 27.9915ZM65.9293 36.5381C64.9717 37.3041 63.5353 37.9984 62.0031 37.9984C60.6386 37.9984 59.5852 37.2084 59.5852 36.2987C59.5852 35.4129 60.2555 34.6229 62.0031 34.6229C63.5353 34.6229 64.9717 35.3171 65.9293 36.0832V36.5381ZM86.0908 35.748C85.5642 36.8253 84.5347 37.7111 82.835 37.7111C80.1537 37.7111 79.2919 35.4847 79.2919 33.8329C79.2919 32.181 80.1537 29.9546 82.835 29.9546C84.5347 29.9546 85.5642 30.8404 86.0908 31.9177L88.0779 30.7446C87.216 29.2364 85.5642 27.9915 82.835 27.9915C78.3104 27.9915 76.8021 31.391 76.8021 33.8329C76.8021 36.2747 78.3104 39.6742 82.835 39.6742C85.5642 39.6742 87.216 38.4293 88.0779 36.8972L86.0908 35.748ZM94.963 27.9915C91.9226 27.9915 89.3371 29.6673 89.3371 29.6673L90.4862 31.367C90.4862 31.367 92.5211 30.0503 95.1306 30.0503C97.764 30.0503 98.0752 31.0319 98.0752 33.1625V34.3117C96.974 33.5695 95.2503 32.9231 93.5266 32.9231C90.4623 32.9231 89.2174 34.6229 89.2174 36.2987C89.2174 37.9984 90.3426 39.6742 93.5266 39.6742C95.2503 39.6742 96.974 39.0278 98.0752 38.2857V39.4587H100.613V33.1625C100.613 30.0503 99.368 27.9915 94.963 27.9915ZM98.0752 36.5381C97.1176 37.3041 95.6812 37.9984 94.1491 37.9984C92.7845 37.9984 91.7311 37.2084 91.7311 36.2987C91.7311 35.4129 92.4014 34.6229 94.1491 34.6229C95.6812 34.6229 97.1176 35.3171 98.0752 36.0832V36.5381ZM109.923 27.9915C108.104 27.9915 106.26 29.1885 105.279 30.4334V28.207H102.765V39.4587H105.279V32.7556C106.141 31.4389 107.697 30.2179 109.348 30.2179C111.623 30.2179 111.623 32.8753 111.623 34.575V39.4587H114.16V34.575C114.16 29.6912 112.604 27.9915 109.923 27.9915ZM125.063 35.748C124.537 36.8253 123.507 37.7111 121.808 37.7111C119.126 37.7111 118.264 35.4847 118.264 33.8329C118.264 32.181 119.126 29.9546 121.808 29.9546C123.507 29.9546 124.537 30.8404 125.063 31.9177L127.05 30.7446C126.189 29.2364 124.537 27.9915 121.808 27.9915C117.283 27.9915 115.775 31.391 115.775 33.8329C115.775 36.2747 117.283 39.6742 121.808 39.6742C124.537 39.6742 126.189 38.4293 127.05 36.8972L125.063 35.748ZM135.827 27.9915C134.007 27.9915 132.164 29.1885 131.182 30.4334V24.1611H128.669V39.4587H131.182V32.7556C132.044 31.4389 133.6 30.2179 135.252 30.2179C137.527 30.2179 137.527 32.8753 137.527 34.575V39.4587H140.064V34.575C140.064 29.6912 138.508 27.9915 135.827 27.9915ZM147.472 27.9915C144.432 27.9915 141.846 29.6673 141.846 29.6673L142.995 31.367C142.995 31.367 145.03 30.0503 147.64 30.0503C150.273 30.0503 150.584 31.0319 150.584 33.1625V34.3117C149.483 33.5695 147.759 32.9231 146.036 32.9231C142.971 32.9231 141.726 34.6229 141.726 36.2987C141.726 37.9984 142.852 39.6742 146.036 39.6742C147.759 39.6742 149.483 39.0278 150.584 38.2857V39.4587H153.122V33.1625C153.122 30.0503 151.877 27.9915 147.472 27.9915ZM150.584 36.5381C149.627 37.3041 148.19 37.9984 146.658 37.9984C145.293 37.9984 144.24 37.2084 144.24 36.2987C144.24 35.4129 144.91 34.6229 146.658 34.6229C148.19 34.6229 149.627 35.3171 150.584 36.0832V36.5381Z\" fill=\"white\" />\n                    <path d=\"M5.52603 18.4684C6.70573 15.9624 9.35865 14.6221 11.9646 14.9945C12.5572 15.0792 13.1473 15.2525 13.7172 15.5207C15.0657 16.1555 16.0767 17.2169 16.6649 18.468C17.4183 20.0706 17.478 21.9845 16.6649 23.7119\" stroke=\"white\" strokeWidth=\"3.79311\" />\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.28327 24.9412C11.4099 25.9422 13.9454 25.0298 14.9464 22.9032L18.3783 24.5187C16.7447 27.9891 12.9506 29.7498 9.35685 28.9513L8.61808 30.5206L9.94284 31.1443C10.3897 31.3546 10.5814 31.8873 10.371 32.3341L9.78192 33.5856C9.57159 34.0324 9.03887 34.2241 8.59205 34.0138L7.26729 33.3902L5.9495 36.1896C5.78124 36.5471 5.35506 36.7004 4.99761 36.5322L3.12048 35.6485C2.76303 35.4803 2.60967 35.0541 2.77793 34.6966L4.09572 31.8972L2.74548 31.2616C2.29866 31.0513 2.10696 30.5186 2.31729 30.0717L2.90641 28.8203C3.11674 28.3734 3.64946 28.1817 4.09627 28.3921L5.44651 29.0277L6.18115 27.467C3.24911 25.2116 2.17321 21.1469 3.81342 17.6625L7.2453 19.278C6.24424 21.4046 7.15667 23.9401 9.28327 24.9412Z\" fill=\"white\" />\n                    <mask id=\"path-4-outside-1_24_2657\" maskUnits=\"userSpaceOnUse\" x=\"6.43213\" y=\"0.545044\" width=\"33\" height=\"26\" fill=\"black\">\n                        <rect fill=\"white\" x=\"6.43213\" y=\"0.545044\" width=\"33\" height=\"26\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.5785 6.70417C17.9691 6.61452 17.5477 6.04778 17.6373 5.43832L18.0698 2.49827C18.1594 1.88881 18.7262 1.46742 19.3356 1.55707C19.9451 1.64672 20.3665 2.21346 20.2768 2.82292L19.8444 5.76297C19.7547 6.37243 19.188 6.79382 18.5785 6.70417ZM13.3098 6.24266C13.4861 6.83291 14.1076 7.16847 14.6978 6.99215C15.2881 6.81583 15.6236 6.19441 15.4473 5.60416L14.5967 2.7568C14.4204 2.16655 13.799 1.831 13.2087 2.00732C12.6185 2.18363 12.2829 2.80506 12.4593 3.39531L13.3098 6.24266ZM20.8542 9.85987C20.7695 9.82172 20.6825 9.79501 20.5951 9.77909C17.226 8.61159 13.5173 9.81511 11.4561 12.6369C11.1484 13.0542 10.8768 13.5074 10.6476 13.9942L10.6508 13.9957C8.75756 18.0177 10.4832 22.8129 14.5052 24.7062C18.5271 26.5995 23.3224 24.8739 25.2157 20.8519L25.2183 20.8531C25.2976 20.6847 25.3705 20.5149 25.4373 20.344C25.4704 20.2971 25.5028 20.2502 25.5347 20.2032L35.2367 21.3926C35.6398 21.4421 36.038 21.2684 36.2761 20.9394L37.9922 19.0494C38.1887 18.7778 38.2526 18.4321 38.1662 18.1081C38.0799 17.7842 37.8523 17.5163 37.5466 17.3786L20.8542 9.85987ZM21.7864 19.2376C22.7882 17.1094 21.8751 14.572 19.7469 13.5702C17.6187 12.5684 15.0813 13.4815 14.0795 15.6097L14.0827 15.6112C13.0817 17.7378 13.9941 20.2733 16.1207 21.2743C18.2473 22.2754 20.7828 21.363 21.7838 19.2364L21.7864 19.2376ZM11.5185 9.90262C11.0954 10.3504 10.3895 10.3705 9.94168 9.94742L7.78155 7.90665C7.33376 7.4836 7.3137 6.77766 7.73674 6.32987C8.15979 5.88208 8.86574 5.86202 9.31352 6.28506L11.4737 8.32583C11.9214 8.74888 11.9415 9.45483 11.5185 9.90262Z\" />\n                    </mask>\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.5785 6.70417C17.9691 6.61452 17.5477 6.04778 17.6373 5.43832L18.0698 2.49827C18.1594 1.88881 18.7262 1.46742 19.3356 1.55707C19.9451 1.64672 20.3665 2.21346 20.2768 2.82292L19.8444 5.76297C19.7547 6.37243 19.188 6.79382 18.5785 6.70417ZM13.3098 6.24266C13.4861 6.83291 14.1076 7.16847 14.6978 6.99215C15.2881 6.81583 15.6236 6.19441 15.4473 5.60416L14.5967 2.7568C14.4204 2.16655 13.799 1.831 13.2087 2.00732C12.6185 2.18363 12.2829 2.80506 12.4593 3.39531L13.3098 6.24266ZM20.8542 9.85987C20.7695 9.82172 20.6825 9.79501 20.5951 9.77909C17.226 8.61159 13.5173 9.81511 11.4561 12.6369C11.1484 13.0542 10.8768 13.5074 10.6476 13.9942L10.6508 13.9957C8.75756 18.0177 10.4832 22.8129 14.5052 24.7062C18.5271 26.5995 23.3224 24.8739 25.2157 20.8519L25.2183 20.8531C25.2976 20.6847 25.3705 20.5149 25.4373 20.344C25.4704 20.2971 25.5028 20.2502 25.5347 20.2032L35.2367 21.3926C35.6398 21.4421 36.038 21.2684 36.2761 20.9394L37.9922 19.0494C38.1887 18.7778 38.2526 18.4321 38.1662 18.1081C38.0799 17.7842 37.8523 17.5163 37.5466 17.3786L20.8542 9.85987ZM21.7864 19.2376C22.7882 17.1094 21.8751 14.572 19.7469 13.5702C17.6187 12.5684 15.0813 13.4815 14.0795 15.6097L14.0827 15.6112C13.0817 17.7378 13.9941 20.2733 16.1207 21.2743C18.2473 22.2754 20.7828 21.363 21.7838 19.2364L21.7864 19.2376ZM11.5185 9.90262C11.0954 10.3504 10.3895 10.3705 9.94168 9.94742L7.78155 7.90665C7.33376 7.4836 7.3137 6.77766 7.73674 6.32987C8.15979 5.88208 8.86574 5.86202 9.31352 6.28506L11.4737 8.32583C11.9214 8.74888 11.9415 9.45483 11.5185 9.90262Z\" fill=\"white\" />\n                    <path d=\"M17.6373 5.43832L16.9768 5.34116V5.34116L17.6373 5.43832ZM18.0698 2.49827L18.7303 2.59543V2.59543L18.0698 2.49827ZM19.3356 1.55707L19.2385 2.21757V2.21757L19.3356 1.55707ZM20.2768 2.82292L20.9373 2.92008V2.92008L20.2768 2.82292ZM19.8444 5.76297L19.1839 5.66581L19.8444 5.76297ZM14.6978 6.99215L14.5067 6.35247H14.5067L14.6978 6.99215ZM13.3098 6.24266L12.6701 6.43375L13.3098 6.24266ZM15.4473 5.60416L14.8076 5.79524L15.4473 5.60416ZM14.5967 2.7568L15.2364 2.56572V2.56572L14.5967 2.7568ZM13.2087 2.00732L13.0177 1.36764L13.0177 1.36764L13.2087 2.00732ZM12.4593 3.39531L13.0989 3.20422V3.20422L12.4593 3.39531ZM20.5951 9.77909L20.3765 10.4099L20.425 10.4267L20.4755 10.4359L20.5951 9.77909ZM20.8542 9.85987L21.1284 9.25116L21.1284 9.25116L20.8542 9.85987ZM11.4561 12.6369L11.9934 13.0331L11.9952 13.0307L11.4561 12.6369ZM10.6476 13.9942L10.0436 13.7099L9.75919 14.314L10.3633 14.5983L10.6476 13.9942ZM10.6508 13.9957L11.2549 14.2801L11.5392 13.676L10.9351 13.3917L10.6508 13.9957ZM14.5052 24.7062L14.2208 25.3103L14.2208 25.3103L14.5052 24.7062ZM25.2157 20.8519L25.4999 20.2478L24.8959 19.9637L24.6117 20.5676L25.2157 20.8519ZM25.2183 20.8531L24.9341 21.4572L25.5381 21.7414L25.8223 21.1375L25.2183 20.8531ZM25.4373 20.344L24.892 19.9588L24.845 20.0254L24.8153 20.1013L25.4373 20.344ZM25.5347 20.2032L25.6159 19.5406L25.211 19.4909L24.9821 19.8286L25.5347 20.2032ZM35.2367 21.3926L35.3179 20.73L35.2367 21.3926ZM36.2761 20.9394L35.7818 20.4906L35.7569 20.518L35.7352 20.548L36.2761 20.9394ZM37.9922 19.0494L38.4864 19.4982L38.5113 19.4708L38.5331 19.4408L37.9922 19.0494ZM38.1662 18.1081L38.8113 17.9361V17.9361L38.1662 18.1081ZM37.5466 17.3786L37.8208 16.7699V16.7699L37.5466 17.3786ZM21.7864 19.2376L21.5021 19.8417L22.1061 20.126L22.3905 19.5219L21.7864 19.2376ZM14.0795 15.6097L13.4755 15.3253L13.1911 15.9294L13.7952 16.2137L14.0795 15.6097ZM14.0827 15.6112L14.6867 15.8955L14.9711 15.2915L14.367 15.0071L14.0827 15.6112ZM16.1207 21.2743L15.8363 21.8784V21.8784L16.1207 21.2743ZM21.7838 19.2364L22.0681 18.6323L21.4641 18.348L21.1798 18.952L21.7838 19.2364ZM9.94168 9.94742L10.4001 9.46213L10.4001 9.46213L9.94168 9.94742ZM11.5185 9.90262L12.0037 10.3611L12.0037 10.3611L11.5185 9.90262ZM7.78155 7.90665L8.24002 7.42136H8.24002L7.78155 7.90665ZM7.73674 6.32987L7.25146 5.8714L7.73674 6.32987ZM9.31352 6.28506L9.772 5.79978H9.772L9.31352 6.28506ZM11.4737 8.32583L11.9321 7.84055L11.9321 7.84055L11.4737 8.32583ZM16.9768 5.34116C16.8335 6.31541 17.5071 7.22136 18.4814 7.36467L18.6757 6.04367C18.431 6.00768 18.2618 5.78015 18.2978 5.53548L16.9768 5.34116ZM17.4093 2.40111L16.9768 5.34116L18.2978 5.53548L18.7303 2.59543L17.4093 2.40111ZM19.4328 0.896568C18.4586 0.753259 17.5526 1.42687 17.4093 2.40111L18.7303 2.59543C18.7663 2.35075 18.9938 2.18157 19.2385 2.21757L19.4328 0.896568ZM20.9373 2.92008C21.0806 1.94583 20.407 1.03988 19.4328 0.896568L19.2385 2.21757C19.4832 2.25356 19.6523 2.48109 19.6163 2.72576L20.9373 2.92008ZM20.5049 5.86013L20.9373 2.92008L19.6163 2.72576L19.1839 5.66581L20.5049 5.86013ZM18.4814 7.36467C19.4556 7.50798 20.3616 6.83437 20.5049 5.86013L19.1839 5.66581C19.1479 5.91049 18.9203 6.07967 18.6757 6.04367L18.4814 7.36467ZM14.5067 6.35247C14.2698 6.42326 14.0203 6.28855 13.9495 6.05158L12.6701 6.43375C12.952 7.37728 13.9454 7.91368 14.8889 7.63182L14.5067 6.35247ZM14.8076 5.79524C14.8784 6.03221 14.7437 6.28169 14.5067 6.35247L14.8889 7.63183C15.8324 7.34997 16.3688 6.3566 16.087 5.41307L14.8076 5.79524ZM13.9571 2.94788L14.8076 5.79524L16.087 5.41307L15.2364 2.56572L13.9571 2.94788ZM13.3998 2.64699C13.6368 2.57621 13.8863 2.71092 13.9571 2.94788L15.2364 2.56572C14.9546 1.62219 13.9612 1.08579 13.0177 1.36764L13.3998 2.64699ZM13.0989 3.20422C13.0281 2.96726 13.1629 2.71778 13.3998 2.64699L13.0177 1.36764C12.0741 1.64949 11.5377 2.64286 11.8196 3.58639L13.0989 3.20422ZM13.9495 6.05158L13.0989 3.20422L11.8196 3.58639L12.6701 6.43375L13.9495 6.05158ZM20.4755 10.4359C20.5101 10.4422 20.5451 10.4528 20.58 10.4686L21.1284 9.25116C20.9939 9.19058 20.855 9.14782 20.7146 9.12227L20.4755 10.4359ZM11.9952 13.0307C13.8853 10.4431 17.2877 9.33954 20.3765 10.4099L20.8137 9.14828C17.1642 7.88364 13.1493 9.18711 10.917 12.2431L11.9952 13.0307ZM11.2516 14.2785C11.4622 13.8313 11.7114 13.4155 11.9934 13.0331L10.9188 12.2407C10.5854 12.6928 10.2914 13.1834 10.0436 13.7099L11.2516 14.2785ZM10.9351 13.3917L10.9319 13.3901L10.3633 14.5983L10.3666 14.5998L10.9351 13.3917ZM10.0468 13.7114C7.9965 18.067 9.86528 23.2599 14.2208 25.3103L14.7895 24.1022C11.1011 22.3659 9.51863 17.9684 11.2549 14.2801L10.0468 13.7114ZM14.2208 25.3103C18.5764 27.3606 23.7694 25.4918 25.8197 21.1363L24.6117 20.5676C22.8754 24.2559 18.4779 25.8384 14.7895 24.1022L14.2208 25.3103ZM25.5025 20.2491L25.4999 20.2478L24.9315 21.456L24.9341 21.4572L25.5025 20.2491ZM24.8153 20.1013C24.7541 20.2581 24.6871 20.414 24.6143 20.5688L25.8223 21.1375C25.9081 20.9554 25.987 20.7717 26.0592 20.5867L24.8153 20.1013ZM24.9821 19.8286C24.9527 19.872 24.9227 19.9154 24.892 19.9588L25.9825 20.7292C26.0181 20.6789 26.053 20.6284 26.0873 20.5779L24.9821 19.8286ZM35.3179 20.73L25.6159 19.5406L25.4535 20.8659L35.1554 22.0553L35.3179 20.73ZM35.7352 20.548C35.6396 20.6801 35.4797 20.7498 35.3179 20.73L35.1554 22.0553C35.7999 22.1343 36.4363 21.8567 36.8169 21.3307L35.7352 20.548ZM37.4979 18.6006L35.7818 20.4906L36.7703 21.3882L38.4864 19.4982L37.4979 18.6006ZM37.5212 18.2802C37.5559 18.4102 37.5302 18.549 37.4513 18.6581L38.5331 19.4408C38.8472 19.0065 38.9494 18.454 38.8113 17.9361L37.5212 18.2802ZM37.2724 17.9873C37.3952 18.0426 37.4865 18.1501 37.5212 18.2802L38.8113 17.9361C38.6732 17.4182 38.3095 16.99 37.8208 16.7699L37.2724 17.9873ZM20.58 10.4686L37.2724 17.9873L37.8208 16.7699L21.1284 9.25116L20.58 10.4686ZM22.3905 19.5219C23.5493 17.0601 22.4931 14.125 20.0312 12.9662L19.4626 14.1742C21.2572 15.019 22.0272 17.1587 21.1824 18.9533L22.3905 19.5219ZM20.0312 12.9662C17.5694 11.8073 14.6343 12.8636 13.4755 15.3253L14.6835 15.894C15.5283 14.0994 17.668 13.3294 19.4626 14.1742L20.0312 12.9662ZM14.367 15.0071L14.3638 15.0056L13.7952 16.2137L13.7984 16.2153L14.367 15.0071ZM16.405 20.6703C14.612 19.8263 13.8427 17.6885 14.6867 15.8955L13.4787 15.3269C12.3206 17.7871 13.3761 20.7203 15.8363 21.8784L16.405 20.6703ZM21.1798 18.952C20.3358 20.7451 18.198 21.5143 16.405 20.6703L15.8363 21.8784C18.2965 23.0365 21.2297 21.9809 22.3878 19.5207L21.1798 18.952ZM22.0707 18.6336L22.0681 18.6323L21.4995 19.8404L21.5021 19.8417L22.0707 18.6336ZM9.48321 10.4327C10.199 11.109 11.3275 11.0769 12.0037 10.3611L11.0332 9.44415C10.8633 9.62392 10.5799 9.63197 10.4001 9.46213L9.48321 10.4327ZM7.32307 8.39194L9.48321 10.4327L10.4001 9.46213L8.24002 7.42136L7.32307 8.39194ZM7.25146 5.8714C6.57521 6.5872 6.60727 7.71568 7.32307 8.39194L8.24002 7.42136C8.06024 7.25153 8.05219 6.96811 8.22203 6.78834L7.25146 5.8714ZM9.772 5.79978C9.05619 5.12353 7.92771 5.15559 7.25146 5.8714L8.22203 6.78834C8.39187 6.60857 8.67528 6.60051 8.85505 6.77035L9.772 5.79978ZM11.9321 7.84055L9.772 5.79978L8.85505 6.77035L11.0152 8.81112L11.9321 7.84055ZM12.0037 10.3611C12.68 9.64528 12.6479 8.5168 11.9321 7.84055L11.0152 8.81112C11.195 8.98096 11.203 9.26437 11.0332 9.44415L12.0037 10.3611Z\" fill=\"black\" mask=\"url(#path-4-outside-1_24_2657)\" />\n                    <path d=\"M14.9485 19.275C14.5412 18.4086 13.844 17.6766 12.9094 17.2367C12.5122 17.0497 12.1041 16.9303 11.6963 16.872C9.89156 16.6141 8.05697 17.5448 7.24195 19.2762M18.3812 17.6612C17.6121 16.0253 16.2874 14.6345 14.5249 13.8048C13.7824 13.4553 13.0103 13.2282 12.233 13.1171C8.82567 12.6301 5.35443 14.38 3.81006 17.6607\" stroke=\"#171717\" strokeWidth=\"1.33521\" />\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.9096 17.2361C13.8442 17.676 14.5415 18.408 14.9488 19.2744L18.3815 17.6606C17.6124 16.0247 16.2877 14.6339 14.5252 13.8042C13.7827 13.4547 13.0105 13.2276 12.2332 13.1165C8.82592 12.6295 5.35467 14.3793 3.8103 17.6601L7.24219 19.2756C8.05721 17.5442 9.8918 16.6135 11.6965 16.8714C12.1043 16.9297 12.5125 17.0491 12.9096 17.2361Z\" fill=\"white\" />\n                </svg></div>\n            <div className=\"flex flex-col md:flex-row font-body  pt-4 justify-around w-3/4 lg:w-1/3 mx-auto\">\n                <NavLink className=\" font-regular font-body opacity-50 hover:opacity-70 transition-all pb-2 \" to={{ pathname: \"/\", aboutProps: { id: \"quienes\" } }}>Quiénes Somos</NavLink>\n                <NavLink className=\" font-regular font-body opacity-50 hover:opacity-70 transition-all pb-2 \" to={{ pathname: \"/\", aboutProps: { id: \"sociasVitalicias\" } }}>Socias Vitalicias</NavLink>\n                <NavLink className=\" font-regular font-body opacity-50 hover:opacity-70 transition-all pb-2 \" to={{ pathname: \"/\", aboutProps: { id: \"galeria\" } }}>Nuestra Galería</NavLink>\n                <NavLink className=\" font-regular font-body opacity-50 hover:opacity-70 transition-all pb-2 \" to={{ pathname: \"/\", aboutProps: { id: \"sumate\" } }}>Sumate</NavLink>\n\n\n            </div>\n            <div className=\"flex flex-row justify-center mt-4\">\n                <a href=\"https://www.instagram.com/igualandolacancha970/\" target=\"_blank\" style={{ width: \"40px\", height: \"40px\", borderRadius: \"100px\" }} className=\"bg-white mx-2 bg-opacity-10 hover:bg-opacity-20 transition-all flex items-center justify-center \"  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"21\" viewBox=\"0 0 20 21\" fill=\"none\">\n                        <path d=\"M10 2.01886C12.6667 2.01886 13 2.01886 14.0833 2.10219C16.8333 2.18553 18.0833 3.51884 18.1667 6.18548C18.25 7.2688 18.25 7.5188 18.25 10.1854C18.25 12.8521 18.25 13.1854 18.1667 14.1854C18.0833 16.852 16.75 18.1854 14.0833 18.2687C13 18.352 12.75 18.352 10 18.352C7.33333 18.352 7 18.352 6 18.2687C3.25 18.1854 2 16.852 1.91667 14.1854C1.83333 13.1021 1.83333 12.8521 1.83333 10.1854C1.83333 7.5188 1.83333 7.18547 1.91667 6.18548C2 3.51884 3.33333 2.18553 6 2.10219C7 2.01886 7.33333 2.01886 10 2.01886ZM10 0.185547C7.25 0.185547 6.91667 0.185547 5.91667 0.268879C2.25 0.435544 0.25 2.43552 0.0833333 6.10215C0 7.10214 0 7.43547 0 10.1854C0 12.9354 0 13.2687 0.0833333 14.2687C0.25 17.9354 2.25 19.9353 5.91667 20.102C6.91667 20.1853 7.25 20.1853 10 20.1853C12.75 20.1853 13.0833 20.1853 14.0833 20.102C17.75 19.9353 19.75 17.9354 19.9167 14.2687C20 13.2687 20 12.9354 20 10.1854C20 7.43547 20 7.10214 19.9167 6.10215C19.75 2.43552 17.75 0.435544 14.0833 0.268879C13.0833 0.185547 12.75 0.185547 10 0.185547ZM10 5.01883C7.16667 5.01883 4.83333 7.35214 4.83333 10.1854C4.83333 13.0187 7.16667 15.3521 10 15.3521C12.8333 15.3521 15.1667 13.0187 15.1667 10.1854C15.1667 7.35214 12.8333 5.01883 10 5.01883ZM10 13.5187C8.16667 13.5187 6.66667 12.0188 6.66667 10.1854C6.66667 8.35213 8.16667 6.85214 10 6.85214C11.8333 6.85214 13.3333 8.35213 13.3333 10.1854C13.3333 12.0188 11.8333 13.5187 10 13.5187ZM15.3333 3.68551C14.6667 3.68551 14.1667 4.1855 14.1667 4.85216C14.1667 5.51882 14.6667 6.01882 15.3333 6.01882C16 6.01882 16.5 5.51882 16.5 4.85216C16.5 4.1855 16 3.68551 15.3333 3.68551Z\" fill=\"white\" />\n                    </svg></a>\n                <a href=\"https://twitter.com/970_ILC\" target=\"_blank\" style={{ width: \"40px\", height: \"40px\", borderRadius: \"100px\" }} className=\"bg-white mx-2 bg-opacity-10 hover:bg-opacity-20 transition-all flex items-center justify-center \"  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"none\">\n                        <path d=\"M6.28982 16.3128C13.8373 16.3128 17.9648 10.0598 17.9648 4.63781C17.9648 4.46016 17.9612 4.28341 17.953 4.10735C18.7541 3.5282 19.4507 2.8053 20 1.98276C19.2648 2.30941 18.4737 2.52938 17.6436 2.62855C18.4907 2.12061 19.1413 1.31672 19.4482 0.358612C18.6552 0.828797 17.7771 1.17046 16.8427 1.35471C16.0936 0.557195 15.0272 0.0583496 13.8473 0.0583496C11.581 0.0583496 9.7433 1.89609 9.7433 4.16126C9.7433 4.48336 9.77947 4.79636 9.84953 5.09685C6.4395 4.92556 3.41549 3.29254 1.3919 0.809916C1.03909 1.41613 0.835959 2.12084 0.835959 2.87218C0.835959 4.29569 1.56046 5.55247 2.6621 6.28789C1.98901 6.26719 1.35664 6.08203 0.803658 5.77449C0.802748 5.79155 0.802748 5.80884 0.802748 5.82681C0.802748 7.81423 2.21739 9.47341 4.09472 9.84942C3.7501 9.94336 3.38751 9.99386 3.01309 9.99386C2.74877 9.99386 2.49173 9.96747 2.24173 9.91993C2.76401 11.55 4.27897 12.7365 6.07509 12.7699C4.67045 13.8707 2.90117 14.5265 0.978811 14.5265C0.64784 14.5265 0.32119 14.5076 0 14.4696C1.81591 15.6333 3.97211 16.3128 6.28982 16.3128Z\" fill=\"white\" />\n                    </svg></a>\n                <a href=\"https://open.spotify.com/show/6a14qoWlcAGixLfwVeyPOk?si=8ce9491ba55b4c14\" target=\"_blank\" style={{ width: \"40px\", height: \"40px\", borderRadius: \"100px\" }} className=\"bg-white mx-2 bg-opacity-10 hover:bg-opacity-20 transition-all flex items-center justify-center \"  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"21\" viewBox=\"0 0 20 21\" fill=\"none\">\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 10.1852C0 4.6714 4.48596 0.185547 10.0001 0.185547C15.514 0.185547 20 4.6714 20 10.1852C20 15.6993 15.514 20.1853 10.0001 20.1853C4.48596 20.1853 0 15.6993 0 10.1852ZM1.60561 10.1852C1.60561 14.814 5.3713 18.5797 10.0001 18.5797C14.6287 18.5797 18.3944 14.814 18.3944 10.1852C18.3944 5.55663 14.6287 1.79105 10.0001 1.79105C5.3713 1.79105 1.60561 5.55663 1.60561 10.1852ZM15.3593 7.22186C11.184 5.29224 5.31992 6.14845 5.07233 6.18581C4.63411 6.25207 4.33258 6.66086 4.39862 7.09908C4.46466 7.5373 4.87388 7.83969 5.31178 7.77344C5.36777 7.76498 10.9519 6.95383 14.6857 8.67932C14.7946 8.72974 14.9093 8.75361 15.022 8.75361C15.3253 8.75361 15.6156 8.58084 15.7512 8.28745C15.9373 7.88487 15.7617 7.40789 15.3593 7.22186ZM5.42589 9.30327C5.64971 9.26955 10.9504 8.49543 14.7303 10.2422C15.1328 10.4283 15.3083 10.9053 15.1224 11.3078C14.9866 11.6013 14.6964 11.774 14.393 11.7741C14.2803 11.7741 14.1659 11.7502 14.0567 11.6998C10.7183 10.157 5.71543 10.8834 5.66534 10.891C5.22722 10.9568 4.81811 10.6549 4.75218 10.2165C4.68613 9.77831 4.98767 9.36953 5.42589 9.30327ZM5.61128 12.3051C5.80791 12.2755 10.4665 11.5951 13.7949 13.1333C14.1973 13.3194 14.3728 13.7964 14.1868 14.1989C14.0512 14.4923 13.7609 14.665 13.4576 14.6651C13.3449 14.6651 13.2302 14.6412 13.1212 14.5908C10.2255 13.2525 5.89451 13.8861 5.85105 13.8928C5.41294 13.9587 5.00361 13.6573 4.93735 13.2188C4.8711 12.7804 5.17284 12.3714 5.61128 12.3051Z\" fill=\"white\" />\n                    </svg></a>\n            </div>\n        </footer >\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\n\nconst Integrante = (props) => {\n    let usuario = props.usuario;\n    return (\n        <div key={usuario._id} className=\"flex flex-col justify-center py-4 md:py-8 lg:pb-24\">\n            <div style={{ borderRadius: '100%', width: \"169px\", height: \"169px\", background: `url(${usuario.avatar}) center center/cover`, backgroundSize: '171px 171px' }} className=\"mx-auto\"></div>\n            <p className=\"font-body text-center font-semibold text-2xl\">{usuario.nombreCompleto}</p>\n            <p className=\"font-body text-center text-base\">{usuario.rol}</p>\n            <p className=\"font-body text-center italic\">{usuario.apodo}</p>\n        </div >\n    )\n}\n\n\nexport default (Integrante)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Integrante from './Integrante'\nimport TitleArrowLottie from '../lotties/TitleArrowLottie'\nimport { Waypoint } from 'react-waypoint'\n\nexport const Quienes = (props) => {\n\n    let {usuarios} = props\n    const [usuariosMostrar, setUsuariosMostrar] = useState([])\n    let [renderLottie, setRenderLottie] = useState(false);\n\n    useEffect(() => {\n       setUsuariosMostrar(usuarios.filter(usuario=>usuario.visible===true))\n    }, [usuarios])\n\n\n    return (\n        <div className=\"w-full md:w-10/12 mx-auto md:py-8 \">\n            <div className=\"grid grid-cols-1  p-4 md:grid-cols-12 md:p-0 \">\n                <div className=\"self-center col-span-1 md:col-span-6\">\n\n\n                    <h2 className=\"py-4 md:p-0 font-title text-5.5xl lg:text-hero relative\">¿Quiénes somos?\n                  \n                        <div className=\"absolute bottom-6 md:bottom-2 lg:bottom-6 right-8 lg:left-96\" style={{ width: '118px' }}> {renderLottie && <TitleArrowLottie />}</div>\n                        \n                    </h2>\n                </div>\n                <div className=\"self-center col-span-1 md:col-span-12 lg:col-start-5 lg:col-span-7\">\n\n                    <p className=\"font-body text-base mb-4 \">\n                        Igualando la Cancha nace de la iniciativa de cinco estudiantes de Comunicación con el fin de <b>lograr una mayor difusión del deporte femenino a través del periodismo.</b>\n                        Somos el primer medio dedicado 100% a los deportes femeninos: incluyendo basketball, futbol, handball, volleyball, hockey y rugby.\n\n                        </p>\n                    <Waypoint onEnter={() => setRenderLottie(true)} />\n                </div>\n                <div className=\"col-span-1 flex-wrap md:col-span-12 flex flex-col md:flex-row md:justify-around\">\n                    {usuariosMostrar.map(usuario => <Integrante key={usuario.avatar} usuario={usuario} />)}\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    usuarios: state.usuarios\n})\n\nexport default connect(mapStateToProps)(Quienes)\n","import React, { useState, useEffect } from 'react'\n\nconst Input = (props) => {\n\n    let { label, type, defaultValue, fotoSubida, opciones, placeholder, contactForm, bgColor } = props;\n    const [filename, setFilename] = useState(\"\")\n    const [fileCount, setFileCount] = useState(0)\n\n\n\n    return (\n\n        <div className=\"mb-6 col-span-1 group \">\n            {(type === \"text\" && contactForm === undefined || type === \"date\" || type === \"password\") ?\n                <div className=\"relative border border-black border-opacity-50 group-hover:border-opacity-70 group-focus:border-opacity-100 rounded-md px-3 py-2 shadow-sm  \">\n                    <label htmlFor={label} className=\"absolute -top-2 left-2 bg-black-50 -mt-px inline-block px-1  text-xs font-medium text-black text-opacity-60 group-hover:text-opacity-80 group-focus:text-opacity-100 \">{label}</label>\n                    <input type={type} onChange={(e) => { props.funcion(e.target.value) }} required name={label} id={label} className=\" bg-black-50 block w-full border-0 p-0 text-black placeholder-black placeholder-opacity-50 focus:ring-0 ring-opacity-0 focus:outline-none sm:text-sm\" />\n                </div> :\n                (type === \"textarea\" && contactForm === undefined) ?\n                    <div className=\"relative border border-black border-opacity-50 group-hover:border-opacity-70 group-focus:border-opacity-100 rounded-md px-3 py-2 shadow-sm  \">\n                        <label htmlFor={label} className=\"absolute -top-2 left-2 bg-black-50 -mt-px inline-block px-1  text-xs font-medium text-black text-opacity-60 group-hover:text-opacity-80 group-focus:text-opacity-100 \">{label}</label>\n                        <textarea onChange={(e) => { props.funcion(e.target.value) }} name={label} id={label} className=\"block bg-black-50  w-full border-0 p-0 text-black placeholder-black placeholder-opacity-50 focus:ring-0 ring-opacity-0 focus:outline-none sm:text-sm resize-none\"></textarea>\n                    </div> :\n                    (type === \"file\") ?\n\n                        <div className=\" w-full group  px-4 py-3 border-2 border-black border-opacity-40 group-hover:border-opacity-100 border-dashed rounded-md\">\n                            <div className=\" flex flex-row  justify-center items-center\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 stroke-current group-hover:opacity-100 opacity-50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\n                                </svg>\n                                <div className=\"flex flex-row ml-2 items-baseline\">\n                                    <div className=\"flex text-sm text-gray-600 text-center \">\n                                        <label className=\"relative cursor-pointer bg-transparent rounded-md font-medium text-black text-opacity-50 group-hover:text-opacity-100 focus-within:outline-none \">\n                                            <span>{label}</span>\n                                            <input type=\"file\" className=\"sr-only\" onChange={(e) => {\n                                                props.funcion(e);\n                                                setFilename(e.target.files[0].name)\n                                            }} />\n                                        </label>\n                                    </div>\n                                    <p className=\"text-xs text-black text-opacity-50 ml-2\">\n                                        {filename}\n                                    </p>\n                                </div>\n                            </div>\n\n                        </div> :\n                        (type === \"number\") ?\n                            <div className=\"relative border border-black border-opacity-50 group-hover:border-opacity-70 group-focus:border-opacity-100 rounded-md px-3 py-2 shadow-sm  \">\n                                <label htmlFor={label} className=\"absolute -top-2 left-2 bg-black-50 -mt-px inline-block px-1  text-xs font-medium text-black text-opacity-60 group-hover:text-opacity-80 group-focus:text-opacity-100 \">{label}</label>\n                                <input defaultValue={defaultValue} type={type} onChange={(e) => { props.funcion(parseInt(e.target.value)) }} required name={label} id={label} className=\" bg-transparent block w-full border-0 p-0 text-black placeholder-black placeholder-opacity-50 focus:ring-0 ring-opacity-0 focus:outline-none sm:text-sm\" />\n                            </div> :\n                            (type === \"select\") ?\n                                <div className=\"relative border border-black rounded-md px-3 py-2 shadow-sm border-opacity-40 hover:border-opacity-70 focus:border-opacity-100 \">\n                                    <label className=\"absolute -top-2 left-2 bg-black-50 -mt-px inline-block px-1  text-xs font-medium text-black\">{label}</label>\n                                    <select onChange={e => props.funcion(e.target.value)} className=\" bg-transparent block w-full border-0 p-0 text-black placeholder-black placeholder-opacity-50 focus:ring-0 ring-opacity-0 focus:outline-none sm:text-sm\">\n                                        {defaultValue !== undefined ?\n                                            <option value=\"todos\" >{defaultValue}</option> : \"\"}\n                                        {opciones.map(op => <option key={op._id} value={op._id}>{op.nombre}</option>)}\n                                    </select>\n                                </div> :\n                                (type === \"multiple files\") ?\n\n                                    <div className=\" w-full group  px-4 py-3 border-2 border-black border-opacity-40 group-hover:border-opacity-100 border-dashed rounded-md\">\n                                        <div className=\" flex flex-row  justify-center items-center\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 stroke-current group-hover:opacity-100 opacity-50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\n                                            </svg>\n                                            <div className=\"flex flex-row ml-2 items-baseline\">\n                                                <div className=\"flex text-sm text-gray-600 text-center \">\n                                                    <label className=\"relative cursor-pointer bg-black-50 rounded-md font-medium text-black text-opacity-50 group-hover:text-opacity-100 focus-within:outline-none \">\n                                                        <span>{label}</span>\n                                                        <input multiple type=\"file\" className=\"sr-only\" onChange={(e) => {\n                                                            props.funcion([...e.target.files]);\n                                                            setFileCount(e.target.files.length)\n                                                        }} />\n                                                    </label>\n                                                </div>\n                                                {(fileCount !== 0) ?\n                                                    <p className=\"text-xs text-black text-opacity-50 ml-2\">\n                                                        {`${fileCount} imágenes`}\n                                                    </p> : \"\"}\n                                            </div>\n                                        </div>\n\n                                    </div> :\n                                    (type === \"search\") ?\n                                        <div className=\"relative border border-black border-opacity-50 group-hover:border-opacity-70 group-focus:border-opacity-100 rounded-md px-3 py-2 shadow-sm  \">\n                                            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-black text-opacity-50 group-hover:text-opacity-100\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                                                </svg>\n                                            </div>\n\n                                            <input placeholder={label} type=\"text\" onChange={(e) => { props.funcion(e.target.value) }} required name={label} id={label} className=\" pl-8 block w-full border-0 p-0 text-black placeholder-black placeholder-opacity-50 focus:ring-0 ring-opacity-0 focus:outline-none sm:text-sm\" />\n                                        </div>\n                                        : (contactForm === true && type !== \"textarea\") ?\n                                            <div className=\"relative border border-black border-opacity-50 group-hover:border-opacity-70 group-focus:border-opacity-100 rounded-md px-3 py-2 shadow-sm  \">\n                                                <label htmlFor={label} className=\" bg-orange absolute -top-2 left-2  -mt-px inline-block px-1  text-xs font-medium text-black text-opacity-60 group-hover:text-opacity-80 group-focus:text-opacity-100 \">{label}</label>\n                                                <input type={type} onChange={(e) => { props.funcion(e.target.value) }} placeholder={props.placeholder} required name={label} id={label} className=\" bg-orange block w-full border-0 p-0 text-black placeholder-black placeholder-opacity-50 focus:ring-0 ring-opacity-0 focus:outline-none sm:text-sm\" />\n                                            </div> : (type === \"textarea\" && contactForm === true) ?\n                                                <div className=\"relative border border-black border-opacity-50 group-hover:border-opacity-70 group-focus:border-opacity-100 rounded-md px-3 py-2 shadow-sm  \">\n                                                    <label htmlFor={label} className=\" bg-orange absolute -top-2 left-2  -mt-px inline-block px-1  text-xs font-medium text-black text-opacity-60 group-hover:text-opacity-80 group-focus:text-opacity-100 \">{label}</label>\n                                                    <textarea placeholder={placeholder} onChange={(e) => { props.funcion(e.target.value) }} name={label} id={label} className=\"bg-orange block w-full border-0 p-0 text-black placeholder-black placeholder-opacity-50 focus:ring-0 ring-opacity-0 focus:outline-none sm:text-sm resize-none\"></textarea>\n                                                </div> : \"\"\n\n            }\n\n        </div>\n\n    )\n}\n\nexport default Input\n","import React, { useEffect, useState } from 'react'\n\n\nconst Alerta = (props) => {\n\n    let { mensaje, tipo, visible, duracion } = props\n\n    const [width, setWidth] = useState(400)\n    useEffect(() => {\n\n        const timer = setTimeout(() => {\n            props.funcion(0)\n        }, duracion);\n        return () => clearTimeout(timer);\n\n    }, [visible]);\n\n    useEffect(() => {\n        var x = window.matchMedia(\"(max-width: 767px)\")\n        if (x.matches) {\n            setWidth(320)\n        } else {\n            setWidth(400)\n        }\n    }, [])\n\n    return (\n        <div className=\"duration-500 fixed  bottom-8 mx-auto\" style={{ width: `${width}px`, left: `calc(50% - ${width / 2}px)`, opacity: `${visible}`, zIndex: 9999999 }}>\n            {(tipo === \"error\") ?\n                <div className=\"rounded-md shadow-sm bg-red-500 w-full p-4 w-10/12 flex flex-row items-center \">\n\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <div className=\"ml-3 w-full\">\n                        <p className=\"text-sm font-medium text-white \">{mensaje}</p>\n                    </div>\n                    <button onClick={() => props.funcion(0)} className=\"flex items-center\"><svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg></button>\n\n                </div> :\n                (tipo === \"loading\") ?\n                    <div className=\"rounded-md shadow-sm bg-blue-500 w-full p-4 w-10/12 flex flex-row items-center \">\n\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                        </svg>\n                        <div className=\"ml-3 w-full\">\n                            <p className=\"text-sm font-medium text-white \">{mensaje}</p>\n                        </div>\n                        <button onClick={() => props.funcion(0)} className=\"flex items-center\"><svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg></button>\n\n                    </div> :\n                    (tipo === \"exito\") ?\n                        <div className=\"rounded-md shadow-sm bg-green-500 w-full p-4 w-10/12 flex flex-row items-center \">\n\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>\n                            <div className=\"ml-3 w-full\">\n                                <p className=\"text-sm font-medium text-white \">{mensaje}</p>\n                            </div>\n                            <button onClick={() => props.funcion(0)} className=\"flex items-center\"><svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg></button>\n\n                        </div> : \"\"\n\n            }\n\n\n        </div>\n\n    )\n}\n\nexport default Alerta\n","import React from 'react'\nimport Lottie from 'react-lottie';\nimport animationData from './files/dotted-line.json'\n\nconst DottedLineLottie = () => {\n\n    const defaultOptions = {\n        loop: false,\n        autoplay: true,\n        animationData: animationData,\n        rendererSettings: {\n        },\n    };\n\n    return (\n        <div>\n            <Lottie options={defaultOptions} />\n        </div>\n    )\n}\n\nexport default DottedLineLottie\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport Input from '../formComponents/Input'\nimport Alerta from '../admin/Alerta'\nimport DottedLineLottie from '../lotties/DottedLineLottie'\nimport { Waypoint } from 'react-waypoint'\n\nconst Form = (props) => {\n    let { url } = props\n\n    const [nombre, setNombre] = useState(\"\")\n    const [mail, setMail] = useState(\"\")\n    const [mensaje, setMensaje] = useState(\"\")\n\n    const [mensajeAlerta, setMensajeAlerta] = useState(\"\")\n    const [visible, setVisible] = useState(0)\n    const [tipoMensaje, setTipoMensaje] = useState(0)\n\n    let [renderLottie, setRenderLottie] = useState(false);\n\n    useEffect(() => {\n        /* validar boton */\n        if (nombre !== \"\" && mail !== \"\" && mensaje !== \"\") {\n            document.getElementById(\"btn-form\").disabled = false;\n            document.getElementById(\"btn-form\").style.opacity = \"1\";\n        } else {\n            document.getElementById(\"btn-form\").disabled = true;\n            document.getElementById(\"btn-form\").style.opacity = \"0.7\";\n        }\n    }, [nombre, mail, mensaje])\n\n\n    const enviarForm = () => {\n        let form = {\n            nombre: nombre,\n            mail: mail,\n            mensaje: mensaje,\n        }\n\n\n        fetch(`${url}/enviarForm`, {\n            method: \"POST\",\n            body: JSON.stringify(form),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(r => r.json())\n            .then(r => {\n                if (r === \"exito\") {\n                    setMensajeAlerta(\"Mensaje enviado con éxito\")\n                    setTipoMensaje(\"exito\")\n                    setVisible(1)\n                } else {\n                    setMensajeAlerta(\"Algo salió mal. Intentá de nuevo.\")\n                    setTipoMensaje(\"error\")\n                    setVisible(1)\n                }\n\n            })\n    }\n\n\n    return (\n        <div className=\"w-full p-4 md:p-0\" style={{ background: \"linear-gradient(180deg, rgba(252,253,254,1) 30%, rgba(23,23,23,1) 30%, rgba(23,23,23,1) 100%)\" }}>\n            <div className=\"w-full md:w-10/12 mx-auto bg-orange md:p-8 rounded-2xl\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 p-4\">\n                    <div className=\"col-span-1 text-left \">\n                        <div className=\"md:hidden col-span-1\">\n                            <img className=\"mx-auto w-full\" srcSet=\"https://res.cloudinary.com/isita/image/upload/v1636937642/static/Group_101_1x_hjfzqp.png 1x,https://res.cloudinary.com/isita/image/upload/v1636937642/static/Group_101_2x_wgjlzg.png 2x\" />\n                        </div>\n                        <h2 className=\" -mt-2 md:mt-0 font-title text-5xl mb-2 lg:mb-0 lg:text-hero relative text-black\">Sumate!\n                            </h2>\n\n                        <p className=\"mt-0 md:-mt-4 font-body text-base md:p-0\">Si querés ser parte del equipo o querés compartir tu historia ponete en contacto con nosotros!</p>\n\n                        <div className=\"mt-4\" >\n                            <Input contactForm={true} type={\"text\"} label={\"Nombre\"} placeholder={\"Escribe tu nombre...\"} funcion={setNombre} />\n                            <Input contactForm={true} type={\"mail\"} label={\"Mail\"} placeholder={\"Escribe tu mail...\"} funcion={setMail} />\n                            <Input contactForm={true} type={\"textarea\"} label={\"Mensaje\"} placeholder={\"Escribe tu mensaje...\"} funcion={setMensaje} />\n\n                            <button onClick={enviarForm} id=\"btn-form\" className=\"text-center block w-full md:w-auto md:inline-block bg-black py-3 px-8 rounded-3xl text-white text-base hover:bg-opacity-80 transition-all\">Enviar</button>\n                        </div>\n\n\n                    </div>\n                    <Alerta tipo={tipoMensaje} mensaje={mensajeAlerta} visible={visible} funcion={setVisible} duracion={2000} />\n\n                    <div className=\"hidden lg:block col-span-1 flex items-center relative\">\n                        <img className=\" absolute top-10\" style={{ left: 'calc(50% - 178px)' }} srcSet=\"https://res.cloudinary.com/isita/image/upload/v1642273813/static/Group_102_1x_bggpue.png 1x,https://res.cloudinary.com/isita/image/upload/v1642273813/static/Group_102_2x_djvjud.png 2x\" />\n                        <div className=\" absolute top-10\" style={{ left: 'calc(50% - 178px)' }}> {renderLottie && <DottedLineLottie />}</div>\n                        <Waypoint onEnter={() => {\n                            setTimeout(() => {\n                                console.log(\"entro\")\n                                setRenderLottie(true)\n                            }, 3000);\n\n                        }\n                        }\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    url: state.url\n\n})\n\n\nexport default connect(mapStateToProps)(Form)","import React, { useState } from 'react';\nimport ReactPlayer from 'react-player'\n\nconst Video = () => {\n\n    const [sonido, setSonido] = useState(0)\n    const toggleSonido = () => {\n\n    }\n    return (\n        <div className=\"relative pt-20 md:pt-0\">\n            <div className=\"absolute bottom-2 left-2 md:bottom-10 md:left-10 z-40\">\n                {sonido === 0 ?\n                    <svg onClick={() => {\n\n                        setSonido(1)\n                    }} xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" clipRule=\"evenodd\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2\" />\n                    </svg> :\n                    <svg onClick={() => { setSonido(0) }} xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" />\n                    </svg>\n                }\n\n\n            </div>\n            <div className=\"md:hidden -mt-20\">\n                <ReactPlayer playing={true} volume={sonido} height=\"auto\" width=\"100%\" loop={true} url='https://res.cloudinary.com/isita/video/upload/v1642283212/static/video_Vertical_uhrb9z.mp4' />\n            </div>\n            <div className=\"hidden md:block\">\n                <ReactPlayer playing={true} volume={sonido} height=\"auto\" width=\"100%\" loop={true} url='https://res.cloudinary.com/isita/video/upload/v1637525748/static/Untitled_sxpxnt.mp4' />\n            </div>\n\n        </div >\n    )\n}\n\nexport default Video\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport SociaVitalicia from './SociaVitalicia'\nimport NuestraGaleria from './NuestraGaleria'\nimport Navbar from './Navbar'\nimport Stats from './Stats'\nimport Footer from './Footer';\nimport Quienes from './Quienes';\nimport Form from './Form';\nimport Video from './Video'\n\nconst Home = (props) => {\n\n    const [navbarBg, setNavbarBg] = useState(\"transparent\");\n\n    useEffect(() => {\n\n\n        window.onscroll = () => {\n            let quienes = document.getElementById(\"quienes\");\n            if (quienes !== undefined && quienes !== null) {\n                let y = quienes.offsetTop;\n                if (window.pageYOffset > y) {\n                    setNavbarBg(\"solid\")\n                } else {\n                    setNavbarBg(\"transparent\")\n                }\n            }\n\n        }\n        if (props.location.aboutProps !== undefined) {\n            console.log(props)\n            let clickeadoId = props.location.aboutProps.id;\n            let clickeado = document.getElementById(clickeadoId);\n            let y = clickeado.offsetTop;\n\n            if (window.matchMedia(\"(max-width: 640px)\")) {\n                y = y - 70;\n            }\n\n            window.scrollTo({ top: y, behavior: 'smooth' })\n            props.location.aboutProps = undefined;\n\n        }\n    })\n\n\n\n    return (\n        <div >\n            <Navbar navbarBg={navbarBg} />\n            <Video onScroll={(e) => { console.log(e) }} />\n            <div id=\"quienes\" >\n                <Quienes onScroll={(e) => { console.log(e) }} />\n                <Stats />\n            </div>\n            <div id=\"sociasVitalicias\">\n                <SociaVitalicia />\n            </div>\n            <div id=\"galeria\">\n                <NuestraGaleria />\n            </div>\n            <div id=\"sumate\">\n                <Form />\n            </div>\n            <Footer />\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\n\nexport default connect(mapStateToProps)(Home)","import React, { useEffect, useRef, useState } from 'react'\nimport Navbar from './Navbar'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { SearchInput, Select } from 'evergreen-ui'\nimport Footer from './Footer'\nimport Input from '../formComponents/Input'\n\nconst Galeria = (props) => {\n\n\n    let { albums, deportes } = props;\n\n    const [anios, setAnios] = useState([])\n    const [albumsFiltrados, setAlbumsFiltrados] = useState([])\n\n    const [titulo, setTitulo] = useState(\"\")\n    const [deporte, setDeporte] = useState(\"todos\")\n    const [anio, setAnio] = useState(\"todos\")\n\n\n    useEffect(() => {\n\n        let aniosAux = []\n\n        for (let i = 0; i < albums.length; i++) {\n            let anio = albums[i].fecha.substring(0, 4)\n\n            if (aniosAux.length === 0) {\n                aniosAux = [...aniosAux, { \"_id\": anio, \"nombre\": anio }]\n            } else {\n                console.log(anio)\n                let existe = false\n                for (let ii = 0; ii < aniosAux.length; ii++) {\n                    if (anio === aniosAux[ii].nombre) {\n                        existe = true\n                    }\n                }\n                if (existe === false) {\n                    aniosAux = [...aniosAux, { \"_id\": anio, \"nombre\": anio }]\n                }\n            }\n        }\n        aniosAux.sort(function (a, b) {\n            return parseInt(a._id) - parseInt(b._id);\n        });\n\n        setAnios(aniosAux)\n        setAlbumsFiltrados(albums)\n\n    }, [albums])\n\n    useEffect(() => {\n        filtrar()\n    }, [titulo, deporte, anio])\n\n    const buscarPorDeporte = (recibido) => {\n        setDeporte(recibido);\n        filtrar()\n    }\n\n    const buscarPorAnio = (recibido) => {\n        console.log(recibido)\n        setAnio(recibido);\n        filtrar()\n    }\n    const buscarPorTitulo = (recibido) => {\n        console.log(recibido)\n        setTitulo(recibido);\n        filtrar()\n    }\n\n    const convertirAString = (fecha) => {\n\n        let aux = new Date(fecha);\n\n        let dia = aux.getDate();\n        if (dia < 10) {\n            dia = `0${dia}`\n        }\n        let mes = aux.getMonth() + 1;\n        if (mes < 10) {\n            mes = `0${mes}`\n        }\n        let anio = aux.getFullYear();\n\n        let fechaString = `${dia}.${mes}.${anio}`\n        return (fechaString)\n\n    }\n\n    const filtrar = () => {\n        let filtro = albums.filter(album => album.titulo.toLowerCase().includes(titulo.toLowerCase()))\n        if (deporte !== \"todos\") {\n            filtro = filtro.filter(album => album.deporte === deporte)\n        }\n\n        if (anio !== \"todos\") {\n            filtro = filtro.filter(album => album.fecha.includes(anio))\n        }\n        setAlbumsFiltrados(filtro);\n\n    }\n\n    return (\n        <div>\n            <Navbar navbarBg={\"solid\"} />\n            {/* filtros */}\n            <div style={{ paddingTop: '88px', minHeight: \"calc(100vh - 200px)\" }} >\n                <div className=\"bg-white  py-2 items-center\">\n                    <div className=\"w-10/12 mx-auto grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 md:gap-8 \">\n\n                        <div className=\"col-span-1\">\n                            <Input type={\"search\"} label={\"Buscar Partido...\"} funcion={buscarPorTitulo} />\n                        </div>\n                        <div className=\"col-span-1\">\n                            <Input type={\"select\"} opciones={deportes} funcion={buscarPorDeporte} defaultValue={\"Todos los deportes\"} />\n                        </div>\n                        <div className=\"col-span-1\">\n                            <Input type={\"select\"} opciones={anios} funcion={buscarPorAnio} defaultValue={\"Todos los años\"} />\n                        </div>\n\n\n                    </div>\n\n                </div>\n\n                <div className=\"w-10/12 grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 md:gap-8 mx-auto pt-3 pb-8\">\n\n                    {albumsFiltrados.map(a => <div className=\"col-span-1 text-center font-body font-semibold\" key={a._id}> <NavLink to={{ pathname: '/ampliacion', aboutProps: { album: a } }}><div className=\"h-40 mb-2\" style={{ background: `url(${a.fotos[0].source})  center/cover` }} ></div>\n                        {deportes.map(d => (d._id === a.deporte) ? <p key={d._id} className=\"text-xs tracking-wide opacity-75 uppercase\">{d.nombre}</p> : \"\")}\n                        <p className=\"text-base font-semibold\">{a.titulo}</p>\n                        <p className=\"text-sm font-normal opacity-75\">{convertirAString(a.fecha)}</p>\n\n                    </NavLink></div>)}\n                </div>\n            </div>\n            <Footer />\n        </div >\n\n\n    )\n}\nconst mapStateToProps = (state) => ({\n    albums: state.albums,\n    deportes: state.deportes,\n\n})\n\n\nexport default connect(mapStateToProps)(Galeria)","import React, { useState, useEffect } from 'react'\nimport { ArrowLeftIcon, ArrowRightIcon } from 'evergreen-ui'\nimport Footer from './Footer'\nconst AmpliacionFoto = (props) => {\n\n    console.log(props)\n    let fotoActual = props.fotoActual\n    let fotos = props.fotos\n    const [posActual, setPosActual] = useState(0)\n\n\n    /* saber que foto se amplio */\n    useEffect(() => {\n\n        for (let i = 0; i < fotos.length; i++) {\n            if (fotoActual === fotos[i].source\n            ) {\n                console.log(i)\n                setPosActual(i)\n            }\n        }\n    }, [])\n\n    const cerrar = () => {\n        props.cerrarFotoPadre()\n    }\n\n    return (\n        <div>\n            <svg className=\" h-6 w-6 z-70 fixed top-4 right-4 text-white stroke-current\" onClick={cerrar} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n            <div className=\"h-full w-full fixed top-0 z-60 bg-black bg-opacity-80 flex items-center justify-center\">\n\n                <ArrowLeftIcon color=\"white\" onClick={() => { (posActual > 0) ? setPosActual(posActual - 1) : setPosActual(fotos.length - 1) }} />\n                <img className=\" mx-2 md:mx-12 w-9/12 md:w-1/2 \" alt=\"Foto del partido\" src={fotos[posActual].source} />\n                <ArrowRightIcon color=\"white\" onClick={() => { (posActual !== fotos.length - 1) ? setPosActual(posActual + 1) : setPosActual(0) }} />\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default AmpliacionFoto\n","import React, { useState } from 'react'\nimport Navbar from './Navbar'\nimport { connect } from 'react-redux'\nimport AmpliacionFoto from './AmpliacionFoto'\nimport { ArrowLeftIcon } from 'evergreen-ui'\nimport Footer from './Footer'\nimport { useHistory } from \"react-router-dom\";\nimport { NavLink } from 'react-router-dom'\n\nconst Ampliacion = (props) => {\n\n    let history = useHistory();\n\n    const [fotoSeleccionada, setFotoSeleccionada] = useState(\"\")\n    const [ampliacionEstado, setAmpliacionEstado] = useState(\"none\")\n\n    let album\n    let { deportes, albums } = props\n\n    if (props.location.aboutProps !== undefined) {\n        album = props.location.aboutProps.album;\n        console.log(album)\n\n    } else {\n        history.push(\"/galeria\")\n    }\n\n    const convertirAString = (fecha) => {\n\n        let aux = new Date(fecha);\n\n        let dia = aux.getDate();\n        if (dia < 10) {\n            dia = `0${dia}`\n        }\n        let mes = aux.getMonth() + 1;\n        if (mes < 10) {\n            mes = `0${mes}`\n        }\n        let anio = aux.getFullYear();\n\n        let fechaString = `${dia}.${mes}.${anio}`\n        return (fechaString)\n\n    }\n\n    const cerrarFoto = () => {\n        setFotoSeleccionada(\"\");\n    }\n\n    return (\n        <div>\n            <Navbar navbarBg={\"solid\"} />\n            {(props.location.aboutProps !== undefined) ?\n                <div className=\"relative w-10/12 mx-auto\" style={{ paddingTop: '88px', minHeight: \"calc(100vh - 200px)\" }}>\n                    <svg className=\"absolute -z-10 -right-10 top-32\" xmlns=\"http://www.w3.org/2000/svg\" width=\"111\" height=\"203\" viewBox=\"0 0 111 203\" fill=\"none\">\n                        <path d=\"M109.17 3C108.342 3 107.67 2.32843 107.67 1.5C107.67 0.671578 108.342 4.67019e-06 109.17 4.7064e-06C109.998 4.74261e-06 110.67 0.671578 110.67 1.5C110.67 2.32843 109.998 3 109.17 3Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 3C92.9601 3 92.2885 2.32843 92.2885 1.5C92.2885 0.671577 92.9601 3.99785e-06 93.7885 4.03406e-06C94.617 4.07027e-06 95.2885 0.671577 95.2885 1.5C95.2885 2.32843 94.617 3 93.7885 3Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 3C77.5787 3 76.9071 2.32843 76.9071 1.5C76.9071 0.671576 77.5787 3.3255e-06 78.4071 3.36172e-06C79.2355 3.39793e-06 79.9071 0.671576 79.9071 1.5C79.9071 2.32843 79.2355 3 78.4071 3Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 3C62.1973 3 61.5257 2.32843 61.5257 1.5C61.5257 0.671575 62.1973 2.65316e-06 63.0257 2.68937e-06C63.8541 2.72559e-06 64.5257 0.671576 64.5257 1.5C64.5257 2.32843 63.8541 3 63.0257 3Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 3C46.8159 3 46.1443 2.32843 46.1443 1.5C46.1443 0.671575 46.8159 1.98082e-06 47.6443 2.01703e-06C48.4727 2.05324e-06 49.1443 0.671575 49.1443 1.5C49.1443 2.32843 48.4727 3 47.6443 3Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 3C31.4344 3 30.7629 2.32843 30.7629 1.5C30.7629 0.671574 31.4344 1.30848e-06 32.2629 1.34469e-06C33.0913 1.3809e-06 33.7629 0.671574 33.7629 1.5C33.7629 2.32843 33.0913 3 32.2629 3Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 3C16.053 3 15.3814 2.32843 15.3814 1.5C15.3814 0.671573 16.053 6.36132e-07 16.8814 6.72344e-07C17.7099 7.08555e-07 18.3814 0.671574 18.3814 1.5C18.3814 2.32843 17.7099 3 16.8814 3Z\" fill=\"#171717\" />\n                        <path d=\"M1.50001 3C0.671582 3 8.70425e-06 2.32843 8.74046e-06 1.5C8.77667e-06 0.671573 0.671582 -3.62117e-08 1.50001 0C2.32844 3.62117e-08 3.00001 0.671573 3.00001 1.5C3.00001 2.32843 2.32844 3 1.50001 3Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 18.3814C108.342 18.3814 107.67 17.7099 107.67 16.8814C107.67 16.053 108.342 15.3814 109.17 15.3814C109.998 15.3814 110.67 16.053 110.67 16.8814C110.67 17.7099 109.998 18.3814 109.17 18.3814Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 18.3814C92.9601 18.3814 92.2885 17.7099 92.2885 16.8814C92.2885 16.053 92.9601 15.3814 93.7885 15.3814C94.617 15.3814 95.2885 16.053 95.2885 16.8814C95.2885 17.7099 94.617 18.3814 93.7885 18.3814Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 18.3814C77.5787 18.3814 76.9071 17.7099 76.9071 16.8814C76.9071 16.053 77.5787 15.3814 78.4071 15.3814C79.2355 15.3814 79.9071 16.053 79.9071 16.8814C79.9071 17.7099 79.2355 18.3814 78.4071 18.3814Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 18.3814C62.1973 18.3814 61.5257 17.7098 61.5257 16.8814C61.5257 16.053 62.1973 15.3814 63.0257 15.3814C63.8541 15.3814 64.5257 16.053 64.5257 16.8814C64.5257 17.7098 63.8541 18.3814 63.0257 18.3814Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 18.3814C46.8159 18.3814 46.1443 17.7098 46.1443 16.8814C46.1443 16.053 46.8159 15.3814 47.6443 15.3814C48.4727 15.3814 49.1443 16.053 49.1443 16.8814C49.1443 17.7098 48.4727 18.3814 47.6443 18.3814Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 18.3814C31.4344 18.3814 30.7629 17.7098 30.7629 16.8814C30.7629 16.053 31.4344 15.3814 32.2629 15.3814C33.0913 15.3814 33.7629 16.053 33.7629 16.8814C33.7629 17.7098 33.0913 18.3814 32.2629 18.3814Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 18.3814C16.053 18.3814 15.3814 17.7098 15.3814 16.8814C15.3814 16.053 16.053 15.3814 16.8814 15.3814C17.7099 15.3814 18.3814 16.053 18.3814 16.8814C18.3814 17.7098 17.7099 18.3814 16.8814 18.3814Z\" fill=\"#171717\" />\n                        <path d=\"M1.50001 18.3814C0.671581 18.3814 8.03191e-06 17.7098 8.06812e-06 16.8814C8.10433e-06 16.053 0.671581 15.3814 1.50001 15.3814C2.32844 15.3814 3.00001 16.053 3.00001 16.8814C3.00001 17.7098 2.32844 18.3814 1.50001 18.3814Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 33.7628C108.342 33.7628 107.67 33.0913 107.67 32.2628C107.67 31.4344 108.342 30.7628 109.17 30.7628C109.998 30.7628 110.67 31.4344 110.67 32.2628C110.67 33.0913 109.998 33.7628 109.17 33.7628Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 33.7628C92.9601 33.7628 92.2885 33.0913 92.2885 32.2628C92.2885 31.4344 92.9601 30.7628 93.7885 30.7628C94.617 30.7628 95.2885 31.4344 95.2885 32.2628C95.2885 33.0913 94.617 33.7628 93.7885 33.7628Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 33.7628C77.5787 33.7628 76.9071 33.0913 76.9071 32.2628C76.9071 31.4344 77.5787 30.7628 78.4071 30.7628C79.2355 30.7628 79.9071 31.4344 79.9071 32.2628C79.9071 33.0913 79.2355 33.7628 78.4071 33.7628Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 33.7628C62.1973 33.7628 61.5257 33.0913 61.5257 32.2628C61.5257 31.4344 62.1973 30.7628 63.0257 30.7628C63.8541 30.7628 64.5257 31.4344 64.5257 32.2628C64.5257 33.0913 63.8541 33.7628 63.0257 33.7628Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 33.7628C46.8159 33.7628 46.1443 33.0913 46.1443 32.2628C46.1443 31.4344 46.8159 30.7628 47.6443 30.7628C48.4727 30.7628 49.1443 31.4344 49.1443 32.2628C49.1443 33.0913 48.4727 33.7628 47.6443 33.7628Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 33.7628C31.4344 33.7628 30.7629 33.0913 30.7629 32.2628C30.7629 31.4344 31.4344 30.7628 32.2629 30.7628C33.0913 30.7628 33.7629 31.4344 33.7629 32.2628C33.7629 33.0913 33.0913 33.7628 32.2629 33.7628Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 33.7628C16.053 33.7628 15.3814 33.0913 15.3814 32.2628C15.3814 31.4344 16.053 30.7628 16.8814 30.7628C17.7099 30.7628 18.3814 31.4344 18.3814 32.2628C18.3814 33.0913 17.7099 33.7628 16.8814 33.7628Z\" fill=\"#171717\" />\n                        <path d=\"M1.50001 33.7628C0.67158 33.7628 7.35957e-06 33.0913 7.39578e-06 32.2628C7.43199e-06 31.4344 0.67158 30.7628 1.50001 30.7628C2.32843 30.7628 3.00001 31.4344 3.00001 32.2628C3.00001 33.0913 2.32843 33.7628 1.50001 33.7628Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 49.1443C108.342 49.1443 107.67 48.4727 107.67 47.6443C107.67 46.8158 108.342 46.1443 109.17 46.1443C109.998 46.1443 110.67 46.8158 110.67 47.6443C110.67 48.4727 109.998 49.1443 109.17 49.1443Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 49.1443C92.9601 49.1443 92.2885 48.4727 92.2885 47.6443C92.2885 46.8158 92.9601 46.1443 93.7885 46.1443C94.617 46.1443 95.2885 46.8158 95.2885 47.6443C95.2885 48.4727 94.617 49.1443 93.7885 49.1443Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 49.1443C77.5787 49.1443 76.9071 48.4727 76.9071 47.6443C76.9071 46.8158 77.5787 46.1443 78.4071 46.1443C79.2355 46.1443 79.9071 46.8158 79.9071 47.6443C79.9071 48.4727 79.2355 49.1443 78.4071 49.1443Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 49.1443C62.1973 49.1443 61.5257 48.4727 61.5257 47.6443C61.5257 46.8158 62.1973 46.1443 63.0257 46.1443C63.8541 46.1443 64.5257 46.8158 64.5257 47.6443C64.5257 48.4727 63.8541 49.1443 63.0257 49.1443Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 49.1443C46.8159 49.1443 46.1443 48.4727 46.1443 47.6443C46.1443 46.8158 46.8159 46.1443 47.6443 46.1443C48.4727 46.1443 49.1443 46.8158 49.1443 47.6443C49.1443 48.4727 48.4727 49.1443 47.6443 49.1443Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 49.1443C31.4344 49.1443 30.7629 48.4727 30.7629 47.6443C30.7629 46.8158 31.4344 46.1443 32.2629 46.1443C33.0913 46.1443 33.7629 46.8158 33.7629 47.6443C33.7629 48.4727 33.0913 49.1443 32.2629 49.1443Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 49.1443C16.053 49.1443 15.3814 48.4727 15.3814 47.6443C15.3814 46.8158 16.053 46.1443 16.8814 46.1443C17.7099 46.1443 18.3814 46.8158 18.3814 47.6443C18.3814 48.4727 17.7099 49.1443 16.8814 49.1443Z\" fill=\"#171717\" />\n                        <path d=\"M1.50001 49.1443C0.67158 49.1443 6.68722e-06 48.4727 6.72343e-06 47.6443C6.75965e-06 46.8158 0.67158 46.1443 1.50001 46.1443C2.32843 46.1443 3.00001 46.8158 3.00001 47.6443C3.00001 48.4727 2.32843 49.1443 1.50001 49.1443Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 64.5257C108.342 64.5257 107.67 63.8541 107.67 63.0257C107.67 62.1973 108.342 61.5257 109.17 61.5257C109.998 61.5257 110.67 62.1973 110.67 63.0257C110.67 63.8541 109.998 64.5257 109.17 64.5257Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 64.5257C92.9601 64.5257 92.2885 63.8541 92.2885 63.0257C92.2885 62.1973 92.9601 61.5257 93.7885 61.5257C94.617 61.5257 95.2885 62.1973 95.2885 63.0257C95.2885 63.8541 94.617 64.5257 93.7885 64.5257Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 64.5257C77.5787 64.5257 76.9071 63.8541 76.9071 63.0257C76.9071 62.1973 77.5787 61.5257 78.4071 61.5257C79.2355 61.5257 79.9071 62.1973 79.9071 63.0257C79.9071 63.8541 79.2355 64.5257 78.4071 64.5257Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 64.5257C62.1973 64.5257 61.5257 63.8541 61.5257 63.0257C61.5257 62.1973 62.1973 61.5257 63.0257 61.5257C63.8541 61.5257 64.5257 62.1973 64.5257 63.0257C64.5257 63.8541 63.8541 64.5257 63.0257 64.5257Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 64.5257C46.8159 64.5257 46.1443 63.8541 46.1443 63.0257C46.1443 62.1973 46.8159 61.5257 47.6443 61.5257C48.4727 61.5257 49.1443 62.1973 49.1443 63.0257C49.1443 63.8541 48.4727 64.5257 47.6443 64.5257Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 64.5257C31.4344 64.5257 30.7629 63.8541 30.7629 63.0257C30.7629 62.1973 31.4344 61.5257 32.2629 61.5257C33.0913 61.5257 33.7629 62.1973 33.7629 63.0257C33.7629 63.8541 33.0913 64.5257 32.2629 64.5257Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 64.5257C16.053 64.5257 15.3814 63.8541 15.3814 63.0257C15.3814 62.1973 16.053 61.5257 16.8814 61.5257C17.7099 61.5257 18.3814 62.1973 18.3814 63.0257C18.3814 63.8541 17.7099 64.5257 16.8814 64.5257Z\" fill=\"#171717\" />\n                        <path d=\"M1.50001 64.5257C0.671579 64.5257 6.01488e-06 63.8541 6.05109e-06 63.0257C6.0873e-06 62.1973 0.671579 61.5257 1.50001 61.5257C2.32843 61.5257 3.00001 62.1973 3.00001 63.0257C3.00001 63.8541 2.32843 64.5257 1.50001 64.5257Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 79.9071C108.342 79.9071 107.67 79.2355 107.67 78.4071C107.67 77.5787 108.342 76.9071 109.17 76.9071C109.998 76.9071 110.67 77.5787 110.67 78.4071C110.67 79.2355 109.998 79.9071 109.17 79.9071Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 79.9071C92.9601 79.9071 92.2885 79.2355 92.2885 78.4071C92.2885 77.5787 92.9601 76.9071 93.7885 76.9071C94.617 76.9071 95.2885 77.5787 95.2885 78.4071C95.2885 79.2355 94.617 79.9071 93.7885 79.9071Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 79.9071C77.5787 79.9071 76.9071 79.2355 76.9071 78.4071C76.9071 77.5787 77.5787 76.9071 78.4071 76.9071C79.2355 76.9071 79.9071 77.5787 79.9071 78.4071C79.9071 79.2355 79.2355 79.9071 78.4071 79.9071Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 79.9071C62.1973 79.9071 61.5257 79.2355 61.5257 78.4071C61.5257 77.5787 62.1973 76.9071 63.0257 76.9071C63.8541 76.9071 64.5257 77.5787 64.5257 78.4071C64.5257 79.2355 63.8541 79.9071 63.0257 79.9071Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 79.9071C46.8158 79.9071 46.1443 79.2355 46.1443 78.4071C46.1443 77.5787 46.8158 76.9071 47.6443 76.9071C48.4727 76.9071 49.1443 77.5787 49.1443 78.4071C49.1443 79.2355 48.4727 79.9071 47.6443 79.9071Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 79.9071C31.4344 79.9071 30.7629 79.2355 30.7629 78.4071C30.7629 77.5787 31.4344 76.9071 32.2629 76.9071C33.0913 76.9071 33.7629 77.5787 33.7629 78.4071C33.7629 79.2355 33.0913 79.9071 32.2629 79.9071Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 79.9071C16.053 79.9071 15.3814 79.2355 15.3814 78.4071C15.3814 77.5787 16.053 76.9071 16.8814 76.9071C17.7099 76.9071 18.3814 77.5787 18.3814 78.4071C18.3814 79.2355 17.7099 79.9071 16.8814 79.9071Z\" fill=\"#171717\" />\n                        <path d=\"M1.50001 79.9071C0.671578 79.9071 5.34254e-06 79.2355 5.37875e-06 78.4071C5.41496e-06 77.5787 0.671578 76.9071 1.50001 76.9071C2.32843 76.9071 3.00001 77.5787 3.00001 78.4071C3.00001 79.2355 2.32843 79.9071 1.50001 79.9071Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 95.2885C108.342 95.2885 107.67 94.617 107.67 93.7885C107.67 92.9601 108.342 92.2885 109.17 92.2885C109.998 92.2885 110.67 92.9601 110.67 93.7885C110.67 94.617 109.998 95.2885 109.17 95.2885Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 95.2885C92.9601 95.2885 92.2885 94.617 92.2885 93.7885C92.2885 92.9601 92.9601 92.2885 93.7885 92.2885C94.617 92.2885 95.2885 92.9601 95.2885 93.7885C95.2885 94.617 94.617 95.2885 93.7885 95.2885Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 95.2885C77.5787 95.2885 76.9071 94.617 76.9071 93.7885C76.9071 92.9601 77.5787 92.2885 78.4071 92.2885C79.2355 92.2885 79.9071 92.9601 79.9071 93.7885C79.9071 94.617 79.2355 95.2885 78.4071 95.2885Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 95.2885C62.1973 95.2885 61.5257 94.617 61.5257 93.7885C61.5257 92.9601 62.1973 92.2885 63.0257 92.2885C63.8541 92.2885 64.5257 92.9601 64.5257 93.7885C64.5257 94.617 63.8541 95.2885 63.0257 95.2885Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 95.2885C46.8158 95.2885 46.1443 94.617 46.1443 93.7885C46.1443 92.9601 46.8158 92.2885 47.6443 92.2885C48.4727 92.2885 49.1443 92.9601 49.1443 93.7885C49.1443 94.617 48.4727 95.2885 47.6443 95.2885Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 95.2885C31.4344 95.2885 30.7629 94.617 30.7629 93.7885C30.7629 92.9601 31.4344 92.2885 32.2629 92.2885C33.0913 92.2885 33.7629 92.9601 33.7629 93.7885C33.7629 94.617 33.0913 95.2885 32.2629 95.2885Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 95.2885C16.053 95.2885 15.3814 94.617 15.3814 93.7885C15.3814 92.9601 16.053 92.2885 16.8814 92.2885C17.7099 92.2885 18.3814 92.9601 18.3814 93.7885C18.3814 94.617 17.7099 95.2885 16.8814 95.2885Z\" fill=\"#171717\" />\n                        <path d=\"M1.5 95.2885C0.671578 95.2885 4.67019e-06 94.617 4.7064e-06 93.7885C4.74262e-06 92.9601 0.671578 92.2885 1.5 92.2885C2.32843 92.2885 3 92.9601 3 93.7885C3 94.617 2.32843 95.2885 1.5 95.2885Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 110.67C108.342 110.67 107.67 109.998 107.67 109.17C107.67 108.342 108.342 107.67 109.17 107.67C109.998 107.67 110.67 108.342 110.67 109.17C110.67 109.998 109.998 110.67 109.17 110.67Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 110.67C92.9601 110.67 92.2885 109.998 92.2885 109.17C92.2885 108.342 92.9601 107.67 93.7885 107.67C94.617 107.67 95.2885 108.342 95.2885 109.17C95.2885 109.998 94.617 110.67 93.7885 110.67Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 110.67C77.5787 110.67 76.9071 109.998 76.9071 109.17C76.9071 108.342 77.5787 107.67 78.4071 107.67C79.2355 107.67 79.9071 108.342 79.9071 109.17C79.9071 109.998 79.2355 110.67 78.4071 110.67Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 110.67C62.1973 110.67 61.5257 109.998 61.5257 109.17C61.5257 108.342 62.1973 107.67 63.0257 107.67C63.8541 107.67 64.5257 108.342 64.5257 109.17C64.5257 109.998 63.8541 110.67 63.0257 110.67Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 110.67C46.8158 110.67 46.1443 109.998 46.1443 109.17C46.1443 108.342 46.8158 107.67 47.6443 107.67C48.4727 107.67 49.1443 108.342 49.1443 109.17C49.1443 109.998 48.4727 110.67 47.6443 110.67Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 110.67C31.4344 110.67 30.7629 109.998 30.7629 109.17C30.7629 108.342 31.4344 107.67 32.2629 107.67C33.0913 107.67 33.7629 108.342 33.7629 109.17C33.7629 109.998 33.0913 110.67 32.2629 110.67Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 110.67C16.053 110.67 15.3814 109.998 15.3814 109.17C15.3814 108.342 16.053 107.67 16.8814 107.67C17.7099 107.67 18.3814 108.342 18.3814 109.17C18.3814 109.998 17.7099 110.67 16.8814 110.67Z\" fill=\"#171717\" />\n                        <path d=\"M1.5 110.67C0.671577 110.67 3.99785e-06 109.998 4.03406e-06 109.17C4.07027e-06 108.342 0.671577 107.67 1.5 107.67C2.32843 107.67 3 108.342 3 109.17C3 109.998 2.32843 110.67 1.5 110.67Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 126.051C108.342 126.051 107.67 125.38 107.67 124.551C107.67 123.723 108.342 123.051 109.17 123.051C109.998 123.051 110.67 123.723 110.67 124.551C110.67 125.38 109.998 126.051 109.17 126.051Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 126.051C92.9601 126.051 92.2885 125.38 92.2885 124.551C92.2885 123.723 92.9601 123.051 93.7885 123.051C94.617 123.051 95.2885 123.723 95.2885 124.551C95.2885 125.38 94.617 126.051 93.7885 126.051Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 126.051C77.5787 126.051 76.9071 125.38 76.9071 124.551C76.9071 123.723 77.5787 123.051 78.4071 123.051C79.2355 123.051 79.9071 123.723 79.9071 124.551C79.9071 125.38 79.2355 126.051 78.4071 126.051Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 126.051C62.1973 126.051 61.5257 125.38 61.5257 124.551C61.5257 123.723 62.1973 123.051 63.0257 123.051C63.8541 123.051 64.5257 123.723 64.5257 124.551C64.5257 125.38 63.8541 126.051 63.0257 126.051Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 126.051C46.8158 126.051 46.1443 125.38 46.1443 124.551C46.1443 123.723 46.8158 123.051 47.6443 123.051C48.4727 123.051 49.1443 123.723 49.1443 124.551C49.1443 125.38 48.4727 126.051 47.6443 126.051Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 126.051C31.4344 126.051 30.7629 125.38 30.7629 124.551C30.7629 123.723 31.4344 123.051 32.2629 123.051C33.0913 123.051 33.7629 123.723 33.7629 124.551C33.7629 125.38 33.0913 126.051 32.2629 126.051Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 126.051C16.053 126.051 15.3814 125.38 15.3814 124.551C15.3814 123.723 16.053 123.051 16.8814 123.051C17.7099 123.051 18.3814 123.723 18.3814 124.551C18.3814 125.38 17.7099 126.051 16.8814 126.051Z\" fill=\"#171717\" />\n                        <path d=\"M1.5 126.051C0.671576 126.051 3.32551e-06 125.38 3.36172e-06 124.551C3.39793e-06 123.723 0.671576 123.051 1.5 123.051C2.32843 123.051 3 123.723 3 124.551C3 125.38 2.32843 126.051 1.5 126.051Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 141.433C108.342 141.433 107.67 140.761 107.67 139.933C107.67 139.104 108.342 138.433 109.17 138.433C109.998 138.433 110.67 139.104 110.67 139.933C110.67 140.761 109.998 141.433 109.17 141.433Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 141.433C92.9601 141.433 92.2885 140.761 92.2885 139.933C92.2885 139.104 92.9601 138.433 93.7885 138.433C94.617 138.433 95.2885 139.104 95.2885 139.933C95.2885 140.761 94.617 141.433 93.7885 141.433Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 141.433C77.5787 141.433 76.9071 140.761 76.9071 139.933C76.9071 139.104 77.5787 138.433 78.4071 138.433C79.2355 138.433 79.9071 139.104 79.9071 139.933C79.9071 140.761 79.2355 141.433 78.4071 141.433Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 141.433C62.1973 141.433 61.5257 140.761 61.5257 139.933C61.5257 139.104 62.1973 138.433 63.0257 138.433C63.8541 138.433 64.5257 139.104 64.5257 139.933C64.5257 140.761 63.8541 141.433 63.0257 141.433Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 141.433C46.8158 141.433 46.1443 140.761 46.1443 139.933C46.1443 139.104 46.8158 138.433 47.6443 138.433C48.4727 138.433 49.1443 139.104 49.1443 139.933C49.1443 140.761 48.4727 141.433 47.6443 141.433Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 141.433C31.4344 141.433 30.7628 140.761 30.7628 139.933C30.7628 139.104 31.4344 138.433 32.2629 138.433C33.0913 138.433 33.7629 139.104 33.7629 139.933C33.7629 140.761 33.0913 141.433 32.2629 141.433Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 141.433C16.053 141.433 15.3814 140.761 15.3814 139.933C15.3814 139.104 16.053 138.433 16.8814 138.433C17.7099 138.433 18.3814 139.104 18.3814 139.933C18.3814 140.761 17.7099 141.433 16.8814 141.433Z\" fill=\"#171717\" />\n                        <path d=\"M1.5 141.433C0.671576 141.433 2.65316e-06 140.761 2.68937e-06 139.933C2.72559e-06 139.104 0.671576 138.433 1.5 138.433C2.32843 138.433 3 139.104 3 139.933C3 140.761 2.32843 141.433 1.5 141.433Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 156.814C108.342 156.814 107.67 156.143 107.67 155.314C107.67 154.486 108.342 153.814 109.17 153.814C109.998 153.814 110.67 154.486 110.67 155.314C110.67 156.143 109.998 156.814 109.17 156.814Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 156.814C92.9601 156.814 92.2885 156.143 92.2885 155.314C92.2885 154.486 92.9601 153.814 93.7885 153.814C94.617 153.814 95.2885 154.486 95.2885 155.314C95.2885 156.143 94.617 156.814 93.7885 156.814Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 156.814C77.5787 156.814 76.9071 156.143 76.9071 155.314C76.9071 154.486 77.5787 153.814 78.4071 153.814C79.2355 153.814 79.9071 154.486 79.9071 155.314C79.9071 156.143 79.2355 156.814 78.4071 156.814Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 156.814C62.1973 156.814 61.5257 156.143 61.5257 155.314C61.5257 154.486 62.1973 153.814 63.0257 153.814C63.8541 153.814 64.5257 154.486 64.5257 155.314C64.5257 156.143 63.8541 156.814 63.0257 156.814Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 156.814C46.8158 156.814 46.1443 156.143 46.1443 155.314C46.1443 154.486 46.8158 153.814 47.6443 153.814C48.4727 153.814 49.1443 154.486 49.1443 155.314C49.1443 156.143 48.4727 156.814 47.6443 156.814Z\" fill=\"#171717\" />\n                        <path d=\"M32.2629 156.814C31.4344 156.814 30.7628 156.143 30.7628 155.314C30.7628 154.486 31.4344 153.814 32.2629 153.814C33.0913 153.814 33.7629 154.486 33.7629 155.314C33.7629 156.143 33.0913 156.814 32.2629 156.814Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 156.814C16.053 156.814 15.3814 156.143 15.3814 155.314C15.3814 154.486 16.053 153.814 16.8814 153.814C17.7099 153.814 18.3814 154.486 18.3814 155.314C18.3814 156.143 17.7099 156.814 16.8814 156.814Z\" fill=\"#171717\" />\n                        <path d=\"M1.5 156.814C0.671575 156.814 1.98082e-06 156.143 2.01703e-06 155.314C2.05324e-06 154.486 0.671575 153.814 1.5 153.814C2.32843 153.814 3 154.486 3 155.314C3 156.143 2.32843 156.814 1.5 156.814Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 172.196C108.342 172.196 107.67 171.524 107.67 170.696C107.67 169.867 108.342 169.196 109.17 169.196C109.998 169.196 110.67 169.867 110.67 170.696C110.67 171.524 109.998 172.196 109.17 172.196Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 172.196C92.9601 172.196 92.2885 171.524 92.2885 170.696C92.2885 169.867 92.9601 169.196 93.7885 169.196C94.617 169.196 95.2885 169.867 95.2885 170.696C95.2885 171.524 94.617 172.196 93.7885 172.196Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 172.196C77.5787 172.196 76.9071 171.524 76.9071 170.696C76.9071 169.867 77.5787 169.196 78.4071 169.196C79.2355 169.196 79.9071 169.867 79.9071 170.696C79.9071 171.524 79.2355 172.196 78.4071 172.196Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 172.196C62.1973 172.196 61.5257 171.524 61.5257 170.696C61.5257 169.867 62.1973 169.196 63.0257 169.196C63.8541 169.196 64.5257 169.867 64.5257 170.696C64.5257 171.524 63.8541 172.196 63.0257 172.196Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 172.196C46.8158 172.196 46.1443 171.524 46.1443 170.696C46.1443 169.867 46.8158 169.196 47.6443 169.196C48.4727 169.196 49.1443 169.867 49.1443 170.696C49.1443 171.524 48.4727 172.196 47.6443 172.196Z\" fill=\"#171717\" />\n                        <path d=\"M32.2628 172.196C31.4344 172.196 30.7628 171.524 30.7628 170.696C30.7628 169.867 31.4344 169.196 32.2628 169.196C33.0913 169.196 33.7628 169.867 33.7628 170.696C33.7628 171.524 33.0913 172.196 32.2628 172.196Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 172.196C16.053 172.196 15.3814 171.524 15.3814 170.696C15.3814 169.867 16.053 169.196 16.8814 169.196C17.7099 169.196 18.3814 169.867 18.3814 170.696C18.3814 171.524 17.7099 172.196 16.8814 172.196Z\" fill=\"#171717\" />\n                        <path d=\"M1.5 172.196C0.671574 172.196 1.30848e-06 171.524 1.34469e-06 170.696C1.3809e-06 169.867 0.671574 169.196 1.5 169.196C2.32843 169.196 3 169.867 3 170.696C3 171.524 2.32843 172.196 1.5 172.196Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 187.577C108.342 187.577 107.67 186.905 107.67 186.077C107.67 185.249 108.342 184.577 109.17 184.577C109.998 184.577 110.67 185.249 110.67 186.077C110.67 186.905 109.998 187.577 109.17 187.577Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 187.577C92.9601 187.577 92.2885 186.905 92.2885 186.077C92.2885 185.249 92.9601 184.577 93.7885 184.577C94.617 184.577 95.2885 185.249 95.2885 186.077C95.2885 186.905 94.617 187.577 93.7885 187.577Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 187.577C77.5787 187.577 76.9071 186.905 76.9071 186.077C76.9071 185.249 77.5787 184.577 78.4071 184.577C79.2355 184.577 79.9071 185.249 79.9071 186.077C79.9071 186.905 79.2355 187.577 78.4071 187.577Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 187.577C62.1973 187.577 61.5257 186.905 61.5257 186.077C61.5257 185.249 62.1973 184.577 63.0257 184.577C63.8541 184.577 64.5257 185.249 64.5257 186.077C64.5257 186.905 63.8541 187.577 63.0257 187.577Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 187.577C46.8158 187.577 46.1443 186.905 46.1443 186.077C46.1443 185.249 46.8158 184.577 47.6443 184.577C48.4727 184.577 49.1443 185.249 49.1443 186.077C49.1443 186.905 48.4727 187.577 47.6443 187.577Z\" fill=\"#171717\" />\n                        <path d=\"M32.2628 187.577C31.4344 187.577 30.7628 186.905 30.7628 186.077C30.7628 185.249 31.4344 184.577 32.2628 184.577C33.0913 184.577 33.7628 185.249 33.7628 186.077C33.7628 186.905 33.0913 187.577 32.2628 187.577Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 187.577C16.053 187.577 15.3814 186.905 15.3814 186.077C15.3814 185.249 16.053 184.577 16.8814 184.577C17.7099 184.577 18.3814 185.249 18.3814 186.077C18.3814 186.905 17.7099 187.577 16.8814 187.577Z\" fill=\"#171717\" />\n                        <path d=\"M1.5 187.577C0.671574 187.577 6.36132e-07 186.905 6.72343e-07 186.077C7.08555e-07 185.249 0.671574 184.577 1.5 184.577C2.32843 184.577 3 185.249 3 186.077C3 186.905 2.32843 187.577 1.5 187.577Z\" fill=\"#171717\" />\n                        <path d=\"M109.17 202.958C108.342 202.958 107.67 202.287 107.67 201.458C107.67 200.63 108.342 199.958 109.17 199.958C109.998 199.958 110.67 200.63 110.67 201.458C110.67 202.287 109.998 202.958 109.17 202.958Z\" fill=\"#171717\" />\n                        <path d=\"M93.7885 202.958C92.9601 202.958 92.2885 202.287 92.2885 201.458C92.2885 200.63 92.9601 199.958 93.7885 199.958C94.617 199.958 95.2885 200.63 95.2885 201.458C95.2885 202.287 94.617 202.958 93.7885 202.958Z\" fill=\"#171717\" />\n                        <path d=\"M78.4071 202.958C77.5787 202.958 76.9071 202.287 76.9071 201.458C76.9071 200.63 77.5787 199.958 78.4071 199.958C79.2355 199.958 79.9071 200.63 79.9071 201.458C79.9071 202.287 79.2355 202.958 78.4071 202.958Z\" fill=\"#171717\" />\n                        <path d=\"M63.0257 202.958C62.1973 202.958 61.5257 202.287 61.5257 201.458C61.5257 200.63 62.1973 199.958 63.0257 199.958C63.8541 199.958 64.5257 200.63 64.5257 201.458C64.5257 202.287 63.8541 202.958 63.0257 202.958Z\" fill=\"#171717\" />\n                        <path d=\"M47.6443 202.958C46.8158 202.958 46.1443 202.287 46.1443 201.458C46.1443 200.63 46.8158 199.958 47.6443 199.958C48.4727 199.958 49.1443 200.63 49.1443 201.458C49.1443 202.287 48.4727 202.958 47.6443 202.958Z\" fill=\"#171717\" />\n                        <path d=\"M32.2628 202.958C31.4344 202.958 30.7628 202.287 30.7628 201.458C30.7628 200.63 31.4344 199.958 32.2628 199.958C33.0913 199.958 33.7628 200.63 33.7628 201.458C33.7628 202.287 33.0913 202.958 32.2628 202.958Z\" fill=\"#171717\" />\n                        <path d=\"M16.8814 202.958C16.053 202.958 15.3814 202.287 15.3814 201.458C15.3814 200.63 16.053 199.958 16.8814 199.958C17.7099 199.958 18.3814 200.63 18.3814 201.458C18.3814 202.287 17.7099 202.958 16.8814 202.958Z\" fill=\"#171717\" />\n                        <path d=\"M1.5 202.958C0.671573 202.958 -3.62117e-08 202.287 0 201.458C3.62117e-08 200.63 0.671573 199.958 1.5 199.958C2.32843 199.958 3 200.63 3 201.458C3 202.287 2.32843 202.958 1.5 202.958Z\" fill=\"#171717\" />\n                    </svg>\n                    <svg className=\"absolute -z-10 -right-10 top-full\" xmlns=\"http://www.w3.org/2000/svg\" width=\"194\" height=\"62\" viewBox=\"0 0 194 62\" fill=\"none\">\n                        <path d=\"M163 1.00012L163.177 0.823344L163 0.646567L162.823 0.823344L163 1.00012ZM181.75 19.7501L181.573 19.9268L181.75 20.1036L181.927 19.9268L181.75 19.7501ZM151.75 12.2501L151.573 12.0733L151.396 12.2501L151.573 12.4269L151.75 12.2501ZM170.5 31.0001L170.677 31.1768L170.854 31.0001L170.677 30.8233L170.5 31.0001ZM151.75 49.75L151.573 49.5732L151.396 49.75L151.573 49.9268L151.75 49.75ZM163 61L162.823 61.1768L163 61.3536L163.177 61.1768L163 61ZM181.75 42.2501L181.927 42.0733L181.75 41.8965L181.573 42.0733L181.75 42.2501ZM181.75 42.2501L181.573 42.4269L181.75 42.6037L181.927 42.4269L181.75 42.2501ZM193 31.0001L193.177 31.1769L193.355 30.9991L193.176 30.8224L193 31.0001ZM193 31.0001L192.822 30.8243L192.646 31.002L192.824 31.1778L193 31.0001ZM193 31L193.178 31.1758L193.353 30.999L193.177 30.8232L193 31ZM181.75 19.75L181.927 19.5732L181.75 19.3965L181.573 19.5732L181.75 19.75ZM162.823 1.1769L181.573 19.9268L181.927 19.5733L163.177 0.823344L162.823 1.1769ZM151.927 12.4269L163.177 1.1769L162.823 0.823344L151.573 12.0733L151.927 12.4269ZM170.677 30.8233L151.927 12.0733L151.573 12.4269L170.323 31.1768L170.677 30.8233ZM170.323 30.8233L151.573 49.5732L151.927 49.9268L170.677 31.1768L170.323 30.8233ZM151.573 49.9268L162.823 61.1768L163.177 60.8232L151.927 49.5732L151.573 49.9268ZM163.177 61.1768L181.927 42.4268L181.573 42.0733L162.823 60.8232L163.177 61.1768ZM181.927 42.0733L181.927 42.0733L181.573 42.4268L181.573 42.4269L181.927 42.0733ZM192.823 30.8233L181.573 42.0733L181.927 42.4269L193.177 31.1769L192.823 30.8233ZM192.824 31.1778L192.824 31.1779L193.176 30.8224L193.176 30.8223L192.824 31.1778ZM193.178 31.1759L193.178 31.1758L192.822 30.8242L192.822 30.8243L193.178 31.1759ZM193.177 30.8232L181.927 19.5732L181.573 19.9268L192.823 31.1768L193.177 30.8232ZM181.573 19.5732L181.573 19.5733L181.927 19.9268L181.927 19.9268L181.573 19.5732Z\" fill=\"#171717\" />\n                        <path d=\"M112.75 1.00012L112.927 0.823344L112.75 0.646567L112.573 0.823344L112.75 1.00012ZM131.5 19.7501L131.323 19.9268L131.5 20.1036L131.677 19.9268L131.5 19.7501ZM101.5 12.2501L101.323 12.0733L101.146 12.2501L101.323 12.4269L101.5 12.2501ZM120.25 31.0001L120.427 31.1768L120.604 31.0001L120.427 30.8233L120.25 31.0001ZM101.5 49.75L101.323 49.5732L101.146 49.75L101.323 49.9268L101.5 49.75ZM112.75 61L112.573 61.1768L112.75 61.3536L112.927 61.1768L112.75 61ZM131.5 42.2501L131.677 42.0733L131.5 41.8965L131.323 42.0733L131.5 42.2501ZM131.5 42.2501L131.323 42.4269L131.5 42.6037L131.677 42.4269L131.5 42.2501ZM142.75 31.0001L142.927 31.1769L143.105 30.9991L142.926 30.8224L142.75 31.0001ZM142.75 31.0001L142.572 30.8243L142.396 31.002L142.574 31.1778L142.75 31.0001ZM142.75 31L142.928 31.1758L143.103 30.999L142.927 30.8232L142.75 31ZM131.5 19.75L131.677 19.5732L131.5 19.3965L131.323 19.5732L131.5 19.75ZM112.573 1.1769L131.323 19.9268L131.677 19.5733L112.927 0.823344L112.573 1.1769ZM101.677 12.4269L112.927 1.1769L112.573 0.823344L101.323 12.0733L101.677 12.4269ZM120.427 30.8233L101.677 12.0733L101.323 12.4269L120.073 31.1768L120.427 30.8233ZM120.073 30.8233L101.323 49.5732L101.677 49.9268L120.427 31.1768L120.073 30.8233ZM101.323 49.9268L112.573 61.1768L112.927 60.8232L101.677 49.5732L101.323 49.9268ZM112.927 61.1768L131.677 42.4268L131.323 42.0733L112.573 60.8232L112.927 61.1768ZM131.677 42.0733L131.677 42.0733L131.323 42.4268L131.323 42.4269L131.677 42.0733ZM142.573 30.8233L131.323 42.0733L131.677 42.4269L142.927 31.1769L142.573 30.8233ZM142.574 31.1778L142.574 31.1779L142.926 30.8224L142.926 30.8223L142.574 31.1778ZM142.928 31.1759L142.928 31.1758L142.572 30.8242L142.572 30.8243L142.928 31.1759ZM142.927 30.8232L131.677 19.5732L131.323 19.9268L142.573 31.1768L142.927 30.8232ZM131.323 19.5732L131.323 19.5733L131.677 19.9268L131.677 19.9268L131.323 19.5732Z\" fill=\"#171717\" />\n                        <path d=\"M62.5 1.00012L62.6768 0.823344L62.5 0.646567L62.3232 0.823344L62.5 1.00012ZM81.25 19.7501L81.0732 19.9268L81.25 20.1036L81.4267 19.9268L81.25 19.7501ZM51.25 12.2501L51.0732 12.0733L50.8965 12.2501L51.0732 12.4269L51.25 12.2501ZM70 31.0001L70.1767 31.1768L70.3535 31.0001L70.1767 30.8233L70 31.0001ZM51.25 49.75L51.0732 49.5732L50.8965 49.75L51.0732 49.9268L51.25 49.75ZM62.5 61L62.3232 61.1768L62.5 61.3536L62.6768 61.1768L62.5 61ZM81.25 42.2501L81.4267 42.0733L81.25 41.8965L81.0732 42.0733L81.25 42.2501ZM81.25 42.2501L81.0732 42.4269L81.25 42.6037L81.4268 42.4269L81.25 42.2501ZM92.5 31.0001L92.6768 31.1769L92.8545 30.9991L92.6758 30.8224L92.5 31.0001ZM92.5 31.0001L92.3222 30.8243L92.1464 31.002L92.3241 31.1778L92.5 31.0001ZM92.5 31L92.6778 31.1758L92.8526 30.999L92.6768 30.8232L92.5 31ZM81.25 19.75L81.4268 19.5732L81.25 19.3965L81.0732 19.5732L81.25 19.75ZM62.3232 1.1769L81.0732 19.9268L81.4267 19.5733L62.6768 0.823344L62.3232 1.1769ZM51.4268 12.4269L62.6768 1.1769L62.3232 0.823344L51.0732 12.0733L51.4268 12.4269ZM70.1767 30.8233L51.4268 12.0733L51.0732 12.4269L69.8232 31.1768L70.1767 30.8233ZM69.8232 30.8233L51.0732 49.5732L51.4268 49.9268L70.1767 31.1768L69.8232 30.8233ZM51.0732 49.9268L62.3232 61.1768L62.6768 60.8232L51.4268 49.5732L51.0732 49.9268ZM62.6768 61.1768L81.4267 42.4268L81.0732 42.0733L62.3232 60.8232L62.6768 61.1768ZM81.4268 42.0733L81.4267 42.0733L81.0732 42.4268L81.0732 42.4269L81.4268 42.0733ZM92.3232 30.8233L81.0732 42.0733L81.4268 42.4269L92.6768 31.1769L92.3232 30.8233ZM92.3241 31.1778L92.3242 31.1779L92.6758 30.8224L92.6758 30.8223L92.3241 31.1778ZM92.6777 31.1759L92.6778 31.1758L92.3222 30.8242L92.3222 30.8243L92.6777 31.1759ZM92.6768 30.8232L81.4268 19.5732L81.0732 19.9268L92.3232 31.1768L92.6768 30.8232ZM81.0732 19.5732L81.0732 19.5733L81.4267 19.9268L81.4268 19.9268L81.0732 19.5732Z\" fill=\"#171717\" />\n                        <path d=\"M12.25 1.00012L12.4268 0.823344L12.25 0.646567L12.0732 0.823344L12.25 1.00012ZM31 19.7501L30.8232 19.9268L31 20.1036L31.1767 19.9268L31 19.7501ZM1.00001 12.2501L0.823237 12.0733L0.646461 12.2501L0.823237 12.4269L1.00001 12.2501ZM19.75 31.0001L19.9267 31.1768L20.1035 31.0001L19.9267 30.8233L19.75 31.0001ZM1.00001 49.75L0.823236 49.5732L0.646459 49.75L0.823236 49.9268L1.00001 49.75ZM12.25 61L12.0732 61.1768L12.25 61.3536L12.4268 61.1768L12.25 61ZM31 42.2501L31.1767 42.0733L31 41.8965L30.8232 42.0733L31 42.2501ZM31 42.2501L30.8232 42.4269L31 42.6037L31.1768 42.4269L31 42.2501ZM42.25 31.0001L42.4268 31.1769L42.6045 30.9991L42.4258 30.8224L42.25 31.0001ZM42.25 31.0001L42.0722 30.8243L41.8964 31.002L42.0741 31.1778L42.25 31.0001ZM42.25 31L42.4278 31.1758L42.6026 30.999L42.4268 30.8232L42.25 31ZM31 19.75L31.1768 19.5732L31 19.3965L30.8232 19.5732L31 19.75ZM12.0732 1.1769L30.8232 19.9268L31.1767 19.5733L12.4268 0.823344L12.0732 1.1769ZM1.17679 12.4269L12.4268 1.1769L12.0732 0.823344L0.823237 12.0733L1.17679 12.4269ZM19.9267 30.8233L1.17679 12.0733L0.823237 12.4269L19.5732 31.1768L19.9267 30.8233ZM19.5732 30.8233L0.823236 49.5732L1.17679 49.9268L19.9267 31.1768L19.5732 30.8233ZM0.823236 49.9268L12.0732 61.1768L12.4268 60.8232L1.17679 49.5732L0.823236 49.9268ZM12.4268 61.1768L31.1767 42.4268L30.8232 42.0733L12.0732 60.8232L12.4268 61.1768ZM31.1768 42.0733L31.1767 42.0733L30.8232 42.4268L30.8232 42.4269L31.1768 42.0733ZM42.0732 30.8233L30.8232 42.0733L31.1768 42.4269L42.4268 31.1769L42.0732 30.8233ZM42.0741 31.1778L42.0742 31.1779L42.4258 30.8224L42.4258 30.8223L42.0741 31.1778ZM42.4277 31.1759L42.4278 31.1758L42.0722 30.8242L42.0722 30.8243L42.4277 31.1759ZM42.4268 30.8232L31.1768 19.5732L30.8232 19.9268L42.0732 31.1768L42.4268 30.8232ZM30.8232 19.5732L30.8232 19.5733L31.1767 19.9268L31.1768 19.9268L30.8232 19.5732Z\" fill=\"#171717\" />\n                    </svg>\n                    <svg className=\"absolute -z-10 -left-5 top-60\" xmlns=\"http://www.w3.org/2000/svg\" width=\"45\" height=\"210\" viewBox=\"0 0 45 210\" fill=\"none\">\n                        <mask id=\"path-1-inside-1_38_770\" fill=\"white\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45 8.49978L36.5002 0L22.4999 14.0003L8.49979 0.000128471L0 8.49991L14.0001 22.5001L6.67874e-05 36.5001L8.49985 44.9999L22.4999 30.9998L36.5001 45L44.9999 36.5003L30.9997 22.5001L45 8.49978Z\" />\n                        </mask>\n                        <path d=\"M36.5002 0L36.8537 -0.353553L36.5002 -0.707107L36.1466 -0.353553L36.5002 0ZM45 8.49978L45.3535 8.85334L45.7071 8.49978L45.3535 8.14623L45 8.49978ZM22.4999 14.0003L22.1464 14.3538L22.4999 14.7074L22.8535 14.3538L22.4999 14.0003ZM8.49979 0.000128471L8.85334 -0.353425L8.49979 -0.706978L8.14623 -0.353425L8.49979 0.000128471ZM0 8.49991L-0.353553 8.14636L-0.707107 8.49991L-0.353553 8.85347L0 8.49991ZM14.0001 22.5001L14.3537 22.8536L14.7072 22.5001L14.3537 22.1465L14.0001 22.5001ZM6.67874e-05 36.5001L-0.353487 36.1466L-0.70704 36.5001L-0.353487 36.8537L6.67874e-05 36.5001ZM8.49985 44.9999L8.1463 45.3535L8.49985 45.707L8.8534 45.3535L8.49985 44.9999ZM22.4999 30.9998L22.8535 30.6463L22.4999 30.2927L22.1464 30.6463L22.4999 30.9998ZM36.5001 45L36.1466 45.3536L36.5001 45.7071L36.8537 45.3536L36.5001 45ZM44.9999 36.5003L45.3535 36.8538L45.707 36.5003L45.3535 36.1467L44.9999 36.5003ZM30.9997 22.5001L30.6462 22.1465L30.2926 22.5001L30.6462 22.8536L30.9997 22.5001ZM36.1466 0.353553L44.6464 8.85334L45.3535 8.14623L36.8537 -0.353553L36.1466 0.353553ZM22.8535 14.3538L36.8537 0.353553L36.1466 -0.353553L22.1464 13.6467L22.8535 14.3538ZM8.14623 0.353682L22.1464 14.3538L22.8535 13.6467L8.85334 -0.353425L8.14623 0.353682ZM0.353553 8.85347L8.85334 0.353682L8.14623 -0.353425L-0.353553 8.14636L0.353553 8.85347ZM14.3537 22.1465L0.353553 8.14636L-0.353553 8.85347L13.6466 22.8536L14.3537 22.1465ZM0.35362 36.8537L14.3537 22.8536L13.6466 22.1465L-0.353487 36.1466L0.35362 36.8537ZM8.8534 44.6464L0.35362 36.1466L-0.353487 36.8537L8.1463 45.3535L8.8534 44.6464ZM22.1464 30.6463L8.1463 44.6464L8.8534 45.3535L22.8535 31.3534L22.1464 30.6463ZM36.8537 44.6465L22.8535 30.6463L22.1464 31.3534L36.1466 45.3536L36.8537 44.6465ZM44.6464 36.1467L36.1466 44.6465L36.8537 45.3536L45.3535 36.8538L44.6464 36.1467ZM30.6462 22.8536L44.6464 36.8538L45.3535 36.1467L31.3533 22.1465L30.6462 22.8536ZM44.6464 8.14623L30.6462 22.1465L31.3533 22.8536L45.3535 8.85334L44.6464 8.14623Z\" fill=\"#F06F46\" mask=\"url(#path-1-inside-1_38_770)\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45 63.4999L36.5002 55.0001L22.4999 69.0004L8.49979 55.0003L0 63.5L14.0001 77.5002L6.67874e-05 91.5002L8.49985 100L22.4999 86L36.5001 100L44.9999 91.5004L30.9997 77.5002L45 63.4999Z\" fill=\"#F06F46\" />\n                        <mask id=\"path-4-inside-2_38_770\" fill=\"white\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45 118.5L36.5002 110L22.4999 124.001L8.49979 110L0 118.5L14.0001 132.5L6.67874e-05 146.5L8.49985 155L22.4999 141L36.5001 155L44.9999 146.5L30.9997 132.5L45 118.5Z\" />\n                        </mask>\n                        <path d=\"M36.5002 110L36.8537 109.647L36.5002 109.293L36.1466 109.647L36.5002 110ZM45 118.5L45.3535 118.854L45.7071 118.5L45.3535 118.146L45 118.5ZM22.4999 124.001L22.1464 124.354L22.4999 124.708L22.8535 124.354L22.4999 124.001ZM8.49979 110L8.85334 109.647L8.49979 109.293L8.14623 109.647L8.49979 110ZM0 118.5L-0.353553 118.147L-0.707107 118.5L-0.353553 118.854L0 118.5ZM14.0001 132.5L14.3537 132.854L14.7072 132.5L14.3537 132.147L14.0001 132.5ZM6.67874e-05 146.5L-0.353487 146.147L-0.70704 146.5L-0.353487 146.854L6.67874e-05 146.5ZM8.49985 155L8.1463 155.354L8.49985 155.707L8.8534 155.354L8.49985 155ZM22.4999 141L22.8535 140.647L22.4999 140.293L22.1464 140.647L22.4999 141ZM36.5001 155L36.1466 155.354L36.5001 155.707L36.8537 155.354L36.5001 155ZM44.9999 146.5L45.3535 146.854L45.707 146.5L45.3535 146.147L44.9999 146.5ZM30.9997 132.5L30.6462 132.147L30.2926 132.5L30.6462 132.854L30.9997 132.5ZM36.1466 110.354L44.6464 118.854L45.3535 118.146L36.8537 109.647L36.1466 110.354ZM22.8535 124.354L36.8537 110.354L36.1466 109.647L22.1464 123.647L22.8535 124.354ZM8.14623 110.354L22.1464 124.354L22.8535 123.647L8.85334 109.647L8.14623 110.354ZM0.353553 118.854L8.85334 110.354L8.14623 109.647L-0.353553 118.147L0.353553 118.854ZM14.3537 132.147L0.353553 118.147L-0.353553 118.854L13.6466 132.854L14.3537 132.147ZM0.35362 146.854L14.3537 132.854L13.6466 132.147L-0.353487 146.147L0.35362 146.854ZM8.8534 154.647L0.35362 146.147L-0.353487 146.854L8.1463 155.354L8.8534 154.647ZM22.1464 140.647L8.1463 154.647L8.8534 155.354L22.8535 141.354L22.1464 140.647ZM36.8537 154.647L22.8535 140.647L22.1464 141.354L36.1466 155.354L36.8537 154.647ZM44.6464 146.147L36.1466 154.647L36.8537 155.354L45.3535 146.854L44.6464 146.147ZM30.6462 132.854L44.6464 146.854L45.3535 146.147L31.3533 132.147L30.6462 132.854ZM44.6464 118.146L30.6462 132.147L31.3533 132.854L45.3535 118.854L44.6464 118.146Z\" fill=\"#F06F46\" mask=\"url(#path-4-inside-2_38_770)\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45 173.5L36.5002 165L22.4999 179.001L8.49979 165L0 173.5L14.0001 187.5L6.67874e-05 201.5L8.49985 210L22.4999 196L36.5001 210L44.9999 201.501L30.9997 187.5L45 173.5Z\" fill=\"#F06F46\" />\n                    </svg>\n                    <div className=\" absolute w-full z-10\">\n                        <div className=\"flex items-center \"> <h1 className=\"font-body text-2xl font-semibold\">{album.titulo}</h1></div>\n                        <div className=\"flex items-center \"> {deportes.map(d => (d._id === album.deporte) ? <p key={d._id} className=\"font-body text-lg font-regular\">{d.deporte}</p> : \"\")}\n                            <p className=\"ml-2 font-body text-lg font-regular \">{convertirAString(album.fecha)}</p></div>\n\n                        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 pt-4\">\n                            {album.fotos.map(foto => <div className=\"col-span-1 h-40\" style={{ background: `url(${foto.source}) center center /cover` }} key={foto.source} onClick={() => { setFotoSeleccionada(foto.source) }}></div>)}\n                        </div>\n                        <NavLink to={{ pathname: '/galeria' }} >  <div className=\"flex items-center pt-4\">  <ArrowLeftIcon size={12} />  <p className=\"ml-2 font-body text-body \">Volver a la galería</p></div></NavLink>\n\n                    </div>\n                    <div className=\" opacity-0\">\n                        <div className=\"flex items-center \"> <h1 className=\"font-body text-2xl font-semibold\">{album.titulo}</h1></div>\n                        <div className=\"flex items-center \"> {deportes.map(d => (d._id === album.deporte) ? <p key={d._id} className=\"font-body text-lg font-regular\">{d.deporte}</p> : \"\")}\n                            <p className=\"ml-2 font-body text-lg font-regular \">{convertirAString(album.fecha)}</p></div>\n\n                        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 pt-4\">\n                            {album.fotos.map(foto => <div className=\"col-span-1 h-40\" style={{ background: `url(${foto.source}) center center /cover` }} key={foto.source} onClick={() => { setFotoSeleccionada(foto.source) }}></div>)}\n                        </div>\n                        <NavLink to={{ pathname: '/galeria' }} >  <div className=\"flex items-center pt-4\">  <ArrowLeftIcon size={12} />  <p className=\"ml-2 font-body text-body \">Volver a la galería</p></div></NavLink>\n\n                    </div>\n                </div> :\n                \"\"\n            }\n\n            {\n                (fotoSeleccionada !== \"\") ?\n                    <AmpliacionFoto fotoActual={fotoSeleccionada} cerrarFotoPadre={cerrarFoto} fotos={album.fotos} /> :\n                    \"\"\n            }\n            <Footer />\n        </div >\n    )\n}\nconst mapStateToProps = (state) => ({\n    albums: state.albums,\n    deportes: state.deportes,\n\n})\n\n\nexport default connect(mapStateToProps)(Ampliacion)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Input from '../formComponents/Input'\nimport Alerta from '../admin/Alerta'\n\nconst EditarContenido = (props) => {\n    let { url } = props\n    useEffect(() => {\n\n        fetch(`${url}/traerDatos`, {\n            method: \"GET\",\n        }).then(r => r.json())\n            .then(r => {\n                /*  console.log(r); */\n                setProgramas(r[0].programas)\n                setSocias(r[0].socias)\n                setPartidos(r[0].partidos)\n            })\n\n    }, [])\n\n    const [mensaje, setMensaje] = useState(\"\")\n    const [tipoMensaje, setTipoMensaje] = useState(\"\")\n    const [visible, setVisible] = useState(\"\")\n\n    const [programas, setProgramas] = useState();\n    const [socias, setSocias] = useState()\n    const [partidos, setPartidos] = useState()\n\n    const guardarCambios = () => {\n\n        let nuevosDatos = {\n            programas: programas,\n            socias: socias,\n            partidos: partidos,\n        }\n        setMensaje(\"Modificando datos\");\n        setTipoMensaje(\"loading\")\n        setVisible(1)\n\n        console.log(nuevosDatos)\n\n        fetch(`${url}/modificarDatos`, {\n            method: \"PUT\",\n            body: JSON.stringify(nuevosDatos),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        ).then(r => r.json())\n            .then(r => {\n                console.log(r);\n                setMensaje(\"Cambios realizados con éxito\");\n                setTipoMensaje(\"exito\")\n                setVisible(1)\n            })\n    }\n\n    return (\n        <div>\n\n            <div className=\"w-full p-4  md:p-0 md:w-10/12 mx-auto pt-32 md:pt-48\"  >\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-12\">\n                    <Alerta tipo={tipoMensaje} mensaje={mensaje} visible={visible} funcion={setVisible} duracion={3000} />\n                    <div className=\"col-span-1\">\n                        <Input type={\"number\"} label={\"Programas al aire\"} defaultValue={programas} funcion={setProgramas} />\n                        <Input type={\"number\"} label={\"Socias Vitalicia\"} defaultValue={socias} funcion={setSocias} />\n                        <Input type={\"number\"} label={\"Partidos cubiertos\"} defaultValue={partidos} funcion={setPartidos} />\n                        <button className=\"w-full md:w-auto bg-orange py-3 px-8 rounded-3xl text-white text-base\" onClick={guardarCambios}>Guardar cambios</button>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    url: state.url\n})\n\n\nexport default connect(mapStateToProps)(EditarContenido)","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport Axios from 'axios'\nimport Input from '../formComponents/Input'\n\nconst SubirAlbum = (props) => {\n\n    useEffect(() => {\n        setDeporte(deportes[0].id)\n    }, [])\n\n\n    let { albums, deportes, url } = props;\n    const [selectedFile, setSelectedFile] = useState([]);\n    const [titulo, setTitulo] = useState(\"\");\n    const [deporte, setDeporte] = useState(\"\");\n    const [fecha, setFecha] = useState(\"\");\n\n\n    useEffect(() => {\n        if (titulo !== \"\" && deporte !== \"\" && fecha !== \"\" && selectedFile !== \"\") {\n            document.getElementById(\"btn-upload\").disabled = false;\n            document.getElementById(\"btn-upload\").style.opacity = \"1\";\n        } else {\n            document.getElementById(\"btn-upload\").disabled = true;\n            document.getElementById(\"btn-upload\").style.opacity = \"0.7\";\n        }\n    }, [titulo, deporte, fecha, selectedFile])\n\n\n    const guardarFecha = (e) => {\n        console.log(e)\n        let aux = new Date(`${e} GMT-3`);\n        setFecha(aux);\n    }\n\n\n    const crearAlbum = async () => {\n        console.log(selectedFile)\n        const fotos = await uploadImages()\n        console.log(fotos)\n\n        let nuevoAlbum = {\n            titulo: titulo,\n            deporte: deporte,\n            fecha: fecha,\n            fotos: fotos\n        }\n\n\n        fetch(`${url}/crearAlbum`, {\n            method: \"POST\",\n            body: JSON.stringify(nuevoAlbum),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(r => r.json())\n            .then(r => {\n                console.log(r);\n                props.dispatch({ type: \"AGREGAR_ALBUM\", payload: r });\n                props.setMensaje(\"Álbum subido con éxito\")\n                props.setTipoMensaje(\"exito\")\n                props.setVisible(1)\n                props.setPopupAlbum(false)\n\n            })\n\n    }\n\n\n    const uploadImages = () => {\n        props.setMensaje(\"Subiendo fotos...\")\n        props.setTipoMensaje(\"loading\")\n        props.setVisible(1)\n        const fotos = selectedFile.map(file => {\n            const formData = new FormData()\n            formData.append(\"file\", file);\n            formData.append(\"upload_preset\", \"igualando\")\n            return Axios.post(\n                \"https://api.cloudinary.com/v1_1/isita/image/upload\",\n                formData\n            ).then((r) => {\n                console.log(r)\n                let foto = { source: r.data.url }\n                return foto\n            });\n        });\n\n        return Promise.all(fotos);\n    }\n\n\n    return (\n        <div className=\"left-0 top-0 fixed h-full w-full flex items-center justify-center bg-black bg-opacity-60 \" style={{ zIndex: 999999 }}>\n            <div className=\"w-11/12 md:w-8/12 bg-black-50 p-6 md:py-8 md:px-12 rounded-xl \">\n                <div className=\"w-full flex justify-end\"><button className=\"group\" onClick={(e) => { props.setPopupAlbum(false) }} >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n                </div>\n                <h2 className=\"font-body font-semibold text-2xl mb-2\" >Subir album</h2>\n                <Input type={\"text\"} label={\"Título\"} funcion={setTitulo} />\n\n\n                <Input type={\"select\"} opciones={deportes} funcion={setDeporte} label={\"Deporte\"} />\n\n                <Input type={\"date\"} label={\"Fecha\"} funcion={guardarFecha} />\n\n                <Input type={\"multiple files\"} label={\"Subir fotos\"} funcion={setSelectedFile} />\n\n                <button id=\"btn-upload\" className=\"btn w-full md:w-auto block bg-orange py-2 px-4 rounded-3xl text-white text-base mt-4 \" onClick={crearAlbum}>Subir Album</button>\n\n\n            </div>\n        </div >\n    )\n}\nconst mapStateToProps = (state) => ({\n    albums: state.albums,\n    deportes: state.deportes,\n    url: state.url\n\n})\n\n\nexport default connect(mapStateToProps)(SubirAlbum)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport './css/SociaVitalicia.css'\n\n\nconst SociaVitalicia = (props) => {\n\n    let sociaVitalicia\n    sociaVitalicia = props.sociaVitalicia\n    console.log(props)\n\n    /*  console.log(sociaVitalicia) */\n\n\n    return (\n        <div className={sociaVitalicia.darkMode === true ? 'dark' : ''} >\n            <div className=\"socia bg-white dark:bg-black\">\n                {(sociaVitalicia.fotoFondo) ?\n                    <div className=\"bgimage\" style={{ background: `url(${sociaVitalicia.fotoFondo})  center/cover` }}></div> :\n                    <div></div>\n                }\n\n                <div className=\"tarjeta bg-orange\">\n                    {(sociaVitalicia.fotoMain !== \"\") ?\n                        <div className=\"foto\" style={{ background: `url(${sociaVitalicia.fotoMain})  center/cover` }}></div> :\n                        <div></div>\n                    }\n\n                    <svg className=\"circulo\" viewBox=\"0 0 305 305\" fill=\"none\">\n                        <path d=\"M53.5615 37.0094L61.2048 45.4709L59.6761 46.8981L50.9118 44.2475L56.2112 50.0584L54.6825 51.3837L47.0392 42.9223L48.5678 41.495L57.3322 44.1456L52.0328 38.3347L53.5615 37.0094Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M61.8163 39.66L57.4341 33.8492L59.0647 32.6258L63.243 38.2328C64.364 39.762 65.2812 39.9659 66.6061 38.9464C67.9309 37.927 68.0328 37.0095 66.9118 35.4803L62.7334 29.8733L64.364 28.65L68.6443 34.3589C70.3768 36.7036 70.1729 38.8445 67.829 40.4756C65.6889 42.2087 63.5487 42.0048 61.8163 39.66Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M68.5424 25.7955L74.9627 21.8196L75.9819 23.4508L71.2939 26.3052L72.7207 28.548L77.1029 25.7955L78.122 27.4266L73.7398 30.1791L75.3704 32.7278L80.0583 29.7713L81.0774 31.4025L74.5551 35.4803L68.5424 25.7955Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M87.1921 15.2952L88.415 27.4266L87.0901 28.1402L77.8163 20.1885L79.8545 19.1691L86.2749 24.878L85.2557 16.3146L87.1921 15.2952Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M99.0137 20.0866L94.9373 21.8196L95.0392 24.3683L93.001 25.1838L92.7971 12.9504L94.2239 12.3387L102.784 21.106L100.746 21.9216L99.0137 20.0866ZM97.587 18.5574L94.5296 15.2951L94.7334 19.6788L97.587 18.5574Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M108.695 15.601L110.53 14.5815C111.039 15.8049 112.16 16.3146 113.383 16.0088C114.504 15.7029 115.014 14.9893 114.81 14.0718C114.606 13.3582 113.893 13.0524 112.058 12.8485C109.511 12.6446 108.491 12.0329 107.982 10.4018C107.472 8.66872 108.491 7.0376 110.53 6.42593C111.956 6.01815 113.383 6.32399 114.402 7.44538L113.077 8.87261C112.466 8.159 111.651 7.95511 110.937 8.159C110.122 8.36289 109.714 9.0765 109.918 9.79012C110.122 10.5037 110.733 10.8096 112.568 10.9115C115.116 11.1154 116.135 11.7271 116.644 13.2562C117.256 15.2951 116.033 17.1302 113.791 17.7418C111.651 18.2516 109.612 17.436 108.695 15.601Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M118.886 10.1979C118.173 6.73179 119.905 3.97928 123.065 3.36761C126.224 2.75594 128.874 4.69289 129.485 8.15902C130.198 11.6251 128.466 14.3777 125.307 14.9893C122.147 15.601 119.498 13.664 118.886 10.1979ZM127.447 8.5668C126.937 6.12012 125.409 4.89678 123.37 5.30456C121.332 5.71234 120.313 7.4454 120.823 9.89208C121.332 12.3388 122.861 13.5621 124.899 13.1543C126.937 12.6446 127.956 10.9115 127.447 8.5668Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M132.644 7.6493C132.339 3.97928 134.173 1.5326 137.536 1.22676C139.88 1.02287 141.816 1.94038 142.835 4.08122L141.001 4.99873C140.39 3.67344 139.167 3.06177 137.638 3.16372C135.396 3.36761 134.275 4.89678 134.581 7.44541C134.784 9.99403 136.211 11.3193 138.453 11.1154C139.982 11.0135 141.001 10.096 141.409 8.66875L143.345 9.17847C142.733 11.4213 141.001 12.8485 138.657 13.0524C135.396 13.3582 133.052 11.3193 132.644 7.6493Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M146.606 0.920915L148.644 0.81897L148.95 12.1349L146.912 12.2368L146.606 0.920915Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M159.549 9.99402L155.065 9.79013L154.147 12.1349L151.905 12.0329L156.899 0.81897L158.428 0.920915L162.606 12.4407L160.364 12.3388L159.549 9.99402ZM158.937 8.05706L157.511 3.87732L155.88 7.95512L158.937 8.05706Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M181.765 3.57147L175.447 14.0718L173.918 13.8679L171.269 1.83841L173.511 2.14424L175.243 10.6057L179.523 3.16369L181.765 3.57147Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M185.332 4.38705L187.268 4.79483L184.721 15.9068L182.784 15.4991L185.332 4.38705Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M193.791 8.46484L190.428 7.44539L190.937 5.61038L199.702 8.15901L199.192 9.99402L195.829 8.97457L193.179 18.0477L191.243 17.436L193.791 8.46484Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M204.899 19.7808L200.721 18.2516L199.09 20.1885L197.052 19.373L205.307 10.2999L206.733 10.8096L206.937 23.043L204.899 22.2274V19.7808ZM204.899 17.7419V13.3582L202.046 16.7224L204.899 17.7419Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M214.377 13.9699L216.211 14.8874L212.135 23.4508L216.517 25.4897L215.702 27.2227L209.485 24.2663L214.377 13.9699Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M223.956 18.6593L225.791 19.6788L220.39 29.6694L218.555 28.6499L223.956 18.6593Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M226.402 26.5091C228.339 23.4508 231.396 22.6352 234.249 24.4702C236.288 25.7955 237.205 27.7324 236.695 29.9752L234.759 29.5675C235.065 28.1402 234.555 26.9169 233.23 26.1013C231.396 24.878 229.561 25.4897 228.135 27.6305C226.81 29.7713 227.116 31.7083 228.95 32.8297C230.275 33.6453 231.6 33.6453 232.823 32.7278L234.046 34.3589C232.211 35.7861 229.969 35.7861 227.931 34.4608C225.077 32.7278 224.466 29.5675 226.402 26.5091Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M241.587 29.7714L243.218 30.9947L236.491 40.1698L234.861 38.9464L241.587 29.7714Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M246.173 44.9611L242.81 42.1067L240.67 43.33L238.937 41.9028L249.74 36.1939L250.861 37.2133L246.988 48.7331L245.256 47.3059L246.173 44.9611ZM246.784 43.0242L248.313 38.8444L244.44 40.9853L246.784 43.0242Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M267.37 53.4226L259.014 61.0685L257.587 59.5393L260.135 50.772L254.326 56.0732L253.001 54.544L261.358 46.8981L262.784 48.4273L260.237 57.1946L266.046 51.8934L267.37 53.4226Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M264.823 61.6801L270.632 57.2965L271.854 58.9276L266.249 63.2093C264.721 64.3307 264.517 65.2482 265.536 66.5735C266.555 67.8988 267.472 68.0007 269.001 66.8793L274.606 62.5976L275.829 64.2288L270.122 68.6124C267.778 70.4474 265.74 70.1416 263.905 67.7968C262.275 65.554 262.479 63.4132 264.823 61.6801Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M278.683 68.3065L282.759 74.7291L281.128 75.7485L278.173 71.0591L275.931 72.4863L278.683 76.8699L277.052 77.8894L274.3 73.5058L271.753 75.1369L274.708 79.8263L273.077 80.8458L269.001 74.4232L278.683 68.3065Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M289.383 86.9625L277.256 88.1858L276.542 86.8606L284.491 77.5836L285.511 79.6225L279.804 86.045L288.364 85.0255L289.383 86.9625Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M284.695 98.6862L282.963 94.6084L280.415 94.7103L279.498 92.6714L291.727 92.3656L292.339 93.7928L283.676 102.458L282.759 100.419L284.695 98.6862ZM286.122 97.3609L289.281 94.3025L284.899 94.5064L286.122 97.3609Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M289.179 108.473L290.198 110.308C288.976 110.818 288.466 111.939 288.874 113.162C289.179 114.284 289.995 114.793 290.912 114.488C291.625 114.284 291.931 113.57 292.135 111.735C292.339 109.187 292.95 108.167 294.581 107.657C296.313 107.148 297.944 108.167 298.555 110.206C298.963 111.633 298.657 113.06 297.536 114.08L296.007 112.755C296.721 112.143 296.925 111.327 296.721 110.614C296.517 109.798 295.804 109.39 295.09 109.594C294.377 109.798 294.071 110.41 293.969 112.245C293.765 114.793 293.154 115.813 291.625 116.323C289.587 116.934 287.753 115.711 287.141 113.57C286.53 111.429 287.243 109.288 289.179 108.473Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M294.581 118.565C298.046 117.852 300.797 119.585 301.511 122.745C302.122 125.905 300.288 128.556 296.721 129.27C293.256 129.983 290.504 128.25 289.893 125.09C289.281 121.828 291.116 119.279 294.581 118.565ZM296.313 127.231C298.759 126.721 299.982 125.192 299.574 123.153C299.167 121.114 297.434 120.095 294.988 120.604C292.542 121.114 291.319 122.643 291.727 124.682C292.135 126.721 293.969 127.639 296.313 127.231Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M297.23 132.328C300.797 131.92 303.345 133.857 303.753 137.221C303.956 139.566 303.039 141.503 301.001 142.624L300.084 140.789C301.409 140.178 302.02 138.954 301.816 137.425C301.612 135.284 299.982 134.163 297.536 134.367C294.988 134.673 293.663 136.1 293.867 138.241C294.071 139.77 294.886 140.789 296.313 141.197L295.804 143.134C293.561 142.523 292.135 140.891 291.931 138.445C291.523 135.081 293.663 132.736 297.23 132.328Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M304.16 146.294L304.262 148.333L292.95 148.741L292.848 146.702L304.16 146.294Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M295.09 159.241L295.192 154.756L292.848 153.838L292.95 151.596L304.16 156.489V158.018L292.644 162.198L292.746 159.955L295.09 159.241ZM297.026 158.63L301.205 157.203L297.128 155.571L297.026 158.63Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M301.612 181.465L291.116 175.247L291.319 173.718L303.243 170.965L302.937 173.208L294.479 175.043L301.918 179.325L301.612 181.465Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M300.899 185.034L300.491 187.072L289.383 184.626L289.791 182.587L300.899 185.034Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M296.823 193.495L297.842 190.029L299.676 190.539L297.128 199.306L295.294 198.796L296.313 195.33L287.141 192.679L287.753 190.742L296.823 193.495Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M285.612 204.709L287.141 200.529L285.205 198.898L286.02 196.859L295.09 205.117L294.581 206.544L282.351 206.85L283.167 204.811L285.612 204.709ZM287.549 204.709H291.931L288.568 201.855L287.549 204.709Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M291.421 214.19L290.606 216.025L282.046 212.049L280.007 216.433L278.275 215.617L281.128 209.398L291.421 214.19Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M286.733 223.671L285.816 225.506L275.829 220.103L276.746 218.268L286.733 223.671Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M278.988 226.219C282.046 228.156 282.861 231.215 281.128 234.069C279.804 236.108 277.867 237.026 275.625 236.618L276.033 234.681C277.46 234.987 278.683 234.477 279.498 233.152C280.619 231.317 280.109 229.482 277.969 228.054C275.829 226.729 273.893 227.035 272.772 228.87C271.956 230.195 271.956 231.521 272.976 232.744L271.345 233.967C269.918 232.132 269.918 229.889 271.141 227.85C272.772 224.894 275.931 224.282 278.988 226.219Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M275.829 241.409L274.606 243.04L265.434 236.312L266.657 234.681L275.829 241.409Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M260.644 246.099L263.498 242.633L262.275 240.492L263.702 238.759L269.511 249.565L268.491 250.788L256.874 247.016L258.3 245.283L260.644 246.099ZM262.581 246.812L266.759 248.341L264.517 244.468L262.581 246.812Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M252.288 267.405L244.542 259.046L246.071 257.618L254.937 260.167L249.638 254.356L251.167 252.929L258.912 261.288L257.383 262.716L248.517 260.269L253.816 265.978L252.288 267.405Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M244.033 264.857L248.517 270.565L246.886 271.789L242.606 266.182C241.383 264.653 240.568 264.449 239.141 265.57C237.714 266.692 237.714 267.507 238.937 269.036L243.218 274.643L241.587 275.867L237.205 270.158C235.37 267.813 235.676 265.774 237.918 263.939C240.262 262.308 242.3 262.614 244.033 264.857Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M237.511 278.823L231.192 282.901L230.173 281.372L234.861 278.415L233.434 276.172L229.154 278.925L228.135 277.396L232.415 274.643L230.784 272.095L226.097 275.051L225.077 273.522L231.396 269.444L237.511 278.823Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M218.963 289.629L217.638 277.498L218.963 276.784L228.339 284.634L226.402 285.653L219.88 280.046L221.001 288.61L218.963 289.629Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M207.141 284.94L211.218 283.207L211.116 280.658L213.154 279.741L213.46 291.974L212.033 292.586L203.37 283.92L205.409 283.003L207.141 284.94ZM208.568 286.367L211.625 289.527L211.421 285.144L208.568 286.367Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M197.46 289.527L195.625 290.547C195.116 289.323 193.995 288.814 192.772 289.221C191.651 289.527 191.141 290.343 191.447 291.26C191.651 291.974 192.364 292.28 194.198 292.484C196.746 292.688 197.765 293.299 198.275 294.828C198.784 296.561 197.765 298.193 195.727 298.804C194.3 299.212 192.874 298.906 191.854 297.785L193.179 296.256C193.791 296.969 194.606 297.173 195.319 296.969C196.135 296.765 196.542 296.052 196.339 295.338C196.135 294.624 195.421 294.421 193.689 294.217C191.141 294.013 190.122 293.401 189.612 291.872C189.001 289.833 190.122 287.998 192.364 287.386C194.504 286.877 196.542 287.692 197.46 289.527Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M187.37 295.032C188.084 298.498 186.453 301.251 183.294 301.965C180.135 302.576 177.485 300.741 176.772 297.275C176.058 293.809 177.689 291.056 180.848 290.343C184.007 289.731 186.657 291.566 187.37 295.032ZM178.708 296.867C179.218 299.314 180.848 300.537 182.886 300.13C184.925 299.722 185.944 297.989 185.434 295.542C184.925 293.095 183.294 291.872 181.256 292.382C179.218 292.688 178.198 294.421 178.708 296.867Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M173.612 297.785C174.02 301.353 172.084 303.901 168.823 304.309C166.479 304.615 164.542 303.596 163.421 301.557L165.256 300.639C165.867 301.965 167.09 302.576 168.619 302.372C170.759 302.168 171.88 300.537 171.676 297.989C171.37 295.44 169.944 294.115 167.804 294.421C166.275 294.624 165.256 295.44 164.848 296.969L162.912 296.459C163.523 294.217 165.154 292.789 167.6 292.484C170.861 292.076 173.205 294.115 173.612 297.785Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M159.753 304.717L157.714 304.819L157.205 293.401L159.243 293.299L159.753 304.717Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M146.708 295.746L151.192 295.848L152.109 293.503H154.351L149.561 304.717H148.033L143.753 293.299H145.995L146.708 295.746ZM147.319 297.683L148.746 301.863L150.377 297.785L147.319 297.683Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M124.593 302.474L130.708 291.872L132.237 292.076L135.09 304.003L132.848 303.698L131.014 295.338L126.835 302.882L124.593 302.474Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M120.925 301.659L118.886 301.251L121.332 290.139L123.37 290.547L120.925 301.659Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M112.466 297.683L115.931 298.6L115.421 300.435L106.555 297.989L107.065 296.154L110.53 297.071L113.077 287.896L115.014 288.406L112.466 297.683Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M101.256 286.469L105.434 287.998L107.065 286.061L109.103 286.775L100.95 295.848L99.5232 295.338L99.1156 283.207L101.154 283.92L101.256 286.469ZM101.256 288.508V292.891L104.109 289.527L101.256 288.508Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M91.7781 292.382L89.9437 291.566L93.9182 282.901L89.536 280.862L90.3513 279.129L96.6698 281.983L91.7781 292.382Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M82.1984 287.794L80.364 286.877L85.6634 276.784L87.4978 277.702L82.1984 287.794Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.6507 280.046C77.7143 283.105 74.657 283.92 71.8035 282.187C69.7653 280.964 68.8481 279.027 69.2557 276.682L71.1921 277.09C70.8863 278.517 71.4978 279.74 72.7207 280.556C74.5551 281.677 76.3895 281.168 77.8163 279.027C79.1411 276.886 78.8354 274.949 77.001 273.828C75.6761 273.012 74.3513 273.012 73.1284 274.032L71.9054 272.4C73.7398 270.973 75.9819 270.871 78.0201 272.197C80.9755 273.828 81.587 276.988 79.6507 280.046Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M64.364 276.886L62.7335 275.663L69.3577 266.386L70.9882 267.609L64.364 276.886Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.6761 261.9L63.1411 264.755L65.2812 263.531L67.0137 264.958L56.3131 270.871L55.0901 269.852L58.8608 258.23L60.5933 259.657L59.6761 261.9ZM59.0647 263.735L57.6379 267.915L61.4086 265.672L59.0647 263.735Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M38.3768 253.643L46.6315 245.895L48.0583 247.424L45.6124 256.293L51.3194 250.89L52.7462 252.419L44.4914 260.167L43.0647 258.638L45.5105 249.769L39.8035 255.172L38.3768 253.643Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.8226 245.283L35.1156 249.769L33.8927 248.138L39.3959 243.856C40.9245 242.632 41.0264 241.715 40.0073 240.39C38.9882 239.064 38.071 238.962 36.5424 240.186L31.0392 244.468L29.8163 242.836L35.4213 238.453C37.7653 236.618 39.8035 236.924 41.6379 239.166C43.3704 241.511 43.0647 243.55 40.8226 245.283Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M26.8608 238.861L22.6825 232.54L24.2112 231.521L27.2685 236.108L29.5105 234.579L26.657 230.297L28.1857 229.278L31.0392 233.559L33.587 231.928L30.5296 227.341L32.0583 226.321L36.2366 232.642L26.8608 238.861Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M15.9564 220.409L28.0838 218.981L28.7972 220.307L20.95 229.686L19.829 227.749L25.4341 221.224L16.8736 222.345L15.9564 220.409Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M20.5424 208.583L22.3768 212.661L24.9245 212.457L25.8417 214.496L13.5105 214.903L12.899 213.476L21.4596 204.709L22.3768 206.748L20.5424 208.583ZM19.1156 209.908L15.9564 212.967L20.3385 212.661L19.1156 209.908Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M15.8545 198.898L14.7334 197.063C15.9564 196.553 16.4659 195.432 16.0583 194.209C15.7526 193.087 14.9373 192.578 14.0201 192.883C13.3067 193.087 13.001 193.801 12.7971 195.636C12.5933 198.184 11.9819 199.204 10.4532 199.714C8.72071 200.223 7.09014 199.306 6.47867 197.267C6.07103 195.84 6.37676 194.413 7.49778 193.393L9.02644 194.718C8.31307 195.33 8.10925 196.146 8.31307 196.859C8.51689 197.675 9.23026 198.083 9.94364 197.879C10.657 197.675 10.8608 196.961 11.0647 195.126C11.2685 192.578 11.8799 191.558 13.4086 191.048C15.4468 190.437 17.2812 191.558 17.8927 193.801C18.5041 195.942 17.7908 197.981 15.8545 198.898Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M10.3513 188.907C6.88632 189.621 4.13473 187.99 3.42135 184.83C2.70797 181.669 4.64428 179.019 8.10925 178.305C11.5742 177.592 14.3258 179.223 15.0392 182.383C15.7526 185.543 13.8163 188.092 10.3513 188.907ZM8.41498 180.242C5.96912 180.752 4.74619 182.383 5.25575 184.422C5.66339 186.461 7.39587 187.378 9.84173 186.869C12.2876 186.359 13.4086 184.728 13.001 182.689C12.5933 180.65 10.8608 179.732 8.41498 180.242Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M7.4978 175.043C3.93092 175.451 1.38315 173.616 0.975507 170.252C0.669775 167.907 1.58697 165.97 3.7271 164.848L4.6443 166.582C3.31946 167.295 2.70799 168.417 2.91181 169.946C3.21755 172.087 4.74621 173.208 7.29398 172.902C9.84175 172.596 11.1666 171.169 10.8609 169.028C10.657 167.499 9.84175 166.48 8.31309 166.174L8.82264 164.237C11.0647 164.747 12.4914 166.48 12.7972 168.926C13.2048 172.29 11.1666 174.635 7.4978 175.043Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M0.465925 161.28L0.364014 159.241L11.6761 158.732L11.778 160.771L0.465925 161.28Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M9.33218 148.231L9.23027 152.717L11.5742 153.635V155.877L0.262115 150.984V149.455L11.6761 145.071V147.314L9.33218 148.231ZM7.39587 148.843L3.31944 150.27L7.39587 151.901V148.843Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.50416 126.109L13.1029 132.226L12.8991 133.755L0.975494 136.712L1.28123 134.469L9.63791 132.532L2.19842 128.25L2.50416 126.109Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M3.31943 122.439L3.72707 120.4L14.8354 122.745L14.4277 124.784L3.31943 122.439Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M7.19205 113.876L6.27486 117.342L4.44046 116.832L6.88632 107.963L8.72072 108.473L7.80352 111.939L16.9755 114.488L16.4659 116.425L7.19205 113.876Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M18.3003 102.662L16.7717 106.842L18.708 108.473L17.9946 110.512L8.82263 102.356L9.33219 100.929L21.5615 100.521L20.8481 102.56L18.3003 102.662ZM16.364 102.662H11.9819L15.3449 105.516L16.364 102.662Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M12.3895 93.1811L13.2048 91.3461L21.8672 95.22L23.9054 90.7345L25.6379 91.55L22.6825 97.8706L12.3895 93.1811Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M16.8736 83.5983L17.7908 81.7633L27.88 86.9625L26.9628 88.7975L16.8736 83.5983Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M24.6188 80.9477C21.5615 79.0108 20.6443 76.0544 22.4787 73.098C23.7016 71.0591 25.6379 70.1416 27.9819 70.5494L27.6761 72.4863C26.2494 72.1805 25.0265 72.7921 24.2112 74.1174C23.0901 75.9524 23.5997 77.7875 25.8417 79.1127C27.9819 80.438 29.9182 80.1322 31.0392 78.1952C31.8545 76.8699 31.8545 75.5447 30.8354 74.3213L32.4659 73.098C33.8927 74.933 33.9946 77.0738 32.6698 79.2147C30.8354 82.1711 27.778 82.8847 24.6188 80.9477Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M27.6761 65.7579L28.7971 64.0249L38.071 70.6513L36.95 72.2824L27.6761 65.7579Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M42.657 60.8646L39.8035 64.3307L41.1283 66.4716L39.7016 68.2046L33.7908 57.5004L34.708 56.2771L46.4277 59.9471L45.001 61.6801L42.657 60.8646ZM40.8226 60.2529L36.6443 58.8257L38.8863 62.5976L40.8226 60.2529Z\" fill=\"#FFFCFA\" />\n                    </svg>\n                    <div className=\"texto text-white\">\n                        <h2>{sociaVitalicia.nombre}</h2>\n                        <h3>{sociaVitalicia.profesion}</h3>\n                        <h3>{sociaVitalicia.fecha}</h3>\n                    </div>\n                    {(sociaVitalicia.spCode !== \"\") ?\n                        <img className=\"spcode\" src={sociaVitalicia.spCode} /> :\n                        <div></div>\n                    }\n\n                </div>\n\n                <div className=\"frasePadre\">\n                    <svg className=\"comillasA\" xmlns=\"http://www.w3.org/2000/svg\" width=\"102\" height=\"85\" viewBox=\"0 0 102 85\" fill=\"none\">\n                        <path d=\"M26.5116 37.0807L26.5427 37.5475H27.0105H39.8374V83.9659H0.702072V40.1468C0.702072 40.1468 0.702072 40.1467 0.702072 40.1466C0.709167 22.6801 7.10805 13.3329 15.6489 8.15855C24.1083 3.03355 34.742 1.95158 43.6599 1.31543L47.3362 18.2268C41.846 19.4563 36.5124 20.9115 32.6175 23.6091C30.602 25.005 28.9595 26.741 27.8792 28.9584C26.7988 31.176 26.2958 33.8439 26.5116 37.0807ZM80.2836 37.0807L80.3147 37.5475H80.7825H93.6094V83.9659H54.474V40.1468C54.474 40.1468 54.474 40.1467 54.474 40.1466C54.481 22.6802 60.8799 13.333 69.4207 8.15862C77.8801 3.03358 88.5139 1.95158 97.4318 1.31543L101.108 18.2268C95.6181 19.4562 90.2844 20.9114 86.3895 23.609C84.374 25.0049 82.7315 26.7409 81.6512 28.9584C80.5708 31.1759 80.0678 33.8439 80.2836 37.0807Z\" stroke=\"#F06F46\" />\n                    </svg>\n                    <div className=\"frase text-black dark:text-white\">\n                        <p>{sociaVitalicia.frase}</p>\n                        <span>{sociaVitalicia.frase}</span>\n                    </div>\n                    <svg className=\"comillasC\" xmlns=\"http://www.w3.org/2000/svg\" width=\"103\" height=\"85\" viewBox=\"0 0 103 85\" fill=\"none\">\n                        <path d=\"M75.8963 47.9234L75.8652 47.4567H75.3974H62.5705V1.03821H101.706V44.8573C101.706 44.8574 101.706 44.8575 101.706 44.8575C101.699 62.3241 95.2998 71.6712 86.7589 76.8456C78.2996 81.9706 67.6658 83.0526 58.7479 83.6887L55.0717 66.7773C60.5618 65.5478 65.8954 64.0926 69.7903 61.395C71.8058 59.9991 73.4483 58.2632 74.5286 56.0457C75.609 53.8282 76.1121 51.1602 75.8963 47.9234ZM22.1242 47.9234L22.0931 47.4567H21.6253H8.7984V1.03821H47.9339V44.8573C47.9339 44.8574 47.9339 44.8575 47.9339 44.8575C47.9268 62.324 41.528 71.6711 32.9871 76.8455C24.5278 81.9706 13.894 83.0526 4.97603 83.6887L1.2996 66.7774C6.78974 65.5479 12.1234 64.0927 16.0184 61.3951C18.0338 59.9992 19.6763 58.2633 20.7567 56.0458C21.837 53.8282 22.3401 51.1602 22.1242 47.9234Z\" stroke=\"#F06F46\" />\n                    </svg>\n                </div>\n                {(sociaVitalicia.darkMode === true) ?\n                    <svg className=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" width=\"243\" height=\"65\" viewBox=\"0 0 243 65\" fill=\"none\">\n                        <path d=\"M83.1493 25.1855V5.17601H79.1331V25.1855H83.1493ZM99.2121 8.33164V11.2004C98.0287 9.515 95.9848 8.00891 93.4746 8.00891C88.9922 8.00891 85.9441 12.3837 85.9441 16.7586C85.9441 21.1334 88.5977 25.5083 92.2554 25.5083C94.9807 25.5083 97.7419 23.7153 99.2121 21.8506V25.1855C99.2121 27.373 98.1005 29.3452 94.6221 29.3452C90.6417 29.3452 88.526 27.122 88.526 27.122L86.2669 29.7038C86.2669 29.7038 88.7412 32.5367 94.7297 32.5367C100.682 32.5367 103.013 29.4887 103.013 25.1855V8.33164H99.2121ZM99.2121 18.4081C97.9212 20.4162 95.5903 22.3527 93.1519 22.3527C91.2513 22.3527 89.7094 20.4521 89.7094 16.7586C89.7094 13.0651 92.4347 11.1645 94.3352 11.1645C96.5226 11.1645 98.208 12.7065 99.2121 14.4636V18.4081ZM119.427 8.33164V18.3723C118.136 20.3087 115.841 22.1734 113.367 22.1734C109.925 22.1734 109.925 18.193 109.925 15.647V8.33164H106.159V15.647C106.159 22.9623 108.454 25.5083 112.471 25.5083C115.196 25.5083 117.957 23.7153 119.427 21.8506V25.1855H123.228V8.33164H119.427ZM134.612 8.00891C130.058 8.00891 126.185 10.5191 126.185 10.5191L127.906 13.0651C127.906 13.0651 130.954 11.0928 134.863 11.0928C138.808 11.0928 139.274 12.563 139.274 15.7545V17.4758C137.624 16.3641 135.042 15.3959 132.46 15.3959C127.87 15.3959 126.006 17.942 126.006 20.4521C126.006 22.9981 127.691 25.5083 132.46 25.5083C135.042 25.5083 137.624 24.5401 139.274 23.4284V25.1855H143.075V15.7545C143.075 11.0928 141.21 8.00891 134.612 8.00891ZM139.274 20.8107C137.839 21.9582 135.688 22.9981 133.393 22.9981C131.349 22.9981 129.771 21.8148 129.771 20.4521C129.771 19.1253 130.775 17.942 133.393 17.942C135.688 17.942 137.839 18.9819 139.274 20.1294V20.8107ZM150.064 25.1855V2.2714H146.299V25.1855H150.064ZM161.437 8.00891C156.882 8.00891 153.01 10.5191 153.01 10.5191L154.731 13.0651C154.731 13.0651 157.779 11.0928 161.688 11.0928C165.632 11.0928 166.098 12.563 166.098 15.7545V17.4758C164.449 16.3641 161.867 15.3959 159.285 15.3959C154.695 15.3959 152.83 17.942 152.83 20.4521C152.83 22.9981 154.516 25.5083 159.285 25.5083C161.867 25.5083 164.449 24.5401 166.098 23.4284V25.1855H169.899V15.7545C169.899 11.0928 168.035 8.00891 161.437 8.00891ZM166.098 20.8107C164.664 21.9582 162.512 22.9981 160.217 22.9981C158.173 22.9981 156.595 21.8148 156.595 20.4521C156.595 19.1253 157.6 17.942 160.217 17.942C162.512 17.942 164.664 18.9819 166.098 20.1294V20.8107ZM183.845 8.00891C181.12 8.00891 178.358 9.80187 176.888 11.6666V8.33164H173.123V25.1855H176.888V15.1449C178.179 13.1727 180.51 11.3438 182.984 11.3438C186.391 11.3438 186.391 15.3242 186.391 17.8702V25.1855H190.192V17.8702C190.192 10.5549 187.861 8.00891 183.845 8.00891ZM205.986 2.2714V11.6307C204.802 9.94531 202.758 8.00891 200.248 8.00891C195.837 8.00891 192.718 12.3837 192.718 16.7586C192.718 21.1334 194.582 25.5083 199.029 25.5083C201.754 25.5083 204.515 24.1456 205.986 22.2809V25.1855H209.787V2.2714H205.986ZM205.986 19.0177C204.695 21.0259 202.364 22.3527 199.925 22.3527C197.415 22.3527 196.411 19.7349 196.411 16.7586C196.411 13.7464 197.917 11.1645 201.109 11.1645C203.296 11.1645 204.982 13.352 205.986 15.1091V19.0177ZM221.502 8.00891C214.725 8.00891 212.466 13.1009 212.466 16.7586C212.466 20.4162 214.725 25.5083 221.502 25.5083C228.28 25.5083 230.575 20.4162 230.575 16.7586C230.575 13.1009 228.28 8.00891 221.502 8.00891ZM221.502 22.5678C217.486 22.5678 215.98 19.2329 215.98 16.7586C215.98 14.2843 217.486 10.9494 221.502 10.9494C225.554 10.9494 227.025 14.2843 227.025 16.7586C227.025 19.2329 225.554 22.5678 221.502 22.5678ZM82.8625 57.1855V34.2714H79.0972V57.1855H82.8625ZM94.2352 40.0089C89.6811 40.0089 85.8083 42.5191 85.8083 42.5191L87.5295 45.0651C87.5295 45.0651 90.5775 43.0928 94.4862 43.0928C98.4308 43.0928 98.8969 44.563 98.8969 47.7545V49.4758C97.2474 48.3641 94.6655 47.3959 92.0836 47.3959C87.4936 47.3959 85.629 49.942 85.629 52.4521C85.629 54.9981 87.3143 57.5083 92.0836 57.5083C94.6655 57.5083 97.2474 56.5401 98.8969 55.4284V57.1855H102.698V47.7545C102.698 43.0928 100.833 40.0089 94.2352 40.0089ZM98.8969 52.8107C97.4625 53.9582 95.311 54.9981 93.016 54.9981C90.972 54.9981 89.3942 53.8148 89.3942 52.4521C89.3942 51.1253 90.3983 49.942 93.016 49.942C95.311 49.942 97.4625 50.9819 98.8969 52.1294V52.8107ZM129.097 51.6273C128.308 53.241 126.766 54.5678 124.22 54.5678C120.204 54.5678 118.913 51.2329 118.913 48.7586C118.913 46.2843 120.204 42.9494 124.22 42.9494C126.766 42.9494 128.308 44.2762 129.097 45.8898L132.073 44.1327C130.782 41.8736 128.308 40.0089 124.22 40.0089C117.442 40.0089 115.183 45.1009 115.183 48.7586C115.183 52.4162 117.442 57.5083 124.22 57.5083C128.308 57.5083 130.782 55.6436 132.073 53.3486L129.097 51.6273ZM142.386 40.0089C137.832 40.0089 133.959 42.5191 133.959 42.5191L135.681 45.0651C135.681 45.0651 138.729 43.0928 142.637 43.0928C146.582 43.0928 147.048 44.563 147.048 47.7545V49.4758C145.398 48.3641 142.817 47.3959 140.235 47.3959C135.645 47.3959 133.78 49.942 133.78 52.4521C133.78 54.9981 135.465 57.5083 140.235 57.5083C142.817 57.5083 145.398 56.5401 147.048 55.4284V57.1855H150.849V47.7545C150.849 43.0928 148.984 40.0089 142.386 40.0089ZM147.048 52.8107C145.614 53.9582 143.462 54.9981 141.167 54.9981C139.123 54.9981 137.545 53.8148 137.545 52.4521C137.545 51.1253 138.549 49.942 141.167 49.942C143.462 49.942 145.614 50.9819 147.048 52.1294V52.8107ZM164.795 40.0089C162.069 40.0089 159.308 41.8019 157.838 43.6666V40.3316H154.073V57.1855H157.838V47.1449C159.129 45.1727 161.46 43.3438 163.934 43.3438C167.341 43.3438 167.341 47.3242 167.341 49.8702V57.1855H171.142V49.8702C171.142 42.5549 168.811 40.0089 164.795 40.0089ZM187.473 51.6273C186.684 53.241 185.142 54.5678 182.596 54.5678C178.58 54.5678 177.289 51.2329 177.289 48.7586C177.289 46.2843 178.58 42.9494 182.596 42.9494C185.142 42.9494 186.684 44.2762 187.473 45.8898L190.45 44.1327C189.159 41.8736 186.684 40.0089 182.596 40.0089C175.819 40.0089 173.56 45.1009 173.56 48.7586C173.56 52.4162 175.819 57.5083 182.596 57.5083C186.684 57.5083 189.159 55.6436 190.45 53.3486L187.473 51.6273ZM203.596 40.0089C200.87 40.0089 198.109 41.8019 196.639 43.6666V34.2714H192.874V57.1855H196.639V47.1449C197.93 45.1727 200.261 43.3438 202.735 43.3438C206.142 43.3438 206.142 47.3242 206.142 49.8702V57.1855H209.943V49.8702C209.943 42.5549 207.612 40.0089 203.596 40.0089ZM221.039 40.0089C216.485 40.0089 212.612 42.5191 212.612 42.5191L214.333 45.0651C214.333 45.0651 217.381 43.0928 221.29 43.0928C225.234 43.0928 225.7 44.563 225.7 47.7545V49.4758C224.051 48.3641 221.469 47.3959 218.887 47.3959C214.297 47.3959 212.432 49.942 212.432 52.4521C212.432 54.9981 214.118 57.5083 218.887 57.5083C221.469 57.5083 224.051 56.5401 225.7 55.4284V57.1855H229.502V47.7545C229.502 43.0928 227.637 40.0089 221.039 40.0089ZM225.7 52.8107C224.266 53.9582 222.114 54.9981 219.819 54.9981C217.776 54.9981 216.198 53.8148 216.198 52.4521C216.198 51.1253 217.202 49.942 219.819 49.942C222.114 49.942 224.266 50.9819 225.7 52.1294V52.8107Z\" fill=\"white\" />\n                        <path d=\"M8.41942 27.1621C10.1865 23.4083 14.1602 21.4007 18.0638 21.9586C18.9513 22.0855 19.8353 22.345 20.6889 22.7468C22.7088 23.6976 24.2232 25.2875 25.1042 27.1615C26.2327 29.562 26.3222 32.4288 25.1042 35.0162\" stroke=\"white\" strokeWidth=\"5.68166\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M14.0475 36.8575C17.2329 38.357 21.0308 36.9903 22.5303 33.8049L27.6708 36.2247C25.2239 41.4229 19.5408 44.0602 14.1578 42.8642L13.0512 45.215L15.0354 46.149C15.7047 46.4641 15.9918 47.262 15.6768 47.9313L14.7943 49.8059C14.4793 50.4752 13.6813 50.7623 13.012 50.4473L11.0279 49.5133L9.05402 53.7064C8.80198 54.2419 8.16362 54.4716 7.62819 54.2195L4.81646 52.896C4.28104 52.6439 4.05132 52.0056 4.30336 51.4701L6.27723 47.277L4.25453 46.3248C3.58525 46.0098 3.2981 45.2118 3.61314 44.5425L4.49558 42.668C4.81063 41.9987 5.60859 41.7115 6.27786 42.0266L8.30056 42.9787L9.40096 40.6411C5.009 37.2627 3.39737 31.1741 5.85425 25.9549L10.9948 28.3748C9.49534 31.5602 10.8621 35.358 14.0475 36.8575Z\" fill=\"white\" />\n                        <mask id=\"path-4-outside-1_101_2632\" maskUnits=\"userSpaceOnUse\" x=\"10.2749\" y=\"-0.1875\" width=\"49\" height=\"39\" fill=\"black\">\n                            <rect fill=\"white\" x=\"10.2749\" y=\"-0.1875\" width=\"49\" height=\"39\" />\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27.9712 9.5403C27.0583 9.40602 26.4271 8.5571 26.5613 7.64419L27.2091 3.24033C27.3434 2.32742 28.1924 1.69622 29.1053 1.83051C30.0182 1.9648 30.6494 2.81371 30.5151 3.72662L29.8673 8.13049C29.733 9.04339 28.8841 9.67459 27.9712 9.5403ZM20.0791 8.84904C20.3432 9.73316 21.274 10.2358 22.1582 9.97168C23.0423 9.70758 23.5449 8.77675 23.2808 7.89263L22.0067 3.6276C21.7426 2.74348 20.8118 2.24085 19.9277 2.50496C19.0436 2.76906 18.5409 3.69989 18.805 4.58401L20.0791 8.84904ZM31.3799 14.2672C31.253 14.2101 31.1228 14.1701 30.9918 14.1462C25.937 12.3946 20.3719 14.206 17.2876 18.4476C16.8329 19.0669 16.4311 19.7389 16.0916 20.4601L16.0964 20.4624C13.2605 26.4869 15.8453 33.6697 21.8698 36.5056C27.8942 39.3415 35.077 36.7567 37.9129 30.7322L37.9169 30.7341C38.0357 30.4816 38.145 30.2271 38.245 29.971C38.2945 29.9008 38.3431 29.8306 38.3908 29.7604L52.9232 31.542C53.5271 31.616 54.1235 31.356 54.4801 30.8631L57.0507 28.0321C57.3451 27.6252 57.4408 27.1075 57.3114 26.6222C57.182 26.1369 56.8412 25.7356 56.3832 25.5294L31.3799 14.2672ZM32.7763 28.3142C34.2769 25.1264 32.9092 21.3256 29.7213 19.825C26.5335 18.3244 22.7327 19.6922 21.2321 22.88L21.237 22.8823C19.7375 26.0677 21.1042 29.8655 24.2896 31.365C27.475 32.8645 31.2729 31.4978 32.7724 28.3124L32.7763 28.3142ZM17.3958 14.3313C16.7621 15.002 15.7047 15.0321 15.0339 14.3984L11.7983 11.3415C11.1276 10.7079 11.0975 9.65043 11.7312 8.9797C12.3649 8.30896 13.4223 8.27891 14.093 8.91259L17.3287 11.9694C17.9994 12.6031 18.0294 13.6605 17.3958 14.3313Z\" />\n                        </mask>\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27.9712 9.5403C27.0583 9.40602 26.4271 8.5571 26.5613 7.64419L27.2091 3.24033C27.3434 2.32742 28.1924 1.69622 29.1053 1.83051C30.0182 1.9648 30.6494 2.81371 30.5151 3.72662L29.8673 8.13049C29.733 9.04339 28.8841 9.67459 27.9712 9.5403ZM20.0791 8.84904C20.3432 9.73316 21.274 10.2358 22.1582 9.97168C23.0423 9.70758 23.5449 8.77675 23.2808 7.89263L22.0067 3.6276C21.7426 2.74348 20.8118 2.24085 19.9277 2.50496C19.0436 2.76906 18.5409 3.69989 18.805 4.58401L20.0791 8.84904ZM31.3799 14.2672C31.253 14.2101 31.1228 14.1701 30.9918 14.1462C25.937 12.3946 20.3719 14.206 17.2876 18.4476C16.8329 19.0669 16.4311 19.7389 16.0916 20.4601L16.0964 20.4624C13.2605 26.4869 15.8453 33.6697 21.8698 36.5056C27.8942 39.3415 35.077 36.7567 37.9129 30.7322L37.9169 30.7341C38.0357 30.4816 38.145 30.2271 38.245 29.971C38.2945 29.9008 38.3431 29.8306 38.3908 29.7604L52.9232 31.542C53.5271 31.616 54.1235 31.356 54.4801 30.8631L57.0507 28.0321C57.3451 27.6252 57.4408 27.1075 57.3114 26.6222C57.182 26.1369 56.8412 25.7356 56.3832 25.5294L31.3799 14.2672ZM32.7763 28.3142C34.2769 25.1264 32.9092 21.3256 29.7213 19.825C26.5335 18.3244 22.7327 19.6922 21.2321 22.88L21.237 22.8823C19.7375 26.0677 21.1042 29.8655 24.2896 31.365C27.475 32.8645 31.2729 31.4978 32.7724 28.3124L32.7763 28.3142ZM17.3958 14.3313C16.7621 15.002 15.7047 15.0321 15.0339 14.3984L11.7983 11.3415C11.1276 10.7079 11.0975 9.65043 11.7312 8.9797C12.3649 8.30896 13.4223 8.27891 14.093 8.91259L17.3287 11.9694C17.9994 12.6031 18.0294 13.6605 17.3958 14.3313Z\" fill=\"white\" />\n                        <path d=\"M26.5613 7.64419L25.572 7.49866L25.572 7.49866L26.5613 7.64419ZM27.2091 3.24033L28.1985 3.38586V3.38586L27.2091 3.24033ZM29.1053 1.83051L29.2508 0.841155L29.1053 1.83051ZM30.5151 3.72662L29.5257 3.58109V3.58109L30.5151 3.72662ZM29.8673 8.13049L30.8566 8.27602V8.27602L29.8673 8.13049ZM22.1582 9.97168L22.4444 10.9298H22.4444L22.1582 9.97168ZM20.0791 8.84904L21.0373 8.56282V8.56282L20.0791 8.84904ZM23.2808 7.89263L22.3226 8.17885V8.17885L23.2808 7.89263ZM22.0067 3.6276L22.9649 3.34138V3.34138L22.0067 3.6276ZM19.9277 2.50496L20.2139 3.46312V3.46312L19.9277 2.50496ZM18.805 4.58401L17.8469 4.87024V4.87024L18.805 4.58401ZM30.9918 14.1462L30.6643 15.0911L30.737 15.1163L30.8127 15.13L30.9918 14.1462ZM31.3799 14.2672L31.7906 13.3554L31.7906 13.3554L31.3799 14.2672ZM17.2876 18.4476L18.0937 19.0393L18.0963 19.0357L17.2876 18.4476ZM16.0916 20.4601L15.1868 20.0342L14.7602 20.9404L15.667 21.3656L16.0916 20.4601ZM16.0964 20.4624L17.0012 20.8883L17.4277 19.9822L16.5209 19.557L16.0964 20.4624ZM21.8698 36.5056L21.4439 37.4104L21.8698 36.5056ZM37.9129 30.7322L38.3407 29.8283L37.435 29.3997L37.0082 30.3063L37.9129 30.7322ZM37.9169 30.7341L37.4891 31.638L38.3948 32.0666L38.8216 31.16L37.9169 30.7341ZM38.245 29.971L37.4282 29.394L37.3578 29.4937L37.3134 29.6074L38.245 29.971ZM38.3908 29.7604L38.5124 28.7678L37.906 28.6935L37.5631 29.1992L38.3908 29.7604ZM52.9232 31.542L52.8015 32.5346L52.9232 31.542ZM54.4801 30.8631L53.7398 30.1908L53.7025 30.2319L53.6699 30.2769L54.4801 30.8631ZM57.0507 28.0321L57.791 28.7043L57.8283 28.6633L57.8608 28.6183L57.0507 28.0321ZM57.3114 26.6222L58.2776 26.3645V26.3645L57.3114 26.6222ZM56.3832 25.5294L55.9726 26.4412L56.3832 25.5294ZM32.7763 28.3142L32.3483 29.218L33.2542 29.647L33.6811 28.7401L32.7763 28.3142ZM29.7213 19.825L29.2954 20.7298L29.7213 19.825ZM21.2321 22.88L20.3274 22.4541L19.9008 23.3603L20.8076 23.7854L21.2321 22.88ZM21.237 22.8823L22.1417 23.3082L22.5683 22.402L21.6614 21.9768L21.237 22.8823ZM24.2896 31.365L24.7155 30.4602H24.7155L24.2896 31.365ZM32.7724 28.3124L33.2003 27.4086L32.2945 26.9796L31.8676 27.8865L32.7724 28.3124ZM15.0339 14.3984L14.3472 15.1253L14.3472 15.1253L15.0339 14.3984ZM17.3958 14.3313L16.6689 13.6445L17.3958 14.3313ZM11.7983 11.3415L12.485 10.6146H12.485L11.7983 11.3415ZM11.7312 8.9797L12.4581 9.66643H12.4581L11.7312 8.9797ZM14.093 8.91259L13.4063 9.63949H13.4063L14.093 8.91259ZM17.3287 11.9694L18.0154 11.2425H18.0154L17.3287 11.9694ZM25.572 7.49866C25.3573 8.95797 26.3663 10.315 27.8256 10.5297L28.1167 8.55095C27.7502 8.49704 27.4968 8.15623 27.5507 7.78972L25.572 7.49866ZM26.2198 3.09479L25.572 7.49866L27.5507 7.78972L28.1985 3.38586L26.2198 3.09479ZM29.2508 0.841155C27.7915 0.626495 26.4345 1.63548 26.2198 3.09479L28.1985 3.38586C28.2524 3.01936 28.5932 2.76595 28.9597 2.81986L29.2508 0.841155ZM31.5044 3.87215C31.7191 2.41284 30.7101 1.05582 29.2508 0.841155L28.9597 2.81986C29.3262 2.87377 29.5796 3.21459 29.5257 3.58109L31.5044 3.87215ZM30.8566 8.27602L31.5044 3.87215L29.5257 3.58109L28.8779 7.98495L30.8566 8.27602ZM27.8256 10.5297C29.2849 10.7443 30.642 9.73533 30.8566 8.27602L28.8779 7.98495C28.824 8.35146 28.4832 8.60486 28.1167 8.55095L27.8256 10.5297ZM21.8719 9.01352C21.517 9.11955 21.1433 8.91776 21.0373 8.56282L19.1209 9.13526C19.5431 10.5486 21.0311 11.352 22.4444 10.9298L21.8719 9.01352ZM22.3226 8.17885C22.4287 8.53379 22.2269 8.90749 21.8719 9.01352L22.4444 10.9298C23.8577 10.5077 24.6611 9.01971 24.239 7.6064L22.3226 8.17885ZM21.0486 3.91382L22.3226 8.17885L24.239 7.6064L22.9649 3.34138L21.0486 3.91382ZM20.2139 3.46312C20.5689 3.35709 20.9426 3.55888 21.0486 3.91382L22.9649 3.34138C22.5427 1.92807 21.0548 1.12461 19.6415 1.54679L20.2139 3.46312ZM19.7632 4.29779C19.6572 3.94284 19.859 3.56915 20.2139 3.46312L19.6415 1.54679C18.2282 1.96898 17.4247 3.45693 17.8469 4.87024L19.7632 4.29779ZM21.0373 8.56282L19.7632 4.29779L17.8469 4.87024L19.1209 9.13526L21.0373 8.56282ZM30.8127 15.13C30.8645 15.1395 30.9169 15.1554 30.9692 15.179L31.7906 13.3554C31.5891 13.2647 31.3811 13.2006 31.1709 13.1624L30.8127 15.13ZM18.0963 19.0357C20.9247 15.1462 26.0302 13.4852 30.6643 15.0911L31.3192 13.2013C25.8439 11.304 19.8192 13.2658 16.4788 17.8594L18.0963 19.0357ZM16.9963 20.886C17.3082 20.2234 17.677 19.6069 18.0937 19.0393L16.4815 17.8558C15.9888 18.5268 15.5539 19.2543 15.1868 20.0342L16.9963 20.886ZM16.5209 19.557L16.5161 19.5547L15.667 21.3656L15.6719 21.3678L16.5209 19.557ZM15.1916 20.0365C12.1205 26.5607 14.9197 34.3392 21.4439 37.4104L22.2957 35.6008C16.7709 33.0001 14.4005 26.4131 17.0012 20.8883L15.1916 20.0365ZM21.4439 37.4104C27.968 40.4815 35.7466 37.6823 38.8177 31.1581L37.0082 30.3063C34.4075 35.8311 27.8205 38.2015 22.2957 35.6008L21.4439 37.4104ZM38.3446 29.8302L38.3407 29.8283L37.4852 31.6361L37.4891 31.638L38.3446 29.8302ZM37.3134 29.6074C37.2217 29.8425 37.1213 30.0762 37.0121 30.3082L38.8216 31.16C38.9501 30.887 39.0684 30.6117 39.1766 30.3345L37.3134 29.6074ZM37.5631 29.1992C37.5191 29.2641 37.4741 29.3291 37.4282 29.394L39.0618 30.5479C39.1149 30.4726 39.1672 30.3972 39.2184 30.3216L37.5631 29.1992ZM53.0449 30.5494L38.5124 28.7678L38.2691 30.753L52.8015 32.5346L53.0449 30.5494ZM53.6699 30.2769C53.5268 30.4747 53.2873 30.5792 53.0449 30.5494L52.8015 32.5346C53.7668 32.6529 54.7202 32.2372 55.2903 31.4493L53.6699 30.2769ZM56.3103 27.3599L53.7398 30.1908L55.2204 31.5353L57.791 28.7043L56.3103 27.3599ZM56.3452 26.8799C56.3971 27.0747 56.3587 27.2826 56.2405 27.4459L57.8608 28.6183C58.3315 27.9679 58.4845 27.1402 58.2776 26.3645L56.3452 26.8799ZM55.9726 26.4412C56.1564 26.524 56.2932 26.6851 56.3452 26.8799L58.2776 26.3645C58.0708 25.5888 57.5259 24.9473 56.7939 24.6176L55.9726 26.4412ZM30.9692 15.179L55.9726 26.4412L56.7939 24.6176L31.7906 13.3554L30.9692 15.179ZM33.6811 28.7401C35.4169 25.0526 33.8348 20.6561 30.1472 18.9203L29.2954 20.7298C31.9836 21.9952 33.1369 25.2002 31.8715 27.8883L33.6811 28.7401ZM30.1472 18.9203C26.4597 17.1844 22.0632 18.7666 20.3274 22.4541L22.1369 23.3059C23.4023 20.6177 26.6073 19.4644 29.2954 20.7298L30.1472 18.9203ZM21.6614 21.9768L21.6566 21.9745L20.8076 23.7854L20.8125 23.7877L21.6614 21.9768ZM24.7155 30.4602C22.0298 29.196 20.8775 25.9939 22.1417 23.3082L20.3322 22.4564C18.5975 26.1415 20.1786 30.5351 23.8637 32.2698L24.7155 30.4602ZM31.8676 27.8865C30.6033 30.5722 27.4012 31.7245 24.7155 30.4602L23.8637 32.2698C27.5488 34.0045 31.9424 32.4234 33.6771 28.7383L31.8676 27.8865ZM33.2042 27.4104L33.2003 27.4086L32.3444 29.2162L32.3483 29.218L33.2042 27.4104ZM14.3472 15.1253C15.4194 16.1382 17.1097 16.0902 18.1227 15.018L16.6689 13.6445C16.4145 13.9138 15.9899 13.9259 15.7207 13.6715L14.3472 15.1253ZM11.1116 12.0684L14.3472 15.1253L15.7207 13.6715L12.485 10.6146L11.1116 12.0684ZM11.0043 8.29296C9.99133 9.36515 10.0394 11.0555 11.1116 12.0684L12.485 10.6146C12.2157 10.3602 12.2037 9.93571 12.4581 9.66643L11.0043 8.29296ZM14.7798 8.18568C13.7076 7.17273 12.0172 7.22076 11.0043 8.29296L12.4581 9.66643C12.7125 9.39716 13.137 9.38509 13.4063 9.63949L14.7798 8.18568ZM18.0154 11.2425L14.7798 8.18568L13.4063 9.63949L16.6419 12.6963L18.0154 11.2425ZM18.1227 15.018C19.1356 13.9458 19.0876 12.2555 18.0154 11.2425L16.6419 12.6963C16.9112 12.9507 16.9233 13.3753 16.6689 13.6445L18.1227 15.018Z\" fill=\"black\" mask=\"url(#path-4-outside-1_101_2632)\" />\n                        <path d=\"M22.5334 28.3702C21.9233 27.0725 20.8789 25.9761 19.479 25.3171C18.8841 25.037 18.2727 24.8582 17.6619 24.7709C14.9586 24.3845 12.2106 25.7787 10.9898 28.3721M27.6752 25.9529C26.5232 23.5026 24.5389 21.4193 21.8989 20.1765C20.7867 19.653 19.6301 19.3128 18.4658 19.1464C13.362 18.4169 8.16249 21.038 5.8492 25.9522\" stroke=\"#171717\" strokeWidth=\"2\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M19.4792 25.3161C20.8791 25.9751 21.9235 27.0715 22.5336 28.3692L27.6754 25.9519C26.5234 23.5016 24.5391 21.4183 21.8991 20.1755C20.7869 19.652 19.6303 19.3118 18.466 19.1454C13.3623 18.4159 8.16274 21.037 5.84944 25.9512L10.99 28.3711C12.2108 25.7777 14.9588 24.3835 17.6621 24.7699C18.273 24.8572 18.8843 25.0361 19.4792 25.3161Z\" fill=\"white\" />\n                    </svg> :\n                    <svg className=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" width=\"255\" height=\"70\" viewBox=\"0 0 255 70\" fill=\"none\">\n                        <path d=\"M95.0961 30.1859V10.1763H91.0799V30.1859H95.0961ZM111.159 13.3319V16.2007C109.976 14.5153 107.932 13.0092 105.421 13.0092C100.939 13.0092 97.8909 17.3841 97.8909 21.7589C97.8909 26.1337 100.544 30.5086 104.202 30.5086C106.927 30.5086 109.689 28.7156 111.159 26.8509V30.1859C111.159 32.3733 110.047 34.3455 106.569 34.3455C102.588 34.3455 100.473 32.1223 100.473 32.1223L98.2136 34.7041C98.2136 34.7041 100.688 37.537 106.676 37.537C112.629 37.537 114.96 34.489 114.96 30.1859V13.3319H111.159ZM111.159 23.4084C109.868 25.4166 107.537 27.353 105.099 27.353C103.198 27.353 101.656 25.4524 101.656 21.7589C101.656 18.0654 104.381 16.1648 106.282 16.1648C108.469 16.1648 110.155 17.7068 111.159 19.4639V23.4084ZM131.374 13.3319V23.3726C130.083 25.309 127.788 27.1737 125.314 27.1737C121.871 27.1737 121.871 23.1933 121.871 20.6473V13.3319H118.106V20.6473C118.106 27.9626 120.401 30.5086 124.417 30.5086C127.143 30.5086 129.904 28.7156 131.374 26.8509V30.1859H135.175V13.3319H131.374ZM146.559 13.0092C142.005 13.0092 138.132 15.5194 138.132 15.5194L139.853 18.0654C139.853 18.0654 142.901 16.0931 146.81 16.0931C150.754 16.0931 151.221 17.5634 151.221 20.7548V22.4761C149.571 21.3644 146.989 20.3962 144.407 20.3962C139.817 20.3962 137.953 22.9423 137.953 25.4524C137.953 27.9984 139.638 30.5086 144.407 30.5086C146.989 30.5086 149.571 29.5404 151.221 28.4287V30.1859H155.022V20.7548C155.022 16.0931 153.157 13.0092 146.559 13.0092ZM151.221 25.811C149.786 26.9585 147.635 27.9984 145.34 27.9984C143.296 27.9984 141.718 26.8151 141.718 25.4524C141.718 24.1256 142.722 22.9423 145.34 22.9423C147.635 22.9423 149.786 23.9822 151.221 25.1297V25.811ZM162.011 30.1859V7.27171H158.245V30.1859H162.011ZM173.383 13.0092C168.829 13.0092 164.956 15.5194 164.956 15.5194L166.678 18.0654C166.678 18.0654 169.726 16.0931 173.634 16.0931C177.579 16.0931 178.045 17.5634 178.045 20.7548V22.4761C176.395 21.3644 173.814 20.3962 171.232 20.3962C166.642 20.3962 164.777 22.9423 164.777 25.4524C164.777 27.9984 166.462 30.5086 171.232 30.5086C173.814 30.5086 176.395 29.5404 178.045 28.4287V30.1859H181.846V20.7548C181.846 16.0931 179.981 13.0092 173.383 13.0092ZM178.045 25.811C176.611 26.9585 174.459 27.9984 172.164 27.9984C170.12 27.9984 168.542 26.8151 168.542 25.4524C168.542 24.1256 169.546 22.9423 172.164 22.9423C174.459 22.9423 176.611 23.9822 178.045 25.1297V25.811ZM195.792 13.0092C193.066 13.0092 190.305 14.8022 188.835 16.6669V13.3319H185.07V30.1859H188.835V20.1452C190.126 18.173 192.457 16.3441 194.931 16.3441C198.338 16.3441 198.338 20.3245 198.338 22.8705V30.1859H202.139V22.8705C202.139 15.5552 199.808 13.0092 195.792 13.0092ZM217.932 7.27171V16.631C216.749 14.9456 214.705 13.0092 212.195 13.0092C207.784 13.0092 204.664 17.3841 204.664 21.7589C204.664 26.1337 206.529 30.5086 210.976 30.5086C213.701 30.5086 216.462 29.1459 217.932 27.2812V30.1859H221.733V7.27171H217.932ZM217.932 24.018C216.641 26.0262 214.311 27.353 211.872 27.353C209.362 27.353 208.358 24.7352 208.358 21.7589C208.358 18.7467 209.864 16.1648 213.056 16.1648C215.243 16.1648 216.928 18.3523 217.932 20.1094V24.018ZM233.449 13.0092C226.672 13.0092 224.413 18.1012 224.413 21.7589C224.413 25.4166 226.672 30.5086 233.449 30.5086C240.227 30.5086 242.522 25.4166 242.522 21.7589C242.522 18.1012 240.227 13.0092 233.449 13.0092ZM233.449 27.5681C229.433 27.5681 227.927 24.2332 227.927 21.7589C227.927 19.2846 229.433 15.9497 233.449 15.9497C237.501 15.9497 238.971 19.2846 238.971 21.7589C238.971 24.2332 237.501 27.5681 233.449 27.5681ZM94.8092 62.1859V39.2717H91.044V62.1859H94.8092ZM106.182 45.0092C101.628 45.0092 97.755 47.5194 97.755 47.5194L99.4763 50.0654C99.4763 50.0654 102.524 48.0931 106.433 48.0931C110.378 48.0931 110.844 49.5634 110.844 52.7548V54.4761C109.194 53.3644 106.612 52.3962 104.03 52.3962C99.4404 52.3962 97.5757 54.9423 97.5757 57.4524C97.5757 59.9984 99.2611 62.5086 104.03 62.5086C106.612 62.5086 109.194 61.5404 110.844 60.4287V62.1859H114.645V52.7548C114.645 48.0931 112.78 45.0092 106.182 45.0092ZM110.844 57.811C109.409 58.9585 107.258 59.9984 104.963 59.9984C102.919 59.9984 101.341 58.8151 101.341 57.4524C101.341 56.1256 102.345 54.9423 104.963 54.9423C107.258 54.9423 109.409 55.9822 110.844 57.1297V57.811ZM141.043 56.6276C140.255 58.2413 138.713 59.5681 136.167 59.5681C132.15 59.5681 130.859 56.2332 130.859 53.7589C130.859 51.2846 132.15 47.9497 136.167 47.9497C138.713 47.9497 140.255 49.2765 141.043 50.8901L144.02 49.133C142.729 46.8739 140.255 45.0092 136.167 45.0092C129.389 45.0092 127.13 50.1012 127.13 53.7589C127.13 57.4166 129.389 62.5086 136.167 62.5086C140.255 62.5086 142.729 60.6439 144.02 58.3489L141.043 56.6276ZM154.333 45.0092C149.779 45.0092 145.906 47.5194 145.906 47.5194L147.627 50.0654C147.627 50.0654 150.675 48.0931 154.584 48.0931C158.529 48.0931 158.995 49.5634 158.995 52.7548V54.4761C157.345 53.3644 154.763 52.3962 152.181 52.3962C147.591 52.3962 145.727 54.9423 145.727 57.4524C145.727 59.9984 147.412 62.5086 152.181 62.5086C154.763 62.5086 157.345 61.5404 158.995 60.4287V62.1859H162.796V52.7548C162.796 48.0931 160.931 45.0092 154.333 45.0092ZM158.995 57.811C157.56 58.9585 155.409 59.9984 153.114 59.9984C151.07 59.9984 149.492 58.8151 149.492 57.4524C149.492 56.1256 150.496 54.9423 153.114 54.9423C155.409 54.9423 157.56 55.9822 158.995 57.1297V57.811ZM176.741 45.0092C174.016 45.0092 171.255 46.8022 169.785 48.6669V45.3319H166.02V62.1859H169.785V52.1452C171.076 50.173 173.407 48.3441 175.881 48.3441C179.287 48.3441 179.287 52.3245 179.287 54.8705V62.1859H183.089V54.8705C183.089 47.5552 180.758 45.0092 176.741 45.0092ZM199.42 56.6276C198.631 58.2413 197.089 59.5681 194.543 59.5681C190.527 59.5681 189.236 56.2332 189.236 53.7589C189.236 51.2846 190.527 47.9497 194.543 47.9497C197.089 47.9497 198.631 49.2765 199.42 50.8901L202.396 49.133C201.105 46.8739 198.631 45.0092 194.543 45.0092C187.766 45.0092 185.507 50.1012 185.507 53.7589C185.507 57.4166 187.766 62.5086 194.543 62.5086C198.631 62.5086 201.105 60.6439 202.396 58.3489L199.42 56.6276ZM215.542 45.0092C212.817 45.0092 210.056 46.8022 208.586 48.6669V39.2717H204.82V62.1859H208.586V52.1452C209.877 50.173 212.208 48.3441 214.682 48.3441C218.088 48.3441 218.088 52.3245 218.088 54.8705V62.1859H221.89V54.8705C221.89 47.5552 219.559 45.0092 215.542 45.0092ZM232.985 45.0092C228.431 45.0092 224.559 47.5194 224.559 47.5194L226.28 50.0654C226.28 50.0654 229.328 48.0931 233.237 48.0931C237.181 48.0931 237.647 49.5634 237.647 52.7548V54.4761C235.998 53.3644 233.416 52.3962 230.834 52.3962C226.244 52.3962 224.379 54.9423 224.379 57.4524C224.379 59.9984 226.065 62.5086 230.834 62.5086C233.416 62.5086 235.998 61.5404 237.647 60.4287V62.1859H241.448V52.7548C241.448 48.0931 239.584 45.0092 232.985 45.0092ZM237.647 57.811C236.213 58.9585 234.061 59.9984 231.766 59.9984C229.722 59.9984 228.144 58.8151 228.144 57.4524C228.144 56.1256 229.149 54.9423 231.766 54.9423C234.061 54.9423 236.213 55.9822 237.647 57.1297V57.811Z\" fill=\"#031030\" />\n                        <path d=\"M9.53029 31.7073C11.6407 27.224 16.3867 24.8262 21.0487 25.4926C22.1088 25.6441 23.1645 25.954 24.184 26.4339C26.5964 27.5696 28.4051 29.4683 29.4573 31.7066C30.8051 34.5735 30.912 37.9974 29.4573 41.0876\" stroke=\"#031030\" strokeWidth=\"6.78574\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.2526 43.286C20.057 45.0769 24.5929 43.4446 26.3838 39.6401L32.5233 42.5302C29.6009 48.7385 22.8134 51.8883 16.3844 50.4599L15.0628 53.2676L17.4334 54.3835C18.2328 54.7598 18.5757 55.7128 18.1994 56.5121L17.1455 58.751C16.7693 59.5503 15.8162 59.8933 15.0169 59.517L12.6463 58.4011L10.2889 63.4089C9.9879 64.0483 9.22548 64.3227 8.58602 64.0217L5.2279 62.4409C4.58844 62.1399 4.31407 61.3775 4.61509 60.738L6.97245 55.7302L4.55762 54.5934C3.75829 54.2172 3.41533 53.2642 3.7916 52.4648L4.84551 50.226C5.22179 49.4266 6.1748 49.0837 6.97413 49.46L9.38896 50.5967L10.7032 47.8048C5.45776 43.7699 3.53295 36.4982 6.46725 30.2647L12.6068 33.1548C10.8159 36.9592 12.4482 41.4951 16.2526 43.286Z\" fill=\"#031030\" />\n                        <mask id=\"path-4-outside-1_101_2517\" maskUnits=\"userSpaceOnUse\" x=\"10.9401\" y=\"-0.568359\" width=\"59\" height=\"47\" fill=\"black\">\n                            <rect fill=\"white\" x=\"10.9401\" y=\"-0.568359\" width=\"59\" height=\"47\" />\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M32.8814 10.6611C31.7911 10.5007 31.0372 9.48687 31.1976 8.39656L31.9713 3.13692C32.1317 2.04662 33.1456 1.29277 34.2359 1.45315C35.3262 1.61353 36.08 2.62741 35.9196 3.71772L35.146 8.97735C34.9856 10.0677 33.9717 10.8215 32.8814 10.6611ZM23.4547 9.83507C23.7702 10.891 24.8819 11.4913 25.9378 11.1759C26.9937 10.8604 27.594 9.74874 27.2786 8.69281L25.757 3.59899C25.4416 2.54306 24.3298 1.94276 23.2739 2.25819C22.218 2.57362 21.6177 3.68532 21.9331 4.74126L23.4547 9.83507ZM36.9525 16.3057C36.801 16.2374 36.6454 16.1896 36.489 16.1612C30.3342 14.0284 23.546 16.3186 19.9096 21.5981C19.4531 22.2542 19.0453 22.9572 18.6935 23.7046L18.6983 23.7069C15.3115 30.902 18.3987 39.4803 25.5937 42.8673C32.7888 46.2542 41.3672 43.1673 44.7543 35.9723L44.76 35.975C44.9029 35.6713 45.0343 35.3652 45.1544 35.0571C45.2126 34.9747 45.2697 34.8921 45.3257 34.8095L62.6822 36.9374C63.4034 37.0258 64.1157 36.7152 64.5416 36.1265L67.6117 32.7454C67.9633 32.2594 68.0777 31.6411 67.9231 31.0615C67.7686 30.482 67.3615 30.0027 66.8146 29.7563L36.9525 16.3057ZM38.6206 33.0846C40.4126 29.2774 38.7791 24.7383 34.9719 22.9461C31.1647 21.1539 26.6255 22.7873 24.8332 26.5944L24.838 26.5966C23.0471 30.401 24.6794 34.9369 28.4838 36.7278C32.2882 38.5187 36.8241 36.8864 38.6149 33.0819L38.6206 33.0846ZM20.2504 16.3824C19.4935 17.1835 18.2306 17.2194 17.4296 16.4626L13.5652 12.8117C12.7641 12.0549 12.7282 10.792 13.485 9.99093C14.2418 9.18985 15.5047 9.15396 16.3058 9.91078L20.1702 13.5616C20.9713 14.3184 21.0072 15.5814 20.2504 16.3824Z\" />\n                        </mask>\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M32.8814 10.6611C31.7911 10.5007 31.0372 9.48687 31.1976 8.39656L31.9713 3.13692C32.1317 2.04662 33.1456 1.29277 34.2359 1.45315C35.3262 1.61353 36.08 2.62741 35.9196 3.71772L35.146 8.97735C34.9856 10.0677 33.9717 10.8215 32.8814 10.6611ZM23.4547 9.83507C23.7702 10.891 24.8819 11.4913 25.9378 11.1759C26.9937 10.8604 27.594 9.74874 27.2786 8.69281L25.757 3.59899C25.4416 2.54306 24.3298 1.94276 23.2739 2.25819C22.218 2.57362 21.6177 3.68532 21.9331 4.74126L23.4547 9.83507ZM36.9525 16.3057C36.801 16.2374 36.6454 16.1896 36.489 16.1612C30.3342 14.0284 23.546 16.3186 19.9096 21.5981C19.4531 22.2542 19.0453 22.9572 18.6935 23.7046L18.6983 23.7069C15.3115 30.902 18.3987 39.4803 25.5937 42.8673C32.7888 46.2542 41.3672 43.1673 44.7543 35.9723L44.76 35.975C44.9029 35.6713 45.0343 35.3652 45.1544 35.0571C45.2126 34.9747 45.2697 34.8921 45.3257 34.8095L62.6822 36.9374C63.4034 37.0258 64.1157 36.7152 64.5416 36.1265L67.6117 32.7454C67.9633 32.2594 68.0777 31.6411 67.9231 31.0615C67.7686 30.482 67.3615 30.0027 66.8146 29.7563L36.9525 16.3057ZM38.6206 33.0846C40.4126 29.2774 38.7791 24.7383 34.9719 22.9461C31.1647 21.1539 26.6255 22.7873 24.8332 26.5944L24.838 26.5966C23.0471 30.401 24.6794 34.9369 28.4838 36.7278C32.2882 38.5187 36.8241 36.8864 38.6149 33.0819L38.6206 33.0846ZM20.2504 16.3824C19.4935 17.1835 18.2306 17.2194 17.4296 16.4626L13.5652 12.8117C12.7641 12.0549 12.7282 10.792 13.485 9.99093C14.2418 9.18985 15.5047 9.15396 16.3058 9.91078L20.1702 13.5616C20.9713 14.3184 21.0072 15.5814 20.2504 16.3824Z\" fill=\"#031030\" />\n                        <path d=\"M31.1976 8.39656L32.3792 8.57037L32.3792 8.57037L31.1976 8.39656ZM31.9713 3.13692L30.7897 2.96311L30.7897 2.96311L31.9713 3.13692ZM34.2359 1.45315L34.4097 0.271542L34.2359 1.45315ZM35.9196 3.71772L37.1012 3.89153V3.89153L35.9196 3.71772ZM35.146 8.97735L36.3276 9.15117L36.3276 9.15116L35.146 8.97735ZM25.9378 11.1759L25.596 10.0315H25.596L25.9378 11.1759ZM23.4547 9.83507L22.3104 10.1769V10.1769L23.4547 9.83507ZM27.2786 8.69281L26.1342 9.03465L27.2786 8.69281ZM25.757 3.59899L24.6126 3.94083L25.757 3.59899ZM23.2739 2.25819L22.9321 1.11384V1.11384L23.2739 2.25819ZM21.9331 4.74126L23.0775 4.39941L21.9331 4.74126ZM36.489 16.1612L36.0979 17.2896L36.1847 17.3197L36.2751 17.3362L36.489 16.1612ZM36.9525 16.3057L36.462 17.3946V17.3946L36.9525 16.3057ZM19.9096 21.5981L20.89 22.2801L20.8932 22.2756L19.9096 21.5981ZM18.6935 23.7046L17.6129 23.1959L17.1043 24.2765L18.1848 24.7852L18.6935 23.7046ZM18.6983 23.7069L19.7789 24.2155L20.2875 23.135L19.2071 22.6263L18.6983 23.7069ZM25.5937 42.8673L26.1024 41.7867H26.1024L25.5937 42.8673ZM44.7543 35.9723L45.2627 34.8916L44.1823 34.3833L43.6737 35.4636L44.7543 35.9723ZM44.76 35.975L44.2516 37.0557L45.332 37.564L45.8406 36.4837L44.76 35.975ZM45.1544 35.0571L44.1787 34.3684L44.0946 34.4875L44.0416 34.6235L45.1544 35.0571ZM45.3257 34.8095L45.4711 33.6241L44.7467 33.5353L44.3372 34.1393L45.3257 34.8095ZM62.6822 36.9374L62.5369 38.1228H62.5369L62.6822 36.9374ZM64.5416 36.1265L63.6574 35.3236L63.6129 35.3727L63.574 35.4264L64.5416 36.1265ZM67.6117 32.7454L68.4959 33.5483L68.5405 33.4992L68.5793 33.4455L67.6117 32.7454ZM67.9231 31.0615L69.0771 30.7538V30.7538L67.9231 31.0615ZM66.8146 29.7563L67.3051 28.6674V28.6674L66.8146 29.7563ZM38.6206 33.0846L38.112 34.1652L39.1926 34.6738L39.7012 33.5932L38.6206 33.0846ZM34.9719 22.9461L35.4805 21.8655L34.9719 22.9461ZM24.8332 26.5944L23.7526 26.0857L23.2439 27.1662L24.3244 27.6749L24.8332 26.5944ZM24.838 26.5966L25.9185 27.1053L26.4272 26.0248L25.3467 25.5161L24.838 26.5966ZM28.4838 36.7278L28.9925 35.6472L28.4838 36.7278ZM38.6149 33.0819L39.1235 32.0013L38.043 31.4928L37.5344 32.5733L38.6149 33.0819ZM17.4296 16.4626L16.6094 17.3307H16.6094L17.4296 16.4626ZM20.2504 16.3824L19.3822 15.5623H19.3822L20.2504 16.3824ZM13.5652 12.8117L14.3853 11.9436H14.3853L13.5652 12.8117ZM13.485 9.99093L14.3532 10.8111L14.3532 10.8111L13.485 9.99093ZM16.3058 9.91078L15.4856 10.7789L15.4856 10.7789L16.3058 9.91078ZM20.1702 13.5616L20.9904 12.6935V12.6935L20.1702 13.5616ZM30.016 8.22275C29.7596 9.96564 30.9647 11.5864 32.7076 11.8427L33.0552 9.47952C32.6175 9.41513 32.3148 9.00809 32.3792 8.57037L30.016 8.22275ZM30.7897 2.96311L30.016 8.22275L32.3792 8.57037L33.1529 3.31074L30.7897 2.96311ZM34.4097 0.271542C32.6668 0.0151676 31.0461 1.22022 30.7897 2.96311L33.1529 3.31074C33.2173 2.87302 33.6243 2.57037 34.0621 2.63476L34.4097 0.271542ZM37.1012 3.89153C37.3576 2.14864 36.1526 0.527917 34.4097 0.271542L34.0621 2.63476C34.4998 2.69914 34.8024 3.10618 34.738 3.54391L37.1012 3.89153ZM36.3276 9.15116L37.1012 3.89153L34.738 3.5439L33.9644 8.80354L36.3276 9.15116ZM32.7076 11.8427C34.4505 12.0991 36.0712 10.8941 36.3276 9.15117L33.9644 8.80354C33.9 9.24126 33.4929 9.54391 33.0552 9.47952L32.7076 11.8427ZM25.596 10.0315C25.172 10.1581 24.7257 9.91715 24.5991 9.49323L22.3104 10.1769C22.8146 11.8649 24.5917 12.8244 26.2796 12.3202L25.596 10.0315ZM26.1342 9.03465C26.2609 9.45857 26.0199 9.90488 25.596 10.0315L26.2796 12.3202C27.9676 11.816 28.9272 10.0389 28.423 8.35096L26.1342 9.03465ZM24.6126 3.94083L26.1342 9.03465L28.423 8.35096L26.9013 3.25715L24.6126 3.94083ZM23.6158 3.40255C24.0397 3.27591 24.486 3.51691 24.6126 3.94083L26.9013 3.25715C26.3971 1.56921 24.62 0.609613 22.9321 1.11384L23.6158 3.40255ZM23.0775 4.39941C22.9508 3.97549 23.1918 3.52918 23.6158 3.40255L22.9321 1.11384C21.2441 1.61806 20.2845 3.39516 20.7888 5.0831L23.0775 4.39941ZM24.5991 9.49323L23.0775 4.39941L20.7888 5.0831L22.3104 10.1769L24.5991 9.49323ZM36.2751 17.3362C36.3369 17.3474 36.3996 17.3665 36.462 17.3946L37.443 15.2167C37.2024 15.1083 36.9539 15.0318 36.7029 14.9861L36.2751 17.3362ZM20.8932 22.2756C24.2275 17.4346 30.4551 15.3342 36.0979 17.2896L36.88 15.0327C30.2134 12.7225 22.8644 15.2027 18.926 20.9206L20.8932 22.2756ZM19.7741 24.2133C20.0973 23.5267 20.4716 22.8816 20.89 22.2801L18.9292 20.916C18.4347 21.6268 17.9934 22.3878 17.6129 23.1959L19.7741 24.2133ZM19.2071 22.6263L19.2023 22.6241L18.1848 24.7852L18.1896 24.7874L19.2071 22.6263ZM17.6177 23.1982C13.95 30.9901 17.2932 40.28 25.0851 43.9479L26.1024 41.7867C19.5041 38.6807 16.673 30.8138 19.7789 24.2155L17.6177 23.1982ZM25.0851 43.9479C32.8769 47.6158 42.1668 44.2727 45.8349 36.481L43.6737 35.4636C40.5676 42.0618 32.7007 44.8927 26.1024 41.7867L25.0851 43.9479ZM45.2684 34.8943L45.2627 34.8916L44.2459 37.053L44.2516 37.0557L45.2684 34.8943ZM44.0416 34.6235C43.9314 34.9062 43.8107 35.1873 43.6794 35.4663L45.8406 36.4837C45.9951 36.1554 46.1373 35.8242 46.2672 35.4908L44.0416 34.6235ZM44.3372 34.1393C44.2855 34.2156 44.2326 34.2919 44.1787 34.3684L46.1301 35.7459C46.1926 35.6574 46.254 35.5687 46.3143 35.4797L44.3372 34.1393ZM62.8275 35.7519L45.4711 33.6241L45.1804 35.995L62.5369 38.1228L62.8275 35.7519ZM63.574 35.4264C63.403 35.6627 63.1171 35.7874 62.8275 35.7519L62.5369 38.1228C63.6898 38.2641 64.8283 37.7676 65.5092 36.8266L63.574 35.4264ZM66.7275 31.9425L63.6574 35.3236L65.4258 36.9293L68.4959 33.5483L66.7275 31.9425ZM66.7691 31.3693C66.8312 31.602 66.7853 31.8502 66.6441 32.0453L68.5793 33.4455C69.1414 32.6687 69.3242 31.6802 69.0771 30.7538L66.7691 31.3693ZM66.3241 30.8453C66.5436 30.9442 66.7071 31.1366 66.7691 31.3693L69.0771 30.7538C68.83 29.8273 68.1793 29.0612 67.3051 28.6674L66.3241 30.8453ZM36.462 17.3946L66.3241 30.8453L67.3051 28.6674L37.443 15.2167L36.462 17.3946ZM39.7012 33.5932C41.7741 29.1892 39.8845 23.9386 35.4805 21.8655L34.4632 24.0267C37.6736 25.5379 39.0511 29.3655 37.54 32.576L39.7012 33.5932ZM35.4805 21.8655C31.0766 19.7924 25.8259 21.6818 23.7526 26.0857L25.9137 27.1031C27.4251 23.8928 31.2528 22.5154 34.4632 24.0267L35.4805 21.8655ZM25.3467 25.5161L25.3419 25.5138L24.3244 27.6749L24.3292 27.6772L25.3467 25.5161ZM28.9925 35.6472C25.7849 34.1373 24.4086 30.3129 25.9185 27.1053L23.7574 26.088C21.6856 30.4892 23.5739 35.7366 27.9751 37.8084L28.9925 35.6472ZM37.5344 32.5733C36.0244 35.7809 32.2001 37.1571 28.9925 35.6472L27.9751 37.8084C32.3763 39.8802 37.6237 37.9918 39.6955 33.5906L37.5344 32.5733ZM39.1292 32.004L39.1235 32.0013L38.1064 34.1626L38.112 34.1652L39.1292 32.004ZM16.6094 17.3307C17.8899 18.5405 19.9087 18.4832 21.1185 17.2026L19.3822 15.5623C19.0784 15.8839 18.5713 15.8983 18.2497 15.5944L16.6094 17.3307ZM12.745 13.6799L16.6094 17.3307L18.2497 15.5944L14.3853 11.9436L12.745 13.6799ZM12.6168 9.17074C11.4071 10.4513 11.4644 12.4701 12.745 13.6799L14.3853 11.9436C14.0637 11.6397 14.0493 11.1327 14.3532 10.8111L12.6168 9.17074ZM17.126 9.04262C15.8454 7.83283 13.8266 7.89019 12.6168 9.17074L14.3532 10.8111C14.657 10.4895 15.164 10.4751 15.4856 10.7789L17.126 9.04262ZM20.9904 12.6935L17.126 9.04262L15.4856 10.7789L19.35 14.4298L20.9904 12.6935ZM21.1185 17.2026C22.3283 15.9221 22.2709 13.9033 20.9904 12.6935L19.35 14.4298C19.6716 14.7336 19.686 15.2406 19.3822 15.5623L21.1185 17.2026Z\" fill=\"#FFFCFA\" mask=\"url(#path-4-outside-1_101_2517)\" />\n                        <path d=\"M26.3872 33.149C25.6585 31.599 24.4112 30.2896 22.7393 29.5026C22.0287 29.1681 21.2986 28.9545 20.569 28.8502C17.3405 28.3887 14.0585 30.0538 12.6004 33.1512M32.5281 30.2619C31.1523 27.3354 28.7824 24.8473 25.6294 23.3631C24.3011 22.7378 22.9197 22.3315 21.5292 22.1327C15.4336 21.2615 9.22372 24.3919 6.4609 30.2611\" stroke=\"#FFFCFA\" strokeWidth=\"2.38864\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M22.7393 29.5026C24.4112 30.2896 25.6585 31.599 26.3872 33.149L32.5281 30.2619C31.1523 27.3354 28.7824 24.8473 25.6294 23.3631C24.3011 22.7378 22.9197 22.3315 21.5292 22.1327C15.4336 21.2615 9.22372 24.3919 6.4609 30.2611L12.6004 33.1512C14.0585 30.0538 17.3405 28.3887 20.569 28.8502C21.2986 28.9545 22.0287 29.1681 22.7393 29.5026Z\" fill=\"#031030\" />\n                    </svg>\n                }\n\n\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n    sociaVitalicia: state.sociaVitalicia,\n})\n\n\n\nexport default connect(mapStateToProps)(SociaVitalicia)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst Noticias = (props) => {\n\n    let { noticias } = props\n    console.log(noticias)\n\n    const [pTitulo, setPTitulo] = useState(0)\n\n    useEffect(() => {\n        let divTitulo = document.querySelector('#titulo');\n        let wTitulo = divTitulo.clientWidth;\n        setPTitulo((1080 - wTitulo) / 2);\n    }, [noticias.titulo])\n    return (\n        <div className={noticias.darkMode === true ? 'dark' : ''}>\n            <div style={{ width: '1080px', height: '1080px' }} className=\"bg-white dark:bg-black relative\">\n                <svg style={{ position: 'absolute', top: '76px', left: '15px', zIndex: 100 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"98\" height=\"181\" viewBox=\"0 0 98 181\" fill=\"none\">\n                    <path d=\"M30.0899 15.083C29.8531 15.225 29.7763 15.5322 29.9184 15.7689L32.2336 19.6277C32.3757 19.8645 32.6828 19.9412 32.9196 19.7992C33.1564 19.6571 33.2332 19.35 33.0911 19.1132L31.0331 15.6832L34.4631 13.6252C34.6999 13.4832 34.7767 13.176 34.6346 12.9392C34.4925 12.7024 34.1854 12.6257 33.9486 12.7677L30.0899 15.083ZM92.8874 154.028C93.0578 154.246 93.3721 154.284 93.5894 154.113L97.1299 151.336C97.3472 151.165 97.3851 150.851 97.2147 150.634C97.0442 150.416 96.7299 150.378 96.5127 150.549L93.3655 153.018L90.8966 149.871C90.7262 149.653 90.4119 149.615 90.1946 149.786C89.9774 149.956 89.9394 150.271 90.1098 150.488L92.8874 154.028ZM30.2259 15.9968C31.8943 16.4139 33.5768 16.8748 35.2666 17.3859L35.5561 16.4287C33.8497 15.9126 32.1516 15.4474 30.4684 15.0266L30.2259 15.9968ZM45.0978 20.9568C48.2359 22.3072 51.3545 23.8717 54.4113 25.6907L54.9227 24.8314C51.8256 22.9884 48.6678 21.4044 45.493 20.0383L45.0978 20.9568ZM62.985 31.6514C65.6172 33.7787 68.1655 36.1479 70.5981 38.7895L71.3337 38.1121C68.8671 35.4335 66.2828 33.0309 63.6136 30.8737L62.985 31.6514ZM77.102 46.9526C78.9993 49.7086 80.7877 52.6915 82.4461 55.9215L83.3357 55.4647C81.658 52.1973 79.8477 49.1775 77.9257 46.3855L77.102 46.9526ZM86.6785 65.4822C87.8618 68.6074 88.9388 71.9221 89.8967 75.4384L90.8616 75.1756C89.8955 71.6296 88.8088 68.2844 87.6137 65.1281L86.6785 65.4822ZM92.2271 85.658C92.8445 88.9622 93.3679 92.4194 93.7895 96.0367L94.7827 95.921C94.3586 92.2819 93.8319 88.802 93.2101 85.4743L92.2271 85.658ZM94.6901 106.463C94.8856 109.837 95.0003 113.335 95.0293 116.961L96.0292 116.953C96.0002 113.311 95.8849 109.797 95.6885 106.406L94.6901 106.463ZM94.8814 127.479C94.7627 130.861 94.575 134.345 94.3149 137.933L95.3123 138.005C95.5732 134.405 95.7616 130.909 95.8808 127.514L94.8814 127.479ZM93.3816 148.384C93.1985 150.12 92.9995 151.878 92.7844 153.66L93.7771 153.78C93.9929 151.993 94.1924 150.23 94.3761 148.489L93.3816 148.384Z\" fill=\"#F06F46\" />\n                    <circle cx=\"12.2557\" cy=\"12.3895\" r=\"7.91066\" transform=\"rotate(-29.7817 12.2557 12.3895)\" stroke=\"#F06F46\" />\n                    <line x1=\"79.4121\" y1=\"169.547\" x2=\"95.1857\" y2=\"173.838\" stroke=\"#F06F46\" strokeLinecap=\"round\" />\n                    <line x1=\"0.5\" y1=\"-0.5\" x2=\"16.8469\" y2=\"-0.5\" transform=\"matrix(0.262497 -0.964933 -0.964933 -0.262497 84.2363 179.773)\" stroke=\"#F06F46\" strokeLinecap=\"round\" />\n                </svg>\n\n                <svg style={{ position: 'absolute', bottom: '126px', right: '55px', zIndex: 100 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"177\" height=\"115\" viewBox=\"0 0 177 115\" fill=\"none\">\n                    <path d=\"M158.488 24.0175C158.456 23.7433 158.207 23.5473 157.933 23.5798L153.464 24.1088C153.19 24.1413 152.994 24.3899 153.026 24.6641C153.059 24.9383 153.307 25.1343 153.582 25.1019L157.554 24.6316L158.024 28.6039C158.057 28.8781 158.305 29.0741 158.579 29.0416C158.854 29.0092 159.05 28.7606 159.017 28.4863L158.488 24.0175ZM29.1057 102.22C30.6715 101.968 32.255 101.692 33.8547 101.392L33.6707 100.41C32.0792 100.707 30.504 100.982 28.9463 101.233L29.1057 102.22ZM43.2994 99.3816C46.3673 98.6493 49.4821 97.8281 52.6355 96.9115L52.3563 95.9513C49.2187 96.8633 46.1196 97.6803 43.0672 98.4089L43.2994 99.3816ZM61.8351 93.9953C64.8287 92.9664 67.8487 91.8495 70.8881 90.639L70.5181 89.71C67.4938 90.9144 64.4888 92.0259 61.51 93.0496L61.8351 93.9953ZM79.7712 86.8524C82.6589 85.5389 85.558 84.1382 88.4627 82.6456L88.0057 81.7562C85.1153 83.2413 82.2306 84.6352 79.3571 85.9421L79.7712 86.8524ZM96.9428 78.0298C99.6943 76.4462 102.446 74.7766 105.193 73.0174L104.654 72.1753C101.92 73.9259 99.1819 75.5873 96.444 77.1631L96.9428 78.0298ZM113.196 67.6222C115.787 65.786 118.369 63.8661 120.939 61.859L120.323 61.0709C117.766 63.0683 115.196 64.9791 112.618 66.8063L113.196 67.6222ZM128.408 55.744C130.819 53.6759 133.216 51.5267 135.594 49.2935L134.91 48.5645C132.543 50.7873 130.157 52.9266 127.757 54.9849L128.408 55.744ZM142.485 42.5303C144.7 40.2589 146.895 37.9101 149.068 35.4813L148.323 34.8145C146.159 37.2326 143.974 39.5711 141.769 41.8321L142.485 42.5303ZM155.353 28.1516C156.369 26.9152 157.38 25.66 158.384 24.3859L157.599 23.7668C156.599 25.0356 155.593 26.2855 154.581 27.5166L155.353 28.1516Z\" fill=\"#F06F46\" />\n                    <circle cx=\"12.4236\" cy=\"102.902\" r=\"7.91066\" transform=\"rotate(-29.7817 12.4236 102.902)\" stroke=\"#F06F46\" />\n                    <line x1=\"159.982\" y1=\"6.90965\" x2=\"175.755\" y2=\"11.2006\" stroke=\"#F06F46\" strokeLinecap=\"round\" />\n                    <line x1=\"0.5\" y1=\"-0.5\" x2=\"16.8469\" y2=\"-0.5\" transform=\"matrix(0.262497 -0.964933 -0.964933 -0.262497 164.806 17.1357)\" stroke=\"#F06F46\" strokeLinecap=\"round\" />\n                </svg>\n                <div id=\"titulo\" className=\"font-title absolute bg-orange p-5 flex items-center text-white text-center\" style={{ fontSize: '60px', maxWidth: '795px', top: '120px', zIndex: 9999, left: `${pTitulo}px` }}> <span style={{ padding: 0, margin: 0, lineHeight: '60px' }}>{noticias.titulo}</span></div>\n                <div id=\"fotoNoticia\" className=\"absolute bg-black\" style={{ width: '880px', height: '760px', top: '160px', left: `100px`, zIndex: 20, background: `url(${noticias.foto}) center center/cover` }}> </div>\n\n                <svg className=\"absolute \" style={{ top: '140px', right: '60px', zIndex: 9999 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"332\" viewBox=\"0 0 64 332\" fill=\"none\">\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M49.9984 12.0636C46.4283 9.59846 40.6367 7.8779 32.2602 8.62422L31.5456 0.603333C41.2876 -0.264651 49.0848 1.64697 54.574 5.43721C60.0892 9.24548 63.1069 14.874 63.1069 20.7568C63.1069 26.6396 60.0892 32.2681 54.574 36.0764C49.0848 39.8666 41.2876 41.7782 31.5456 40.9102C23.1691 40.1639 17.3775 41.8845 13.8074 44.3497C10.2633 46.7968 8.75148 50.0469 8.75148 53.0428C8.75148 56.0387 10.2633 59.2888 13.8074 61.736C17.3775 64.2011 23.1691 65.9217 31.5456 65.1754C41.2876 64.3074 49.0848 66.219 54.5739 70.0093C60.0892 73.8175 63.1069 79.4461 63.1069 85.3288C63.1069 91.2116 60.0892 96.8402 54.5739 100.648C49.0848 104.439 41.2876 106.35 31.5456 105.482C23.1691 104.736 17.3775 106.457 13.8074 108.922C10.2633 111.369 8.75148 114.619 8.75148 117.615C8.75148 120.611 10.2633 123.861 13.8074 126.308C17.3775 128.773 23.1691 130.494 31.5456 129.747C41.2876 128.879 49.0848 130.791 54.5739 134.581C60.0892 138.39 63.1069 144.018 63.1069 149.901C63.1069 155.784 60.0892 161.412 54.5739 165.22C49.0848 169.011 41.2876 170.922 31.5456 170.054C23.1691 169.308 17.3775 171.029 13.8074 173.494C10.2633 175.941 8.75147 179.191 8.75147 182.187C8.75147 185.183 10.2633 188.433 13.8074 190.88C17.3775 193.345 23.1691 195.066 31.5456 194.32C41.2876 193.452 49.0848 195.363 54.5739 199.153C60.0892 202.962 63.1069 208.59 63.1069 214.473C63.1069 220.356 60.0892 225.984 54.5739 229.793C49.0848 233.583 41.2876 235.494 31.5456 234.626C23.1691 233.88 17.3775 235.601 13.8074 238.066C10.2633 240.513 8.75147 243.763 8.75147 246.759C8.75147 249.755 10.2633 253.005 13.8074 255.452C17.3775 257.917 23.1691 259.638 31.5455 258.892C41.2876 258.024 49.0848 259.935 54.5739 263.725C60.0892 267.534 63.1069 273.162 63.1069 279.045C63.1069 284.928 60.0892 290.556 54.5739 294.365C49.0848 298.155 41.2876 300.066 31.5455 299.198C23.1691 298.452 17.3775 300.173 13.8073 302.638C10.2633 305.085 8.75147 308.335 8.75147 311.331C8.75147 314.327 10.2633 317.577 13.8073 320.024C17.3775 322.489 23.1691 324.21 31.5455 323.464L32.2602 331.484C22.5182 332.352 14.7209 330.441 9.23179 326.651C3.71656 322.842 0.698809 317.214 0.698809 311.331C0.698809 305.448 3.71657 299.82 9.23179 296.011C14.7209 292.221 22.5182 290.31 32.2602 291.178C40.6366 291.924 46.4283 290.203 49.9984 287.738C53.5424 285.291 55.0543 282.041 55.0543 279.045C55.0543 276.049 53.5424 272.799 49.9984 270.352C46.4283 267.887 40.6366 266.166 32.2602 266.912C22.5182 267.78 14.7209 265.869 9.23179 262.079C3.71657 258.27 0.698811 252.642 0.698812 246.759C0.698812 240.876 3.71657 235.248 9.2318 231.439C14.7209 227.649 22.5182 225.738 32.2602 226.606C40.6366 227.352 46.4283 225.631 49.9984 223.166C53.5424 220.719 55.0543 217.469 55.0543 214.473C55.0543 211.477 53.5424 208.227 49.9984 205.78C46.4283 203.315 40.6366 201.594 32.2602 202.34C22.5182 203.208 14.7209 201.297 9.2318 197.507C3.71657 193.698 0.698814 188.07 0.698814 182.187C0.698815 176.304 3.71657 170.676 9.2318 166.867C14.7209 163.077 22.5182 161.165 32.2602 162.033C40.6366 162.78 46.4283 161.059 49.9984 158.594C53.5424 156.147 55.0543 152.897 55.0543 149.901C55.0543 146.905 53.5424 143.655 49.9984 141.208C46.4283 138.743 40.6366 137.022 32.2602 137.768C22.5182 138.636 14.7209 136.725 9.2318 132.934C3.71657 129.126 0.698817 123.498 0.698817 117.615C0.698818 111.732 3.71657 106.104 9.2318 102.295C14.7209 98.5051 22.5182 96.5934 32.2602 97.4614C40.6366 98.2077 46.4283 96.4872 49.9984 94.022C53.5424 91.5748 55.0543 88.3247 55.0543 85.3288C55.0543 82.333 53.5424 79.0828 49.9984 76.6357C46.4283 74.1705 40.6366 72.45 32.2602 73.1963C22.5182 74.0643 14.7209 72.1526 9.2318 68.3624C3.71658 64.5541 0.69882 58.9256 0.69882 53.0428C0.69882 47.1601 3.71658 41.5315 9.2318 37.7232C14.7209 33.933 22.5182 32.0214 32.2602 32.8894C40.6367 33.6357 46.4283 31.9151 49.9984 29.4499C53.5424 27.0028 55.0543 23.7527 55.0543 20.7568C55.0543 17.7609 53.5424 14.5108 49.9984 12.0636Z\"\n                        fill={(noticias.darkMode === true) ?\n                            \"#FFFCFA\" :\n                            \"#171717\"} />\n                </svg>\n                {noticias.darkMode === true ?\n                    <svg style={{ position: 'absolute', left: '40px', bottom: '90px' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"140\" height=\"256\" viewBox=\"0 0 140 256\" fill=\"none\">\n                        <path d=\"M137.188 3.82927C136.147 3.82927 135.303 2.98534 135.303 1.9443C135.303 0.903261 136.147 0.059332 137.188 0.0593321C138.229 0.0593321 139.073 0.903261 139.073 1.9443C139.073 2.98534 138.229 3.82927 137.188 3.82927Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 3.82927C116.818 3.82927 115.974 2.98534 115.974 1.9443C115.974 0.90326 116.818 0.0593312 117.859 0.0593312C118.9 0.0593313 119.744 0.90326 119.744 1.9443C119.744 2.98534 118.9 3.82927 117.859 3.82927Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 3.82927C97.4894 3.82927 96.6455 2.98534 96.6455 1.9443C96.6455 0.903259 97.4894 0.0593304 98.5304 0.0593304C99.5715 0.0593304 100.415 0.90326 100.415 1.9443C100.415 2.98534 99.5715 3.82927 98.5304 3.82927Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 3.82927C78.1604 3.82927 77.3165 2.98534 77.3165 1.9443C77.3165 0.903259 78.1604 0.0593295 79.2014 0.0593296C80.2425 0.0593296 81.0864 0.903259 81.0864 1.9443C81.0864 2.98534 80.2425 3.82927 79.2014 3.82927Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 3.82927C58.8314 3.82927 57.9875 2.98534 57.9875 1.9443C57.9875 0.903258 58.8314 0.0593287 59.8725 0.0593287C60.9135 0.0593288 61.7574 0.903258 61.7574 1.9443C61.7574 2.98534 60.9135 3.82927 59.8725 3.82927Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 3.82926C39.5024 3.82926 38.6585 2.98534 38.6585 1.9443C38.6585 0.903257 39.5024 0.0593278 40.5435 0.0593279C41.5845 0.0593279 42.4284 0.903257 42.4284 1.9443C42.4284 2.98534 41.5845 3.82926 40.5435 3.82926Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 3.82926C20.1734 3.82926 19.3295 2.98533 19.3295 1.9443C19.3295 0.903256 20.1734 0.059327 21.2145 0.059327C22.2555 0.0593271 23.0994 0.903256 23.0994 1.9443C23.0994 2.98533 22.2555 3.82926 21.2145 3.82926Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88547 3.82926C0.844428 3.82926 0.000499219 2.98533 0.000499265 1.94429C0.00049931 0.903255 0.844428 0.0593261 1.88547 0.0593262C2.92651 0.0593262 3.77044 0.903255 3.77044 1.94429C3.77044 2.98533 2.92651 3.82926 1.88547 3.82926Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 23.1583C136.147 23.1583 135.303 22.3143 135.303 21.2733C135.303 20.2323 136.147 19.3883 137.188 19.3883C138.229 19.3883 139.073 20.2323 139.073 21.2733C139.073 22.3143 138.229 23.1583 137.188 23.1583Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 23.1583C116.818 23.1583 115.974 22.3143 115.974 21.2733C115.974 20.2323 116.818 19.3883 117.859 19.3883C118.9 19.3883 119.744 20.2323 119.744 21.2733C119.744 22.3143 118.9 23.1583 117.859 23.1583Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 23.1583C97.4894 23.1583 96.6455 22.3143 96.6455 21.2733C96.6455 20.2323 97.4894 19.3883 98.5304 19.3883C99.5715 19.3883 100.415 20.2323 100.415 21.2733C100.415 22.3143 99.5715 23.1583 98.5304 23.1583Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 23.1583C78.1604 23.1583 77.3165 22.3143 77.3165 21.2733C77.3165 20.2323 78.1604 19.3883 79.2014 19.3883C80.2425 19.3883 81.0864 20.2323 81.0864 21.2733C81.0864 22.3143 80.2425 23.1583 79.2014 23.1583Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 23.1583C58.8314 23.1583 57.9875 22.3143 57.9875 21.2733C57.9875 20.2323 58.8314 19.3883 59.8725 19.3883C60.9135 19.3883 61.7574 20.2323 61.7574 21.2733C61.7574 22.3143 60.9135 23.1583 59.8725 23.1583Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 23.1583C39.5024 23.1583 38.6585 22.3143 38.6585 21.2733C38.6585 20.2323 39.5024 19.3883 40.5435 19.3883C41.5845 19.3883 42.4284 20.2323 42.4284 21.2733C42.4284 22.3143 41.5845 23.1583 40.5435 23.1583Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 23.1583C20.1734 23.1583 19.3295 22.3143 19.3295 21.2733C19.3295 20.2322 20.1734 19.3883 21.2145 19.3883C22.2555 19.3883 23.0994 20.2322 23.0994 21.2733C23.0994 22.3143 22.2555 23.1583 21.2145 23.1583Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88547 23.1583C0.844427 23.1583 0.000498375 22.3143 0.00049842 21.2733C0.000498466 20.2322 0.844428 19.3883 1.88547 19.3883C2.92651 19.3883 3.77043 20.2322 3.77043 21.2733C3.77043 22.3143 2.92651 23.1583 1.88547 23.1583Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 42.4873C136.147 42.4873 135.303 41.6433 135.303 40.6023C135.303 39.5612 136.147 38.7173 137.188 38.7173C138.229 38.7173 139.073 39.5612 139.073 40.6023C139.073 41.6433 138.229 42.4873 137.188 42.4873Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 42.4873C116.818 42.4873 115.974 41.6433 115.974 40.6023C115.974 39.5612 116.818 38.7173 117.859 38.7173C118.9 38.7173 119.744 39.5612 119.744 40.6023C119.744 41.6433 118.9 42.4873 117.859 42.4873Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 42.4873C97.4894 42.4873 96.6455 41.6433 96.6455 40.6023C96.6455 39.5612 97.4894 38.7173 98.5304 38.7173C99.5715 38.7173 100.415 39.5612 100.415 40.6023C100.415 41.6433 99.5715 42.4873 98.5304 42.4873Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 42.4873C78.1604 42.4873 77.3165 41.6433 77.3165 40.6023C77.3165 39.5612 78.1604 38.7173 79.2014 38.7173C80.2425 38.7173 81.0864 39.5612 81.0864 40.6023C81.0864 41.6433 80.2425 42.4873 79.2014 42.4873Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 42.4873C58.8314 42.4873 57.9875 41.6433 57.9875 40.6023C57.9875 39.5612 58.8314 38.7173 59.8725 38.7173C60.9135 38.7173 61.7574 39.5612 61.7574 40.6023C61.7574 41.6433 60.9135 42.4873 59.8725 42.4873Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 42.4872C39.5024 42.4872 38.6585 41.6433 38.6585 40.6023C38.6585 39.5612 39.5024 38.7173 40.5435 38.7173C41.5845 38.7173 42.4284 39.5612 42.4284 40.6023C42.4284 41.6433 41.5845 42.4872 40.5435 42.4872Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 42.4872C20.1734 42.4872 19.3295 41.6433 19.3295 40.6023C19.3295 39.5612 20.1734 38.7173 21.2145 38.7173C22.2555 38.7173 23.0994 39.5612 23.0994 40.6023C23.0994 41.6433 22.2555 42.4872 21.2145 42.4872Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88547 42.4872C0.844426 42.4872 0.00049753 41.6433 0.000497575 40.6023C0.000497621 39.5612 0.844427 38.7173 1.88547 38.7173C2.92651 38.7173 3.77043 39.5612 3.77043 40.6023C3.77043 41.6433 2.9265 42.4872 1.88547 42.4872Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 61.8162C136.147 61.8162 135.303 60.9723 135.303 59.9313C135.303 58.8902 136.147 58.0463 137.188 58.0463C138.229 58.0463 139.073 58.8902 139.073 59.9313C139.073 60.9723 138.229 61.8162 137.188 61.8162Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 61.8162C116.818 61.8162 115.974 60.9723 115.974 59.9313C115.974 58.8902 116.818 58.0463 117.859 58.0463C118.9 58.0463 119.744 58.8902 119.744 59.9313C119.744 60.9723 118.9 61.8162 117.859 61.8162Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 61.8162C97.4894 61.8162 96.6455 60.9723 96.6455 59.9313C96.6455 58.8902 97.4894 58.0463 98.5304 58.0463C99.5715 58.0463 100.415 58.8902 100.415 59.9313C100.415 60.9723 99.5715 61.8162 98.5304 61.8162Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 61.8162C78.1604 61.8162 77.3165 60.9723 77.3165 59.9313C77.3165 58.8902 78.1604 58.0463 79.2014 58.0463C80.2425 58.0463 81.0864 58.8902 81.0864 59.9313C81.0864 60.9723 80.2425 61.8162 79.2014 61.8162Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 61.8162C58.8314 61.8162 57.9875 60.9723 57.9875 59.9313C57.9875 58.8902 58.8314 58.0463 59.8725 58.0463C60.9135 58.0463 61.7574 58.8902 61.7574 59.9313C61.7574 60.9723 60.9135 61.8162 59.8725 61.8162Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 61.8162C39.5024 61.8162 38.6585 60.9723 38.6585 59.9313C38.6585 58.8902 39.5024 58.0463 40.5435 58.0463C41.5845 58.0463 42.4284 58.8902 42.4284 59.9313C42.4284 60.9723 41.5845 61.8162 40.5435 61.8162Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 61.8162C20.1734 61.8162 19.3295 60.9723 19.3295 59.9313C19.3295 58.8902 20.1734 58.0463 21.2145 58.0463C22.2555 58.0463 23.0994 58.8902 23.0994 59.9313C23.0994 60.9723 22.2555 61.8162 21.2145 61.8162Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 61.8162C0.844426 61.8162 0.000496685 60.9723 0.00049673 59.9313C0.000496776 58.8902 0.844426 58.0463 1.88546 58.0463C2.9265 58.0463 3.77043 58.8902 3.77043 59.9313C3.77043 60.9723 2.9265 61.8162 1.88546 61.8162Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 81.1452C136.147 81.1452 135.303 80.3013 135.303 79.2603C135.303 78.2192 136.147 77.3753 137.188 77.3753C138.229 77.3753 139.073 78.2192 139.073 79.2603C139.073 80.3013 138.229 81.1452 137.188 81.1452Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 81.1452C116.818 81.1452 115.974 80.3013 115.974 79.2603C115.974 78.2192 116.818 77.3753 117.859 77.3753C118.9 77.3753 119.744 78.2192 119.744 79.2603C119.744 80.3013 118.9 81.1452 117.859 81.1452Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 81.1452C97.4894 81.1452 96.6455 80.3013 96.6455 79.2603C96.6455 78.2192 97.4894 77.3753 98.5304 77.3753C99.5715 77.3753 100.415 78.2192 100.415 79.2603C100.415 80.3013 99.5715 81.1452 98.5304 81.1452Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 81.1452C78.1604 81.1452 77.3165 80.3013 77.3165 79.2603C77.3165 78.2192 78.1604 77.3753 79.2014 77.3753C80.2425 77.3753 81.0864 78.2192 81.0864 79.2603C81.0864 80.3013 80.2425 81.1452 79.2014 81.1452Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 81.1452C58.8314 81.1452 57.9875 80.3013 57.9875 79.2603C57.9875 78.2192 58.8314 77.3753 59.8725 77.3753C60.9135 77.3753 61.7574 78.2192 61.7574 79.2603C61.7574 80.3013 60.9135 81.1452 59.8725 81.1452Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 81.1452C39.5024 81.1452 38.6585 80.3013 38.6585 79.2603C38.6585 78.2192 39.5024 77.3753 40.5435 77.3753C41.5845 77.3753 42.4284 78.2192 42.4284 79.2603C42.4284 80.3013 41.5845 81.1452 40.5435 81.1452Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 81.1452C20.1734 81.1452 19.3295 80.3013 19.3295 79.2603C19.3295 78.2192 20.1734 77.3753 21.2145 77.3753C22.2555 77.3753 23.0994 78.2192 23.0994 79.2603C23.0994 80.3013 22.2555 81.1452 21.2145 81.1452Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 81.1452C0.844425 81.1452 0.00049584 80.3013 0.000495885 79.2603C0.000495931 78.2192 0.844425 77.3753 1.88546 77.3753C2.9265 77.3753 3.77043 78.2192 3.77043 79.2603C3.77043 80.3013 2.9265 81.1452 1.88546 81.1452Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 100.474C136.147 100.474 135.303 99.6303 135.303 98.5893C135.303 97.5482 136.147 96.7043 137.188 96.7043C138.229 96.7043 139.073 97.5482 139.073 98.5893C139.073 99.6303 138.229 100.474 137.188 100.474Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 100.474C116.818 100.474 115.974 99.6303 115.974 98.5893C115.974 97.5482 116.818 96.7043 117.859 96.7043C118.9 96.7043 119.744 97.5482 119.744 98.5893C119.744 99.6303 118.9 100.474 117.859 100.474Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 100.474C97.4894 100.474 96.6455 99.6303 96.6455 98.5893C96.6455 97.5482 97.4894 96.7043 98.5304 96.7043C99.5715 96.7043 100.415 97.5482 100.415 98.5893C100.415 99.6303 99.5715 100.474 98.5304 100.474Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 100.474C78.1604 100.474 77.3165 99.6303 77.3165 98.5893C77.3165 97.5482 78.1604 96.7043 79.2014 96.7043C80.2425 96.7043 81.0864 97.5482 81.0864 98.5893C81.0864 99.6303 80.2425 100.474 79.2014 100.474Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 100.474C58.8314 100.474 57.9875 99.6303 57.9875 98.5893C57.9875 97.5482 58.8314 96.7043 59.8725 96.7043C60.9135 96.7043 61.7574 97.5482 61.7574 98.5893C61.7574 99.6303 60.9135 100.474 59.8725 100.474Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 100.474C39.5024 100.474 38.6585 99.6303 38.6585 98.5893C38.6585 97.5482 39.5024 96.7043 40.5435 96.7043C41.5845 96.7043 42.4284 97.5482 42.4284 98.5893C42.4284 99.6303 41.5845 100.474 40.5435 100.474Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 100.474C20.1734 100.474 19.3295 99.6303 19.3295 98.5893C19.3295 97.5482 20.1734 96.7043 21.2145 96.7043C22.2555 96.7043 23.0994 97.5482 23.0994 98.5893C23.0994 99.6303 22.2555 100.474 21.2145 100.474Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 100.474C0.844424 100.474 0.000494995 99.6303 0.00049504 98.5893C0.000495086 97.5482 0.844424 96.7043 1.88546 96.7043C2.9265 96.7043 3.77043 97.5482 3.77043 98.5893C3.77043 99.6303 2.9265 100.474 1.88546 100.474Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 119.803C136.147 119.803 135.303 118.959 135.303 117.918C135.303 116.877 136.147 116.033 137.188 116.033C138.229 116.033 139.073 116.877 139.073 117.918C139.073 118.959 138.229 119.803 137.188 119.803Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 119.803C116.818 119.803 115.974 118.959 115.974 117.918C115.974 116.877 116.818 116.033 117.859 116.033C118.9 116.033 119.744 116.877 119.744 117.918C119.744 118.959 118.9 119.803 117.859 119.803Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 119.803C97.4894 119.803 96.6455 118.959 96.6455 117.918C96.6455 116.877 97.4894 116.033 98.5304 116.033C99.5715 116.033 100.415 116.877 100.415 117.918C100.415 118.959 99.5715 119.803 98.5304 119.803Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 119.803C78.1604 119.803 77.3165 118.959 77.3165 117.918C77.3165 116.877 78.1604 116.033 79.2014 116.033C80.2425 116.033 81.0864 116.877 81.0864 117.918C81.0864 118.959 80.2425 119.803 79.2014 119.803Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 119.803C58.8314 119.803 57.9875 118.959 57.9875 117.918C57.9875 116.877 58.8314 116.033 59.8725 116.033C60.9135 116.033 61.7574 116.877 61.7574 117.918C61.7574 118.959 60.9135 119.803 59.8725 119.803Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 119.803C39.5024 119.803 38.6585 118.959 38.6585 117.918C38.6585 116.877 39.5024 116.033 40.5435 116.033C41.5845 116.033 42.4284 116.877 42.4284 117.918C42.4284 118.959 41.5845 119.803 40.5435 119.803Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 119.803C20.1734 119.803 19.3295 118.959 19.3295 117.918C19.3295 116.877 20.1734 116.033 21.2145 116.033C22.2555 116.033 23.0994 116.877 23.0994 117.918C23.0994 118.959 22.2555 119.803 21.2145 119.803Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 119.803C0.844423 119.803 0.00049415 118.959 0.000494196 117.918C0.000494241 116.877 0.844423 116.033 1.88546 116.033C2.9265 116.033 3.77043 116.877 3.77043 117.918C3.77043 118.959 2.9265 119.803 1.88546 119.803Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 139.132C136.147 139.132 135.303 138.288 135.303 137.247C135.303 136.206 136.147 135.362 137.188 135.362C138.229 135.362 139.073 136.206 139.073 137.247C139.073 138.288 138.229 139.132 137.188 139.132Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 139.132C116.818 139.132 115.974 138.288 115.974 137.247C115.974 136.206 116.818 135.362 117.859 135.362C118.9 135.362 119.744 136.206 119.744 137.247C119.744 138.288 118.9 139.132 117.859 139.132Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 139.132C97.4894 139.132 96.6455 138.288 96.6455 137.247C96.6455 136.206 97.4894 135.362 98.5304 135.362C99.5715 135.362 100.415 136.206 100.415 137.247C100.415 138.288 99.5715 139.132 98.5304 139.132Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 139.132C78.1604 139.132 77.3165 138.288 77.3165 137.247C77.3165 136.206 78.1604 135.362 79.2014 135.362C80.2425 135.362 81.0864 136.206 81.0864 137.247C81.0864 138.288 80.2425 139.132 79.2014 139.132Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 139.132C58.8314 139.132 57.9875 138.288 57.9875 137.247C57.9875 136.206 58.8314 135.362 59.8725 135.362C60.9135 135.362 61.7574 136.206 61.7574 137.247C61.7574 138.288 60.9135 139.132 59.8725 139.132Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 139.132C39.5024 139.132 38.6585 138.288 38.6585 137.247C38.6585 136.206 39.5024 135.362 40.5435 135.362C41.5845 135.362 42.4284 136.206 42.4284 137.247C42.4284 138.288 41.5845 139.132 40.5435 139.132Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 139.132C20.1734 139.132 19.3295 138.288 19.3295 137.247C19.3295 136.206 20.1734 135.362 21.2145 135.362C22.2555 135.362 23.0994 136.206 23.0994 137.247C23.0994 138.288 22.2555 139.132 21.2145 139.132Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 139.132C0.844422 139.132 0.000493305 138.288 0.000493351 137.247C0.000493396 136.206 0.844422 135.362 1.88546 135.362C2.9265 135.362 3.77043 136.206 3.77043 137.247C3.77043 138.288 2.9265 139.132 1.88546 139.132Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 158.461C136.147 158.461 135.303 157.617 135.303 156.576C135.303 155.535 136.147 154.691 137.188 154.691C138.229 154.691 139.073 155.535 139.073 156.576C139.073 157.617 138.229 158.461 137.188 158.461Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 158.461C116.818 158.461 115.974 157.617 115.974 156.576C115.974 155.535 116.818 154.691 117.859 154.691C118.9 154.691 119.744 155.535 119.744 156.576C119.744 157.617 118.9 158.461 117.859 158.461Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 158.461C97.4894 158.461 96.6455 157.617 96.6455 156.576C96.6455 155.535 97.4894 154.691 98.5304 154.691C99.5715 154.691 100.415 155.535 100.415 156.576C100.415 157.617 99.5715 158.461 98.5304 158.461Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 158.461C78.1604 158.461 77.3165 157.617 77.3165 156.576C77.3165 155.535 78.1604 154.691 79.2014 154.691C80.2425 154.691 81.0864 155.535 81.0864 156.576C81.0864 157.617 80.2425 158.461 79.2014 158.461Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 158.461C58.8314 158.461 57.9875 157.617 57.9875 156.576C57.9875 155.535 58.8314 154.691 59.8725 154.691C60.9135 154.691 61.7574 155.535 61.7574 156.576C61.7574 157.617 60.9135 158.461 59.8725 158.461Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 158.461C39.5024 158.461 38.6585 157.617 38.6585 156.576C38.6585 155.535 39.5024 154.691 40.5435 154.691C41.5845 154.691 42.4284 155.535 42.4284 156.576C42.4284 157.617 41.5845 158.461 40.5435 158.461Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 158.461C20.1734 158.461 19.3295 157.617 19.3295 156.576C19.3295 155.535 20.1734 154.691 21.2145 154.691C22.2555 154.691 23.0994 155.535 23.0994 156.576C23.0994 157.617 22.2555 158.461 21.2145 158.461Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 158.461C0.844422 158.461 0.00049246 157.617 0.000492506 156.576C0.000492551 155.535 0.844422 154.691 1.88546 154.691C2.9265 154.691 3.77043 155.535 3.77043 156.576C3.77043 157.617 2.9265 158.461 1.88546 158.461Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 177.79C136.147 177.79 135.303 176.946 135.303 175.905C135.303 174.864 136.147 174.02 137.188 174.02C138.229 174.02 139.073 174.864 139.073 175.905C139.073 176.946 138.229 177.79 137.188 177.79Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 177.79C116.818 177.79 115.974 176.946 115.974 175.905C115.974 174.864 116.818 174.02 117.859 174.02C118.9 174.02 119.744 174.864 119.744 175.905C119.744 176.946 118.9 177.79 117.859 177.79Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 177.79C97.4894 177.79 96.6455 176.946 96.6455 175.905C96.6455 174.864 97.4894 174.02 98.5304 174.02C99.5715 174.02 100.415 174.864 100.415 175.905C100.415 176.946 99.5715 177.79 98.5304 177.79Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 177.79C78.1604 177.79 77.3165 176.946 77.3165 175.905C77.3165 174.864 78.1604 174.02 79.2014 174.02C80.2425 174.02 81.0864 174.864 81.0864 175.905C81.0864 176.946 80.2425 177.79 79.2014 177.79Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 177.79C58.8314 177.79 57.9875 176.946 57.9875 175.905C57.9875 174.864 58.8314 174.02 59.8725 174.02C60.9135 174.02 61.7574 174.864 61.7574 175.905C61.7574 176.946 60.9135 177.79 59.8725 177.79Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 177.79C39.5024 177.79 38.6585 176.946 38.6585 175.905C38.6585 174.864 39.5024 174.02 40.5435 174.02C41.5845 174.02 42.4284 174.864 42.4284 175.905C42.4284 176.946 41.5845 177.79 40.5435 177.79Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 177.79C20.1734 177.79 19.3295 176.946 19.3295 175.905C19.3295 174.864 20.1734 174.02 21.2145 174.02C22.2555 174.02 23.0994 174.864 23.0994 175.905C23.0994 176.946 22.2555 177.79 21.2145 177.79Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 177.79C0.844421 177.79 0.000491615 176.946 0.000491661 175.905C0.000491706 174.864 0.844421 174.02 1.88546 174.02C2.9265 174.02 3.77043 174.864 3.77043 175.905C3.77043 176.946 2.9265 177.79 1.88546 177.79Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 197.119C136.147 197.119 135.303 196.275 135.303 195.234C135.303 194.193 136.147 193.349 137.188 193.349C138.229 193.349 139.073 194.193 139.073 195.234C139.073 196.275 138.229 197.119 137.188 197.119Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 197.119C116.818 197.119 115.974 196.275 115.974 195.234C115.974 194.193 116.818 193.349 117.859 193.349C118.9 193.349 119.744 194.193 119.744 195.234C119.744 196.275 118.9 197.119 117.859 197.119Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 197.119C97.4894 197.119 96.6455 196.275 96.6455 195.234C96.6455 194.193 97.4894 193.349 98.5304 193.349C99.5715 193.349 100.415 194.193 100.415 195.234C100.415 196.275 99.5715 197.119 98.5304 197.119Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 197.119C78.1604 197.119 77.3165 196.275 77.3165 195.234C77.3165 194.193 78.1604 193.349 79.2014 193.349C80.2425 193.349 81.0864 194.193 81.0864 195.234C81.0864 196.275 80.2425 197.119 79.2014 197.119Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8725 197.119C58.8314 197.119 57.9875 196.275 57.9875 195.234C57.9875 194.193 58.8314 193.349 59.8725 193.349C60.9135 193.349 61.7574 194.193 61.7574 195.234C61.7574 196.275 60.9135 197.119 59.8725 197.119Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5435 197.119C39.5024 197.119 38.6585 196.275 38.6585 195.234C38.6585 194.193 39.5024 193.349 40.5435 193.349C41.5845 193.349 42.4284 194.193 42.4284 195.234C42.4284 196.275 41.5845 197.119 40.5435 197.119Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 197.119C20.1734 197.119 19.3295 196.275 19.3295 195.234C19.3295 194.193 20.1734 193.349 21.2145 193.349C22.2555 193.349 23.0994 194.193 23.0994 195.234C23.0994 196.275 22.2555 197.119 21.2145 197.119Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 197.119C0.84442 197.119 0.00049077 196.275 0.000490816 195.234C0.000490861 194.193 0.84442 193.349 1.88546 193.349C2.9265 193.349 3.77043 194.193 3.77043 195.234C3.77043 196.275 2.9265 197.119 1.88546 197.119Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 216.448C136.147 216.448 135.303 215.604 135.303 214.563C135.303 213.522 136.147 212.678 137.188 212.678C138.229 212.678 139.073 213.522 139.073 214.563C139.073 215.604 138.229 216.448 137.188 216.448Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 216.448C116.818 216.448 115.974 215.604 115.974 214.563C115.974 213.522 116.818 212.678 117.859 212.678C118.9 212.678 119.744 213.522 119.744 214.563C119.744 215.604 118.9 216.448 117.859 216.448Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 216.448C97.4894 216.448 96.6455 215.604 96.6455 214.563C96.6455 213.522 97.4894 212.678 98.5304 212.678C99.5715 212.678 100.415 213.522 100.415 214.563C100.415 215.604 99.5715 216.448 98.5304 216.448Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 216.448C78.1604 216.448 77.3165 215.604 77.3165 214.563C77.3165 213.522 78.1604 212.678 79.2014 212.678C80.2425 212.678 81.0864 213.522 81.0864 214.563C81.0864 215.604 80.2425 216.448 79.2014 216.448Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8724 216.448C58.8314 216.448 57.9875 215.604 57.9875 214.563C57.9875 213.522 58.8314 212.678 59.8724 212.678C60.9135 212.678 61.7574 213.522 61.7574 214.563C61.7574 215.604 60.9135 216.448 59.8724 216.448Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5434 216.448C39.5024 216.448 38.6585 215.604 38.6585 214.563C38.6585 213.522 39.5024 212.678 40.5434 212.678C41.5845 212.678 42.4284 213.522 42.4284 214.563C42.4284 215.604 41.5845 216.448 40.5434 216.448Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 216.448C20.1734 216.448 19.3295 215.604 19.3295 214.563C19.3295 213.522 20.1734 212.678 21.2145 212.678C22.2555 212.678 23.0994 213.522 23.0994 214.563C23.0994 215.604 22.2555 216.448 21.2145 216.448Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 216.448C0.844419 216.448 0.000489926 215.604 0.000489971 214.563C0.000490017 213.522 0.844419 212.678 1.88546 212.678C2.9265 212.678 3.77043 213.522 3.77043 214.563C3.77043 215.604 2.9265 216.448 1.88546 216.448Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 235.777C136.147 235.777 135.303 234.933 135.303 233.892C135.303 232.851 136.147 232.007 137.188 232.007C138.229 232.007 139.073 232.851 139.073 233.892C139.073 234.933 138.229 235.777 137.188 235.777Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 235.777C116.818 235.777 115.974 234.933 115.974 233.892C115.974 232.851 116.818 232.007 117.859 232.007C118.9 232.007 119.744 232.851 119.744 233.892C119.744 234.933 118.9 235.777 117.859 235.777Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 235.777C97.4894 235.777 96.6455 234.933 96.6455 233.892C96.6455 232.851 97.4894 232.007 98.5304 232.007C99.5715 232.007 100.415 232.851 100.415 233.892C100.415 234.933 99.5715 235.777 98.5304 235.777Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 235.777C78.1604 235.777 77.3165 234.933 77.3165 233.892C77.3165 232.851 78.1604 232.007 79.2014 232.007C80.2425 232.007 81.0864 232.851 81.0864 233.892C81.0864 234.933 80.2425 235.777 79.2014 235.777Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8724 235.777C58.8314 235.777 57.9875 234.933 57.9875 233.892C57.9875 232.851 58.8314 232.007 59.8724 232.007C60.9135 232.007 61.7574 232.851 61.7574 233.892C61.7574 234.933 60.9135 235.777 59.8724 235.777Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5434 235.777C39.5024 235.777 38.6585 234.933 38.6585 233.892C38.6585 232.851 39.5024 232.007 40.5434 232.007C41.5845 232.007 42.4284 232.851 42.4284 233.892C42.4284 234.933 41.5845 235.777 40.5434 235.777Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 235.777C20.1734 235.777 19.3295 234.933 19.3295 233.892C19.3295 232.851 20.1734 232.007 21.2145 232.007C22.2555 232.007 23.0994 232.851 23.0994 233.892C23.0994 234.933 22.2555 235.777 21.2145 235.777Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 235.777C0.844418 235.777 0.000489081 234.933 0.000489126 233.892C0.000489172 232.851 0.844418 232.007 1.88546 232.007C2.9265 232.007 3.77043 232.851 3.77043 233.892C3.77043 234.933 2.9265 235.777 1.88546 235.777Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M137.188 255.106C136.147 255.106 135.303 254.262 135.303 253.221C135.303 252.18 136.147 251.336 137.188 251.336C138.229 251.336 139.073 252.18 139.073 253.221C139.073 254.262 138.229 255.106 137.188 255.106Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M117.859 255.106C116.818 255.106 115.974 254.262 115.974 253.221C115.974 252.18 116.818 251.336 117.859 251.336C118.9 251.336 119.744 252.18 119.744 253.221C119.744 254.262 118.9 255.106 117.859 255.106Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M98.5304 255.106C97.4894 255.106 96.6455 254.262 96.6455 253.221C96.6455 252.18 97.4894 251.336 98.5304 251.336C99.5715 251.336 100.415 252.18 100.415 253.221C100.415 254.262 99.5715 255.106 98.5304 255.106Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.2014 255.106C78.1604 255.106 77.3165 254.262 77.3165 253.221C77.3165 252.18 78.1604 251.336 79.2014 251.336C80.2425 251.336 81.0864 252.18 81.0864 253.221C81.0864 254.262 80.2425 255.106 79.2014 255.106Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M59.8724 255.106C58.8314 255.106 57.9875 254.262 57.9875 253.221C57.9875 252.18 58.8314 251.336 59.8724 251.336C60.9135 251.336 61.7574 252.18 61.7574 253.221C61.7574 254.262 60.9135 255.106 59.8724 255.106Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M40.5434 255.106C39.5024 255.106 38.6585 254.262 38.6585 253.221C38.6585 252.18 39.5024 251.336 40.5434 251.336C41.5845 251.336 42.4284 252.18 42.4284 253.221C42.4284 254.262 41.5845 255.106 40.5434 255.106Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M21.2145 255.106C20.1734 255.106 19.3295 254.262 19.3295 253.221C19.3295 252.18 20.1734 251.336 21.2145 251.336C22.2555 251.336 23.0994 252.18 23.0994 253.221C23.0994 254.262 22.2555 255.106 21.2145 255.106Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M1.88546 255.106C0.844417 255.106 0.000488236 254.262 0.000488281 253.221C0.000488327 252.18 0.844417 251.336 1.88546 251.336C2.9265 251.336 3.77042 252.18 3.77042 253.221C3.77042 254.262 2.9265 255.106 1.88546 255.106Z\" fill=\"#FFFCFA\" />\n                    </svg> :\n                    <svg style={{ position: 'absolute', left: '40px', bottom: '90px' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"140\" height=\"256\" viewBox=\"0 0 140 256\" fill=\"none\">\n                        <path d=\"M137.188 3.82927C136.147 3.82927 135.303 2.98534 135.303 1.9443C135.303 0.903261 136.147 0.059332 137.188 0.0593321C138.229 0.0593321 139.073 0.903261 139.073 1.9443C139.073 2.98534 138.229 3.82927 137.188 3.82927Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 3.82927C116.818 3.82927 115.974 2.98534 115.974 1.9443C115.974 0.90326 116.818 0.0593312 117.859 0.0593312C118.9 0.0593313 119.744 0.90326 119.744 1.9443C119.744 2.98534 118.9 3.82927 117.859 3.82927Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 3.82927C97.4894 3.82927 96.6455 2.98534 96.6455 1.9443C96.6455 0.903259 97.4894 0.0593304 98.5304 0.0593304C99.5715 0.0593304 100.415 0.90326 100.415 1.9443C100.415 2.98534 99.5715 3.82927 98.5304 3.82927Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 3.82927C78.1604 3.82927 77.3165 2.98534 77.3165 1.9443C77.3165 0.903259 78.1604 0.0593295 79.2014 0.0593296C80.2425 0.0593296 81.0864 0.903259 81.0864 1.9443C81.0864 2.98534 80.2425 3.82927 79.2014 3.82927Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 3.82927C58.8314 3.82927 57.9875 2.98534 57.9875 1.9443C57.9875 0.903258 58.8314 0.0593287 59.8725 0.0593287C60.9135 0.0593288 61.7574 0.903258 61.7574 1.9443C61.7574 2.98534 60.9135 3.82927 59.8725 3.82927Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 3.82926C39.5024 3.82926 38.6585 2.98534 38.6585 1.9443C38.6585 0.903257 39.5024 0.0593278 40.5435 0.0593279C41.5845 0.0593279 42.4284 0.903257 42.4284 1.9443C42.4284 2.98534 41.5845 3.82926 40.5435 3.82926Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 3.82926C20.1734 3.82926 19.3295 2.98533 19.3295 1.9443C19.3295 0.903256 20.1734 0.059327 21.2145 0.059327C22.2555 0.0593271 23.0994 0.903256 23.0994 1.9443C23.0994 2.98533 22.2555 3.82926 21.2145 3.82926Z\" fill=\"#171717\" />\n                        <path d=\"M1.88547 3.82926C0.844428 3.82926 0.000499219 2.98533 0.000499265 1.94429C0.00049931 0.903255 0.844428 0.0593261 1.88547 0.0593262C2.92651 0.0593262 3.77044 0.903255 3.77044 1.94429C3.77044 2.98533 2.92651 3.82926 1.88547 3.82926Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 23.1583C136.147 23.1583 135.303 22.3143 135.303 21.2733C135.303 20.2323 136.147 19.3883 137.188 19.3883C138.229 19.3883 139.073 20.2323 139.073 21.2733C139.073 22.3143 138.229 23.1583 137.188 23.1583Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 23.1583C116.818 23.1583 115.974 22.3143 115.974 21.2733C115.974 20.2323 116.818 19.3883 117.859 19.3883C118.9 19.3883 119.744 20.2323 119.744 21.2733C119.744 22.3143 118.9 23.1583 117.859 23.1583Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 23.1583C97.4894 23.1583 96.6455 22.3143 96.6455 21.2733C96.6455 20.2323 97.4894 19.3883 98.5304 19.3883C99.5715 19.3883 100.415 20.2323 100.415 21.2733C100.415 22.3143 99.5715 23.1583 98.5304 23.1583Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 23.1583C78.1604 23.1583 77.3165 22.3143 77.3165 21.2733C77.3165 20.2323 78.1604 19.3883 79.2014 19.3883C80.2425 19.3883 81.0864 20.2323 81.0864 21.2733C81.0864 22.3143 80.2425 23.1583 79.2014 23.1583Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 23.1583C58.8314 23.1583 57.9875 22.3143 57.9875 21.2733C57.9875 20.2323 58.8314 19.3883 59.8725 19.3883C60.9135 19.3883 61.7574 20.2323 61.7574 21.2733C61.7574 22.3143 60.9135 23.1583 59.8725 23.1583Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 23.1583C39.5024 23.1583 38.6585 22.3143 38.6585 21.2733C38.6585 20.2323 39.5024 19.3883 40.5435 19.3883C41.5845 19.3883 42.4284 20.2323 42.4284 21.2733C42.4284 22.3143 41.5845 23.1583 40.5435 23.1583Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 23.1583C20.1734 23.1583 19.3295 22.3143 19.3295 21.2733C19.3295 20.2322 20.1734 19.3883 21.2145 19.3883C22.2555 19.3883 23.0994 20.2322 23.0994 21.2733C23.0994 22.3143 22.2555 23.1583 21.2145 23.1583Z\" fill=\"#171717\" />\n                        <path d=\"M1.88547 23.1583C0.844427 23.1583 0.000498375 22.3143 0.00049842 21.2733C0.000498466 20.2322 0.844428 19.3883 1.88547 19.3883C2.92651 19.3883 3.77043 20.2322 3.77043 21.2733C3.77043 22.3143 2.92651 23.1583 1.88547 23.1583Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 42.4873C136.147 42.4873 135.303 41.6433 135.303 40.6023C135.303 39.5612 136.147 38.7173 137.188 38.7173C138.229 38.7173 139.073 39.5612 139.073 40.6023C139.073 41.6433 138.229 42.4873 137.188 42.4873Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 42.4873C116.818 42.4873 115.974 41.6433 115.974 40.6023C115.974 39.5612 116.818 38.7173 117.859 38.7173C118.9 38.7173 119.744 39.5612 119.744 40.6023C119.744 41.6433 118.9 42.4873 117.859 42.4873Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 42.4873C97.4894 42.4873 96.6455 41.6433 96.6455 40.6023C96.6455 39.5612 97.4894 38.7173 98.5304 38.7173C99.5715 38.7173 100.415 39.5612 100.415 40.6023C100.415 41.6433 99.5715 42.4873 98.5304 42.4873Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 42.4873C78.1604 42.4873 77.3165 41.6433 77.3165 40.6023C77.3165 39.5612 78.1604 38.7173 79.2014 38.7173C80.2425 38.7173 81.0864 39.5612 81.0864 40.6023C81.0864 41.6433 80.2425 42.4873 79.2014 42.4873Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 42.4873C58.8314 42.4873 57.9875 41.6433 57.9875 40.6023C57.9875 39.5612 58.8314 38.7173 59.8725 38.7173C60.9135 38.7173 61.7574 39.5612 61.7574 40.6023C61.7574 41.6433 60.9135 42.4873 59.8725 42.4873Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 42.4872C39.5024 42.4872 38.6585 41.6433 38.6585 40.6023C38.6585 39.5612 39.5024 38.7173 40.5435 38.7173C41.5845 38.7173 42.4284 39.5612 42.4284 40.6023C42.4284 41.6433 41.5845 42.4872 40.5435 42.4872Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 42.4872C20.1734 42.4872 19.3295 41.6433 19.3295 40.6023C19.3295 39.5612 20.1734 38.7173 21.2145 38.7173C22.2555 38.7173 23.0994 39.5612 23.0994 40.6023C23.0994 41.6433 22.2555 42.4872 21.2145 42.4872Z\" fill=\"#171717\" />\n                        <path d=\"M1.88547 42.4872C0.844426 42.4872 0.00049753 41.6433 0.000497575 40.6023C0.000497621 39.5612 0.844427 38.7173 1.88547 38.7173C2.92651 38.7173 3.77043 39.5612 3.77043 40.6023C3.77043 41.6433 2.9265 42.4872 1.88547 42.4872Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 61.8162C136.147 61.8162 135.303 60.9723 135.303 59.9313C135.303 58.8902 136.147 58.0463 137.188 58.0463C138.229 58.0463 139.073 58.8902 139.073 59.9313C139.073 60.9723 138.229 61.8162 137.188 61.8162Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 61.8162C116.818 61.8162 115.974 60.9723 115.974 59.9313C115.974 58.8902 116.818 58.0463 117.859 58.0463C118.9 58.0463 119.744 58.8902 119.744 59.9313C119.744 60.9723 118.9 61.8162 117.859 61.8162Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 61.8162C97.4894 61.8162 96.6455 60.9723 96.6455 59.9313C96.6455 58.8902 97.4894 58.0463 98.5304 58.0463C99.5715 58.0463 100.415 58.8902 100.415 59.9313C100.415 60.9723 99.5715 61.8162 98.5304 61.8162Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 61.8162C78.1604 61.8162 77.3165 60.9723 77.3165 59.9313C77.3165 58.8902 78.1604 58.0463 79.2014 58.0463C80.2425 58.0463 81.0864 58.8902 81.0864 59.9313C81.0864 60.9723 80.2425 61.8162 79.2014 61.8162Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 61.8162C58.8314 61.8162 57.9875 60.9723 57.9875 59.9313C57.9875 58.8902 58.8314 58.0463 59.8725 58.0463C60.9135 58.0463 61.7574 58.8902 61.7574 59.9313C61.7574 60.9723 60.9135 61.8162 59.8725 61.8162Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 61.8162C39.5024 61.8162 38.6585 60.9723 38.6585 59.9313C38.6585 58.8902 39.5024 58.0463 40.5435 58.0463C41.5845 58.0463 42.4284 58.8902 42.4284 59.9313C42.4284 60.9723 41.5845 61.8162 40.5435 61.8162Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 61.8162C20.1734 61.8162 19.3295 60.9723 19.3295 59.9313C19.3295 58.8902 20.1734 58.0463 21.2145 58.0463C22.2555 58.0463 23.0994 58.8902 23.0994 59.9313C23.0994 60.9723 22.2555 61.8162 21.2145 61.8162Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 61.8162C0.844426 61.8162 0.000496685 60.9723 0.00049673 59.9313C0.000496776 58.8902 0.844426 58.0463 1.88546 58.0463C2.9265 58.0463 3.77043 58.8902 3.77043 59.9313C3.77043 60.9723 2.9265 61.8162 1.88546 61.8162Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 81.1452C136.147 81.1452 135.303 80.3013 135.303 79.2603C135.303 78.2192 136.147 77.3753 137.188 77.3753C138.229 77.3753 139.073 78.2192 139.073 79.2603C139.073 80.3013 138.229 81.1452 137.188 81.1452Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 81.1452C116.818 81.1452 115.974 80.3013 115.974 79.2603C115.974 78.2192 116.818 77.3753 117.859 77.3753C118.9 77.3753 119.744 78.2192 119.744 79.2603C119.744 80.3013 118.9 81.1452 117.859 81.1452Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 81.1452C97.4894 81.1452 96.6455 80.3013 96.6455 79.2603C96.6455 78.2192 97.4894 77.3753 98.5304 77.3753C99.5715 77.3753 100.415 78.2192 100.415 79.2603C100.415 80.3013 99.5715 81.1452 98.5304 81.1452Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 81.1452C78.1604 81.1452 77.3165 80.3013 77.3165 79.2603C77.3165 78.2192 78.1604 77.3753 79.2014 77.3753C80.2425 77.3753 81.0864 78.2192 81.0864 79.2603C81.0864 80.3013 80.2425 81.1452 79.2014 81.1452Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 81.1452C58.8314 81.1452 57.9875 80.3013 57.9875 79.2603C57.9875 78.2192 58.8314 77.3753 59.8725 77.3753C60.9135 77.3753 61.7574 78.2192 61.7574 79.2603C61.7574 80.3013 60.9135 81.1452 59.8725 81.1452Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 81.1452C39.5024 81.1452 38.6585 80.3013 38.6585 79.2603C38.6585 78.2192 39.5024 77.3753 40.5435 77.3753C41.5845 77.3753 42.4284 78.2192 42.4284 79.2603C42.4284 80.3013 41.5845 81.1452 40.5435 81.1452Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 81.1452C20.1734 81.1452 19.3295 80.3013 19.3295 79.2603C19.3295 78.2192 20.1734 77.3753 21.2145 77.3753C22.2555 77.3753 23.0994 78.2192 23.0994 79.2603C23.0994 80.3013 22.2555 81.1452 21.2145 81.1452Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 81.1452C0.844425 81.1452 0.00049584 80.3013 0.000495885 79.2603C0.000495931 78.2192 0.844425 77.3753 1.88546 77.3753C2.9265 77.3753 3.77043 78.2192 3.77043 79.2603C3.77043 80.3013 2.9265 81.1452 1.88546 81.1452Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 100.474C136.147 100.474 135.303 99.6303 135.303 98.5893C135.303 97.5482 136.147 96.7043 137.188 96.7043C138.229 96.7043 139.073 97.5482 139.073 98.5893C139.073 99.6303 138.229 100.474 137.188 100.474Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 100.474C116.818 100.474 115.974 99.6303 115.974 98.5893C115.974 97.5482 116.818 96.7043 117.859 96.7043C118.9 96.7043 119.744 97.5482 119.744 98.5893C119.744 99.6303 118.9 100.474 117.859 100.474Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 100.474C97.4894 100.474 96.6455 99.6303 96.6455 98.5893C96.6455 97.5482 97.4894 96.7043 98.5304 96.7043C99.5715 96.7043 100.415 97.5482 100.415 98.5893C100.415 99.6303 99.5715 100.474 98.5304 100.474Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 100.474C78.1604 100.474 77.3165 99.6303 77.3165 98.5893C77.3165 97.5482 78.1604 96.7043 79.2014 96.7043C80.2425 96.7043 81.0864 97.5482 81.0864 98.5893C81.0864 99.6303 80.2425 100.474 79.2014 100.474Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 100.474C58.8314 100.474 57.9875 99.6303 57.9875 98.5893C57.9875 97.5482 58.8314 96.7043 59.8725 96.7043C60.9135 96.7043 61.7574 97.5482 61.7574 98.5893C61.7574 99.6303 60.9135 100.474 59.8725 100.474Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 100.474C39.5024 100.474 38.6585 99.6303 38.6585 98.5893C38.6585 97.5482 39.5024 96.7043 40.5435 96.7043C41.5845 96.7043 42.4284 97.5482 42.4284 98.5893C42.4284 99.6303 41.5845 100.474 40.5435 100.474Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 100.474C20.1734 100.474 19.3295 99.6303 19.3295 98.5893C19.3295 97.5482 20.1734 96.7043 21.2145 96.7043C22.2555 96.7043 23.0994 97.5482 23.0994 98.5893C23.0994 99.6303 22.2555 100.474 21.2145 100.474Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 100.474C0.844424 100.474 0.000494995 99.6303 0.00049504 98.5893C0.000495086 97.5482 0.844424 96.7043 1.88546 96.7043C2.9265 96.7043 3.77043 97.5482 3.77043 98.5893C3.77043 99.6303 2.9265 100.474 1.88546 100.474Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 119.803C136.147 119.803 135.303 118.959 135.303 117.918C135.303 116.877 136.147 116.033 137.188 116.033C138.229 116.033 139.073 116.877 139.073 117.918C139.073 118.959 138.229 119.803 137.188 119.803Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 119.803C116.818 119.803 115.974 118.959 115.974 117.918C115.974 116.877 116.818 116.033 117.859 116.033C118.9 116.033 119.744 116.877 119.744 117.918C119.744 118.959 118.9 119.803 117.859 119.803Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 119.803C97.4894 119.803 96.6455 118.959 96.6455 117.918C96.6455 116.877 97.4894 116.033 98.5304 116.033C99.5715 116.033 100.415 116.877 100.415 117.918C100.415 118.959 99.5715 119.803 98.5304 119.803Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 119.803C78.1604 119.803 77.3165 118.959 77.3165 117.918C77.3165 116.877 78.1604 116.033 79.2014 116.033C80.2425 116.033 81.0864 116.877 81.0864 117.918C81.0864 118.959 80.2425 119.803 79.2014 119.803Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 119.803C58.8314 119.803 57.9875 118.959 57.9875 117.918C57.9875 116.877 58.8314 116.033 59.8725 116.033C60.9135 116.033 61.7574 116.877 61.7574 117.918C61.7574 118.959 60.9135 119.803 59.8725 119.803Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 119.803C39.5024 119.803 38.6585 118.959 38.6585 117.918C38.6585 116.877 39.5024 116.033 40.5435 116.033C41.5845 116.033 42.4284 116.877 42.4284 117.918C42.4284 118.959 41.5845 119.803 40.5435 119.803Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 119.803C20.1734 119.803 19.3295 118.959 19.3295 117.918C19.3295 116.877 20.1734 116.033 21.2145 116.033C22.2555 116.033 23.0994 116.877 23.0994 117.918C23.0994 118.959 22.2555 119.803 21.2145 119.803Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 119.803C0.844423 119.803 0.00049415 118.959 0.000494196 117.918C0.000494241 116.877 0.844423 116.033 1.88546 116.033C2.9265 116.033 3.77043 116.877 3.77043 117.918C3.77043 118.959 2.9265 119.803 1.88546 119.803Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 139.132C136.147 139.132 135.303 138.288 135.303 137.247C135.303 136.206 136.147 135.362 137.188 135.362C138.229 135.362 139.073 136.206 139.073 137.247C139.073 138.288 138.229 139.132 137.188 139.132Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 139.132C116.818 139.132 115.974 138.288 115.974 137.247C115.974 136.206 116.818 135.362 117.859 135.362C118.9 135.362 119.744 136.206 119.744 137.247C119.744 138.288 118.9 139.132 117.859 139.132Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 139.132C97.4894 139.132 96.6455 138.288 96.6455 137.247C96.6455 136.206 97.4894 135.362 98.5304 135.362C99.5715 135.362 100.415 136.206 100.415 137.247C100.415 138.288 99.5715 139.132 98.5304 139.132Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 139.132C78.1604 139.132 77.3165 138.288 77.3165 137.247C77.3165 136.206 78.1604 135.362 79.2014 135.362C80.2425 135.362 81.0864 136.206 81.0864 137.247C81.0864 138.288 80.2425 139.132 79.2014 139.132Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 139.132C58.8314 139.132 57.9875 138.288 57.9875 137.247C57.9875 136.206 58.8314 135.362 59.8725 135.362C60.9135 135.362 61.7574 136.206 61.7574 137.247C61.7574 138.288 60.9135 139.132 59.8725 139.132Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 139.132C39.5024 139.132 38.6585 138.288 38.6585 137.247C38.6585 136.206 39.5024 135.362 40.5435 135.362C41.5845 135.362 42.4284 136.206 42.4284 137.247C42.4284 138.288 41.5845 139.132 40.5435 139.132Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 139.132C20.1734 139.132 19.3295 138.288 19.3295 137.247C19.3295 136.206 20.1734 135.362 21.2145 135.362C22.2555 135.362 23.0994 136.206 23.0994 137.247C23.0994 138.288 22.2555 139.132 21.2145 139.132Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 139.132C0.844422 139.132 0.000493305 138.288 0.000493351 137.247C0.000493396 136.206 0.844422 135.362 1.88546 135.362C2.9265 135.362 3.77043 136.206 3.77043 137.247C3.77043 138.288 2.9265 139.132 1.88546 139.132Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 158.461C136.147 158.461 135.303 157.617 135.303 156.576C135.303 155.535 136.147 154.691 137.188 154.691C138.229 154.691 139.073 155.535 139.073 156.576C139.073 157.617 138.229 158.461 137.188 158.461Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 158.461C116.818 158.461 115.974 157.617 115.974 156.576C115.974 155.535 116.818 154.691 117.859 154.691C118.9 154.691 119.744 155.535 119.744 156.576C119.744 157.617 118.9 158.461 117.859 158.461Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 158.461C97.4894 158.461 96.6455 157.617 96.6455 156.576C96.6455 155.535 97.4894 154.691 98.5304 154.691C99.5715 154.691 100.415 155.535 100.415 156.576C100.415 157.617 99.5715 158.461 98.5304 158.461Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 158.461C78.1604 158.461 77.3165 157.617 77.3165 156.576C77.3165 155.535 78.1604 154.691 79.2014 154.691C80.2425 154.691 81.0864 155.535 81.0864 156.576C81.0864 157.617 80.2425 158.461 79.2014 158.461Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 158.461C58.8314 158.461 57.9875 157.617 57.9875 156.576C57.9875 155.535 58.8314 154.691 59.8725 154.691C60.9135 154.691 61.7574 155.535 61.7574 156.576C61.7574 157.617 60.9135 158.461 59.8725 158.461Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 158.461C39.5024 158.461 38.6585 157.617 38.6585 156.576C38.6585 155.535 39.5024 154.691 40.5435 154.691C41.5845 154.691 42.4284 155.535 42.4284 156.576C42.4284 157.617 41.5845 158.461 40.5435 158.461Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 158.461C20.1734 158.461 19.3295 157.617 19.3295 156.576C19.3295 155.535 20.1734 154.691 21.2145 154.691C22.2555 154.691 23.0994 155.535 23.0994 156.576C23.0994 157.617 22.2555 158.461 21.2145 158.461Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 158.461C0.844422 158.461 0.00049246 157.617 0.000492506 156.576C0.000492551 155.535 0.844422 154.691 1.88546 154.691C2.9265 154.691 3.77043 155.535 3.77043 156.576C3.77043 157.617 2.9265 158.461 1.88546 158.461Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 177.79C136.147 177.79 135.303 176.946 135.303 175.905C135.303 174.864 136.147 174.02 137.188 174.02C138.229 174.02 139.073 174.864 139.073 175.905C139.073 176.946 138.229 177.79 137.188 177.79Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 177.79C116.818 177.79 115.974 176.946 115.974 175.905C115.974 174.864 116.818 174.02 117.859 174.02C118.9 174.02 119.744 174.864 119.744 175.905C119.744 176.946 118.9 177.79 117.859 177.79Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 177.79C97.4894 177.79 96.6455 176.946 96.6455 175.905C96.6455 174.864 97.4894 174.02 98.5304 174.02C99.5715 174.02 100.415 174.864 100.415 175.905C100.415 176.946 99.5715 177.79 98.5304 177.79Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 177.79C78.1604 177.79 77.3165 176.946 77.3165 175.905C77.3165 174.864 78.1604 174.02 79.2014 174.02C80.2425 174.02 81.0864 174.864 81.0864 175.905C81.0864 176.946 80.2425 177.79 79.2014 177.79Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 177.79C58.8314 177.79 57.9875 176.946 57.9875 175.905C57.9875 174.864 58.8314 174.02 59.8725 174.02C60.9135 174.02 61.7574 174.864 61.7574 175.905C61.7574 176.946 60.9135 177.79 59.8725 177.79Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 177.79C39.5024 177.79 38.6585 176.946 38.6585 175.905C38.6585 174.864 39.5024 174.02 40.5435 174.02C41.5845 174.02 42.4284 174.864 42.4284 175.905C42.4284 176.946 41.5845 177.79 40.5435 177.79Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 177.79C20.1734 177.79 19.3295 176.946 19.3295 175.905C19.3295 174.864 20.1734 174.02 21.2145 174.02C22.2555 174.02 23.0994 174.864 23.0994 175.905C23.0994 176.946 22.2555 177.79 21.2145 177.79Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 177.79C0.844421 177.79 0.000491615 176.946 0.000491661 175.905C0.000491706 174.864 0.844421 174.02 1.88546 174.02C2.9265 174.02 3.77043 174.864 3.77043 175.905C3.77043 176.946 2.9265 177.79 1.88546 177.79Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 197.119C136.147 197.119 135.303 196.275 135.303 195.234C135.303 194.193 136.147 193.349 137.188 193.349C138.229 193.349 139.073 194.193 139.073 195.234C139.073 196.275 138.229 197.119 137.188 197.119Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 197.119C116.818 197.119 115.974 196.275 115.974 195.234C115.974 194.193 116.818 193.349 117.859 193.349C118.9 193.349 119.744 194.193 119.744 195.234C119.744 196.275 118.9 197.119 117.859 197.119Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 197.119C97.4894 197.119 96.6455 196.275 96.6455 195.234C96.6455 194.193 97.4894 193.349 98.5304 193.349C99.5715 193.349 100.415 194.193 100.415 195.234C100.415 196.275 99.5715 197.119 98.5304 197.119Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 197.119C78.1604 197.119 77.3165 196.275 77.3165 195.234C77.3165 194.193 78.1604 193.349 79.2014 193.349C80.2425 193.349 81.0864 194.193 81.0864 195.234C81.0864 196.275 80.2425 197.119 79.2014 197.119Z\" fill=\"#171717\" />\n                        <path d=\"M59.8725 197.119C58.8314 197.119 57.9875 196.275 57.9875 195.234C57.9875 194.193 58.8314 193.349 59.8725 193.349C60.9135 193.349 61.7574 194.193 61.7574 195.234C61.7574 196.275 60.9135 197.119 59.8725 197.119Z\" fill=\"#171717\" />\n                        <path d=\"M40.5435 197.119C39.5024 197.119 38.6585 196.275 38.6585 195.234C38.6585 194.193 39.5024 193.349 40.5435 193.349C41.5845 193.349 42.4284 194.193 42.4284 195.234C42.4284 196.275 41.5845 197.119 40.5435 197.119Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 197.119C20.1734 197.119 19.3295 196.275 19.3295 195.234C19.3295 194.193 20.1734 193.349 21.2145 193.349C22.2555 193.349 23.0994 194.193 23.0994 195.234C23.0994 196.275 22.2555 197.119 21.2145 197.119Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 197.119C0.84442 197.119 0.00049077 196.275 0.000490816 195.234C0.000490861 194.193 0.84442 193.349 1.88546 193.349C2.9265 193.349 3.77043 194.193 3.77043 195.234C3.77043 196.275 2.9265 197.119 1.88546 197.119Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 216.448C136.147 216.448 135.303 215.604 135.303 214.563C135.303 213.522 136.147 212.678 137.188 212.678C138.229 212.678 139.073 213.522 139.073 214.563C139.073 215.604 138.229 216.448 137.188 216.448Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 216.448C116.818 216.448 115.974 215.604 115.974 214.563C115.974 213.522 116.818 212.678 117.859 212.678C118.9 212.678 119.744 213.522 119.744 214.563C119.744 215.604 118.9 216.448 117.859 216.448Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 216.448C97.4894 216.448 96.6455 215.604 96.6455 214.563C96.6455 213.522 97.4894 212.678 98.5304 212.678C99.5715 212.678 100.415 213.522 100.415 214.563C100.415 215.604 99.5715 216.448 98.5304 216.448Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 216.448C78.1604 216.448 77.3165 215.604 77.3165 214.563C77.3165 213.522 78.1604 212.678 79.2014 212.678C80.2425 212.678 81.0864 213.522 81.0864 214.563C81.0864 215.604 80.2425 216.448 79.2014 216.448Z\" fill=\"#171717\" />\n                        <path d=\"M59.8724 216.448C58.8314 216.448 57.9875 215.604 57.9875 214.563C57.9875 213.522 58.8314 212.678 59.8724 212.678C60.9135 212.678 61.7574 213.522 61.7574 214.563C61.7574 215.604 60.9135 216.448 59.8724 216.448Z\" fill=\"#171717\" />\n                        <path d=\"M40.5434 216.448C39.5024 216.448 38.6585 215.604 38.6585 214.563C38.6585 213.522 39.5024 212.678 40.5434 212.678C41.5845 212.678 42.4284 213.522 42.4284 214.563C42.4284 215.604 41.5845 216.448 40.5434 216.448Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 216.448C20.1734 216.448 19.3295 215.604 19.3295 214.563C19.3295 213.522 20.1734 212.678 21.2145 212.678C22.2555 212.678 23.0994 213.522 23.0994 214.563C23.0994 215.604 22.2555 216.448 21.2145 216.448Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 216.448C0.844419 216.448 0.000489926 215.604 0.000489971 214.563C0.000490017 213.522 0.844419 212.678 1.88546 212.678C2.9265 212.678 3.77043 213.522 3.77043 214.563C3.77043 215.604 2.9265 216.448 1.88546 216.448Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 235.777C136.147 235.777 135.303 234.933 135.303 233.892C135.303 232.851 136.147 232.007 137.188 232.007C138.229 232.007 139.073 232.851 139.073 233.892C139.073 234.933 138.229 235.777 137.188 235.777Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 235.777C116.818 235.777 115.974 234.933 115.974 233.892C115.974 232.851 116.818 232.007 117.859 232.007C118.9 232.007 119.744 232.851 119.744 233.892C119.744 234.933 118.9 235.777 117.859 235.777Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 235.777C97.4894 235.777 96.6455 234.933 96.6455 233.892C96.6455 232.851 97.4894 232.007 98.5304 232.007C99.5715 232.007 100.415 232.851 100.415 233.892C100.415 234.933 99.5715 235.777 98.5304 235.777Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 235.777C78.1604 235.777 77.3165 234.933 77.3165 233.892C77.3165 232.851 78.1604 232.007 79.2014 232.007C80.2425 232.007 81.0864 232.851 81.0864 233.892C81.0864 234.933 80.2425 235.777 79.2014 235.777Z\" fill=\"#171717\" />\n                        <path d=\"M59.8724 235.777C58.8314 235.777 57.9875 234.933 57.9875 233.892C57.9875 232.851 58.8314 232.007 59.8724 232.007C60.9135 232.007 61.7574 232.851 61.7574 233.892C61.7574 234.933 60.9135 235.777 59.8724 235.777Z\" fill=\"#171717\" />\n                        <path d=\"M40.5434 235.777C39.5024 235.777 38.6585 234.933 38.6585 233.892C38.6585 232.851 39.5024 232.007 40.5434 232.007C41.5845 232.007 42.4284 232.851 42.4284 233.892C42.4284 234.933 41.5845 235.777 40.5434 235.777Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 235.777C20.1734 235.777 19.3295 234.933 19.3295 233.892C19.3295 232.851 20.1734 232.007 21.2145 232.007C22.2555 232.007 23.0994 232.851 23.0994 233.892C23.0994 234.933 22.2555 235.777 21.2145 235.777Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 235.777C0.844418 235.777 0.000489081 234.933 0.000489126 233.892C0.000489172 232.851 0.844418 232.007 1.88546 232.007C2.9265 232.007 3.77043 232.851 3.77043 233.892C3.77043 234.933 2.9265 235.777 1.88546 235.777Z\" fill=\"#171717\" />\n                        <path d=\"M137.188 255.106C136.147 255.106 135.303 254.262 135.303 253.221C135.303 252.18 136.147 251.336 137.188 251.336C138.229 251.336 139.073 252.18 139.073 253.221C139.073 254.262 138.229 255.106 137.188 255.106Z\" fill=\"#171717\" />\n                        <path d=\"M117.859 255.106C116.818 255.106 115.974 254.262 115.974 253.221C115.974 252.18 116.818 251.336 117.859 251.336C118.9 251.336 119.744 252.18 119.744 253.221C119.744 254.262 118.9 255.106 117.859 255.106Z\" fill=\"#171717\" />\n                        <path d=\"M98.5304 255.106C97.4894 255.106 96.6455 254.262 96.6455 253.221C96.6455 252.18 97.4894 251.336 98.5304 251.336C99.5715 251.336 100.415 252.18 100.415 253.221C100.415 254.262 99.5715 255.106 98.5304 255.106Z\" fill=\"#171717\" />\n                        <path d=\"M79.2014 255.106C78.1604 255.106 77.3165 254.262 77.3165 253.221C77.3165 252.18 78.1604 251.336 79.2014 251.336C80.2425 251.336 81.0864 252.18 81.0864 253.221C81.0864 254.262 80.2425 255.106 79.2014 255.106Z\" fill=\"#171717\" />\n                        <path d=\"M59.8724 255.106C58.8314 255.106 57.9875 254.262 57.9875 253.221C57.9875 252.18 58.8314 251.336 59.8724 251.336C60.9135 251.336 61.7574 252.18 61.7574 253.221C61.7574 254.262 60.9135 255.106 59.8724 255.106Z\" fill=\"#171717\" />\n                        <path d=\"M40.5434 255.106C39.5024 255.106 38.6585 254.262 38.6585 253.221C38.6585 252.18 39.5024 251.336 40.5434 251.336C41.5845 251.336 42.4284 252.18 42.4284 253.221C42.4284 254.262 41.5845 255.106 40.5434 255.106Z\" fill=\"#171717\" />\n                        <path d=\"M21.2145 255.106C20.1734 255.106 19.3295 254.262 19.3295 253.221C19.3295 252.18 20.1734 251.336 21.2145 251.336C22.2555 251.336 23.0994 252.18 23.0994 253.221C23.0994 254.262 22.2555 255.106 21.2145 255.106Z\" fill=\"#171717\" />\n                        <path d=\"M1.88546 255.106C0.844417 255.106 0.000488236 254.262 0.000488281 253.221C0.000488327 252.18 0.844417 251.336 1.88546 251.336C2.9265 251.336 3.77042 252.18 3.77042 253.221C3.77042 254.262 2.9265 255.106 1.88546 255.106Z\" fill=\"#171717\" />\n                    </svg>\n\n                }\n\n\n\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    noticias: state.noticias\n})\n\nexport default connect(mapStateToProps)(Noticias)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\n\nconst ProximoPartido = (props) => {\n    let { proximoPartido, deportes } = props;\n    console.log(proximoPartido.deporte)\n\n\n\n    return (\n\n        <div className={proximoPartido.darkMode === true ? 'dark' : ''}>\n            <div style={{ width: '1080px', height: '1080px' }} className=\"bg-white dark:bg-black relative\">\n                {(proximoPartido.darkMode === true) ?\n                    <svg style={{ position: 'absolute', top: '110px', left: '520px', zIndex: '9999' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"161\" height=\"53\" viewBox=\"0 0 161 53\" fill=\"none\">\n                        <path d=\"M134.489 1.21059L134.842 0.857038L134.489 0.503485L134.135 0.857038L134.489 1.21059ZM150.257 16.9793L150.611 16.6258L150.257 16.9793ZM125.027 10.6718L124.674 10.3183L124.32 10.6718L124.674 11.0254L125.027 10.6718ZM140.796 26.4406L141.15 26.7942L141.503 26.4406L141.15 26.0871L140.796 26.4406ZM125.027 42.2094L124.674 41.8558L124.32 42.2094L124.674 42.5629L125.027 42.2094ZM134.489 51.6706L134.135 52.0242L134.489 52.3777L134.842 52.0242L134.489 51.6706ZM150.257 35.9019L150.611 36.2554L150.257 35.9019ZM159.719 26.4406L160.072 26.7942L160.426 26.4406L160.072 26.0871L159.719 26.4406ZM134.135 1.56414L149.904 17.3329L150.611 16.6258L134.842 0.857038L134.135 1.56414ZM125.381 11.0254L134.842 1.56414L134.135 0.857038L124.674 10.3183L125.381 11.0254ZM141.15 26.0871L125.381 10.3183L124.674 11.0254L140.443 26.7942L141.15 26.0871ZM140.443 26.0871L124.674 41.8558L125.381 42.5629L141.15 26.7942L140.443 26.0871ZM124.674 42.5629L134.135 52.0242L134.842 51.3171L125.381 41.8558L124.674 42.5629ZM134.842 52.0242L150.611 36.2554L149.904 35.5483L134.135 51.3171L134.842 52.0242ZM150.611 36.2554L160.072 26.7942L159.365 26.0871L149.904 35.5483L150.611 36.2554ZM149.904 17.3329L159.365 26.7942L160.072 26.0871L150.611 16.6258L149.904 17.3329Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M93.0698 1.21059L93.4233 0.857038L93.0698 0.503485L92.7162 0.857038L93.0698 1.21059ZM108.839 16.9793L109.192 16.6258L108.839 16.9793ZM83.6085 10.6718L83.255 10.3183L82.9014 10.6718L83.255 11.0254L83.6085 10.6718ZM99.3773 26.4406L99.7308 26.7942L100.084 26.4406L99.7308 26.0871L99.3773 26.4406ZM83.6085 42.2094L83.255 41.8558L82.9014 42.2094L83.255 42.5629L83.6085 42.2094ZM93.0698 51.6706L92.7162 52.0242L93.0698 52.3777L93.4233 52.0242L93.0698 51.6706ZM108.839 35.9019L109.192 36.2554L108.839 35.9019ZM118.3 26.4406L118.653 26.7942L118.838 26.61L118.792 26.3536L118.3 26.4406ZM118.3 26.4406L118.792 26.3536L118.765 26.1984L118.653 26.087L118.3 26.4406ZM92.7162 1.56414L108.485 17.3329L109.192 16.6258L93.4233 0.857038L92.7162 1.56414ZM83.9621 11.0254L93.4233 1.56414L92.7162 0.857038L83.255 10.3183L83.9621 11.0254ZM99.7308 26.0871L83.9621 10.3183L83.255 11.0254L99.0237 26.7942L99.7308 26.0871ZM99.0237 26.0871L83.255 41.8558L83.9621 42.5629L99.7308 26.7942L99.0237 26.0871ZM83.255 42.5629L92.7162 52.0242L93.4233 51.3171L83.9621 41.8558L83.255 42.5629ZM93.4233 52.0242L109.192 36.2554L108.485 35.5483L92.7162 51.3171L93.4233 52.0242ZM117.946 26.0871L108.485 35.5483L109.192 36.2554L118.653 26.7942L117.946 26.0871ZM117.807 26.5276L117.807 26.5276L118.792 26.3536L118.792 26.3536L117.807 26.5276ZM108.485 17.3329L117.946 26.7942L118.653 26.087L109.192 16.6258L108.485 17.3329Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M51.6508 1.21059L52.0044 0.857038L51.6508 0.503485L51.2973 0.857038L51.6508 1.21059ZM67.4196 16.9793L67.7732 16.6258L67.4196 16.9793ZM42.1896 10.6718L41.836 10.3183L41.4825 10.6718L41.836 11.0254L42.1896 10.6718ZM57.9583 26.4406L58.3119 26.7942L58.6655 26.4406L58.3119 26.0871L57.9583 26.4406ZM42.1896 42.2094L41.836 41.8558L41.4825 42.2094L41.836 42.5629L42.1896 42.2094ZM51.6509 51.6706L51.2973 52.0242L51.6509 52.3777L52.0044 52.0242L51.6509 51.6706ZM67.4196 35.9019L67.7732 36.2554L67.4196 35.9019ZM76.8809 26.4406L77.2344 26.7942L77.383 26.6456L77.3808 26.4355L76.8809 26.4406ZM76.8809 26.4406L77.3808 26.4355L77.3788 26.2314L77.2344 26.087L76.8809 26.4406ZM51.2973 1.56414L67.0661 17.3329L67.7732 16.6258L52.0044 0.857038L51.2973 1.56414ZM42.5431 11.0254L52.0044 1.56414L51.2973 0.857038L41.836 10.3183L42.5431 11.0254ZM58.3119 26.0871L42.5431 10.3183L41.836 11.0254L57.6048 26.7942L58.3119 26.0871ZM57.6048 26.0871L41.836 41.8558L42.5431 42.5629L58.3119 26.7942L57.6048 26.0871ZM41.836 42.5629L51.2973 52.0242L52.0044 51.3171L42.5431 41.8558L41.836 42.5629ZM52.0044 52.0242L67.7732 36.2554L67.0661 35.5483L51.2973 51.3171L52.0044 52.0242ZM76.5273 26.0871L67.0661 35.5483L67.7732 36.2554L77.2344 26.7942L76.5273 26.0871ZM76.3809 26.4457L76.3809 26.4457L77.3808 26.4355L77.3808 26.4355L76.3809 26.4457ZM67.0661 17.3329L76.5273 26.7942L77.2344 26.087L67.7732 16.6258L67.0661 17.3329Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M10.2309 1.21059L10.5845 0.857038L10.2309 0.503485L9.87737 0.857038L10.2309 1.21059ZM25.9997 16.9793L26.3532 16.6258L25.9997 16.9793ZM0.769665 10.6718L0.416111 10.3183L0.0625576 10.6718L0.416111 11.0254L0.769665 10.6718ZM16.5384 26.4406L16.892 26.7942L17.2455 26.4406L16.892 26.0871L16.5384 26.4406ZM0.76967 42.2094L0.416117 41.8558L0.0625628 42.2094L0.416117 42.5629L0.76967 42.2094ZM10.2309 51.6706L9.87737 52.0242L10.2309 52.3777L10.5845 52.0242L10.2309 51.6706ZM25.9997 35.9019L26.3532 36.2554L25.9997 35.9019ZM35.4609 26.4406L35.8145 26.7942L36.168 26.4406L35.8145 26.0871L35.4609 26.4406ZM9.87737 1.56414L25.6461 17.3329L26.3532 16.6258L10.5845 0.857038L9.87737 1.56414ZM1.12322 11.0254L10.5845 1.56414L9.87737 0.857038L0.416111 10.3183L1.12322 11.0254ZM16.892 26.0871L1.12322 10.3183L0.416111 11.0254L16.1849 26.7942L16.892 26.0871ZM16.1849 26.0871L0.416117 41.8558L1.12322 42.5629L16.892 26.7942L16.1849 26.0871ZM0.416117 42.5629L9.87737 52.0242L10.5845 51.3171L1.12322 41.8558L0.416117 42.5629ZM10.5845 52.0242L26.3532 36.2554L25.6461 35.5483L9.87737 51.3171L10.5845 52.0242ZM26.3532 36.2554L35.8145 26.7942L35.1074 26.0871L25.6461 35.5483L26.3532 36.2554ZM25.6461 17.3329L35.1074 26.7942L35.8145 26.0871L26.3532 16.6258L25.6461 17.3329Z\" fill=\"#FFFCFA\" />\n                    </svg> : <svg style={{ position: 'absolute', top: '110px', left: '520px', zIndex: '9999' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"161\" height=\"53\" viewBox=\"0 0 161 53\" fill=\"none\">\n                        <path d=\"M134.489 1.21059L134.842 0.857038L134.489 0.503485L134.135 0.857038L134.489 1.21059ZM150.257 16.9793L150.611 16.6258L150.257 16.9793ZM125.027 10.6718L124.674 10.3183L124.32 10.6718L124.674 11.0254L125.027 10.6718ZM140.796 26.4406L141.15 26.7942L141.503 26.4406L141.15 26.0871L140.796 26.4406ZM125.027 42.2094L124.674 41.8558L124.32 42.2094L124.674 42.5629L125.027 42.2094ZM134.489 51.6706L134.135 52.0242L134.489 52.3777L134.842 52.0242L134.489 51.6706ZM150.257 35.9019L150.611 36.2554L150.257 35.9019ZM159.719 26.4406L160.072 26.7942L160.426 26.4406L160.072 26.0871L159.719 26.4406ZM134.135 1.56414L149.904 17.3329L150.611 16.6258L134.842 0.857038L134.135 1.56414ZM125.381 11.0254L134.842 1.56414L134.135 0.857038L124.674 10.3183L125.381 11.0254ZM141.15 26.0871L125.381 10.3183L124.674 11.0254L140.443 26.7942L141.15 26.0871ZM140.443 26.0871L124.674 41.8558L125.381 42.5629L141.15 26.7942L140.443 26.0871ZM124.674 42.5629L134.135 52.0242L134.842 51.3171L125.381 41.8558L124.674 42.5629ZM134.842 52.0242L150.611 36.2554L149.904 35.5483L134.135 51.3171L134.842 52.0242ZM150.611 36.2554L160.072 26.7942L159.365 26.0871L149.904 35.5483L150.611 36.2554ZM149.904 17.3329L159.365 26.7942L160.072 26.0871L150.611 16.6258L149.904 17.3329Z\" fill=\"#171717\" />\n                        <path d=\"M93.0698 1.21059L93.4233 0.857038L93.0698 0.503485L92.7162 0.857038L93.0698 1.21059ZM108.839 16.9793L109.192 16.6258L108.839 16.9793ZM83.6085 10.6718L83.255 10.3183L82.9014 10.6718L83.255 11.0254L83.6085 10.6718ZM99.3773 26.4406L99.7308 26.7942L100.084 26.4406L99.7308 26.0871L99.3773 26.4406ZM83.6085 42.2094L83.255 41.8558L82.9014 42.2094L83.255 42.5629L83.6085 42.2094ZM93.0698 51.6706L92.7162 52.0242L93.0698 52.3777L93.4233 52.0242L93.0698 51.6706ZM108.839 35.9019L109.192 36.2554L108.839 35.9019ZM118.3 26.4406L118.653 26.7942L118.838 26.61L118.792 26.3536L118.3 26.4406ZM118.3 26.4406L118.792 26.3536L118.765 26.1984L118.653 26.087L118.3 26.4406ZM92.7162 1.56414L108.485 17.3329L109.192 16.6258L93.4233 0.857038L92.7162 1.56414ZM83.9621 11.0254L93.4233 1.56414L92.7162 0.857038L83.255 10.3183L83.9621 11.0254ZM99.7308 26.0871L83.9621 10.3183L83.255 11.0254L99.0237 26.7942L99.7308 26.0871ZM99.0237 26.0871L83.255 41.8558L83.9621 42.5629L99.7308 26.7942L99.0237 26.0871ZM83.255 42.5629L92.7162 52.0242L93.4233 51.3171L83.9621 41.8558L83.255 42.5629ZM93.4233 52.0242L109.192 36.2554L108.485 35.5483L92.7162 51.3171L93.4233 52.0242ZM117.946 26.0871L108.485 35.5483L109.192 36.2554L118.653 26.7942L117.946 26.0871ZM117.807 26.5276L117.807 26.5276L118.792 26.3536L118.792 26.3536L117.807 26.5276ZM108.485 17.3329L117.946 26.7942L118.653 26.087L109.192 16.6258L108.485 17.3329Z\" fill=\"#171717\" />\n                        <path d=\"M51.6508 1.21059L52.0044 0.857038L51.6508 0.503485L51.2973 0.857038L51.6508 1.21059ZM67.4196 16.9793L67.7732 16.6258L67.4196 16.9793ZM42.1896 10.6718L41.836 10.3183L41.4825 10.6718L41.836 11.0254L42.1896 10.6718ZM57.9583 26.4406L58.3119 26.7942L58.6655 26.4406L58.3119 26.0871L57.9583 26.4406ZM42.1896 42.2094L41.836 41.8558L41.4825 42.2094L41.836 42.5629L42.1896 42.2094ZM51.6509 51.6706L51.2973 52.0242L51.6509 52.3777L52.0044 52.0242L51.6509 51.6706ZM67.4196 35.9019L67.7732 36.2554L67.4196 35.9019ZM76.8809 26.4406L77.2344 26.7942L77.383 26.6456L77.3808 26.4355L76.8809 26.4406ZM76.8809 26.4406L77.3808 26.4355L77.3788 26.2314L77.2344 26.087L76.8809 26.4406ZM51.2973 1.56414L67.0661 17.3329L67.7732 16.6258L52.0044 0.857038L51.2973 1.56414ZM42.5431 11.0254L52.0044 1.56414L51.2973 0.857038L41.836 10.3183L42.5431 11.0254ZM58.3119 26.0871L42.5431 10.3183L41.836 11.0254L57.6048 26.7942L58.3119 26.0871ZM57.6048 26.0871L41.836 41.8558L42.5431 42.5629L58.3119 26.7942L57.6048 26.0871ZM41.836 42.5629L51.2973 52.0242L52.0044 51.3171L42.5431 41.8558L41.836 42.5629ZM52.0044 52.0242L67.7732 36.2554L67.0661 35.5483L51.2973 51.3171L52.0044 52.0242ZM76.5273 26.0871L67.0661 35.5483L67.7732 36.2554L77.2344 26.7942L76.5273 26.0871ZM76.3809 26.4457L76.3809 26.4457L77.3808 26.4355L77.3808 26.4355L76.3809 26.4457ZM67.0661 17.3329L76.5273 26.7942L77.2344 26.087L67.7732 16.6258L67.0661 17.3329Z\" fill=\"#171717\" />\n                        <path d=\"M10.2309 1.21059L10.5845 0.857038L10.2309 0.503485L9.87737 0.857038L10.2309 1.21059ZM25.9997 16.9793L26.3532 16.6258L25.9997 16.9793ZM0.769665 10.6718L0.416111 10.3183L0.0625576 10.6718L0.416111 11.0254L0.769665 10.6718ZM16.5384 26.4406L16.892 26.7942L17.2455 26.4406L16.892 26.0871L16.5384 26.4406ZM0.76967 42.2094L0.416117 41.8558L0.0625628 42.2094L0.416117 42.5629L0.76967 42.2094ZM10.2309 51.6706L9.87737 52.0242L10.2309 52.3777L10.5845 52.0242L10.2309 51.6706ZM25.9997 35.9019L26.3532 36.2554L25.9997 35.9019ZM35.4609 26.4406L35.8145 26.7942L36.168 26.4406L35.8145 26.0871L35.4609 26.4406ZM9.87737 1.56414L25.6461 17.3329L26.3532 16.6258L10.5845 0.857038L9.87737 1.56414ZM1.12322 11.0254L10.5845 1.56414L9.87737 0.857038L0.416111 10.3183L1.12322 11.0254ZM16.892 26.0871L1.12322 10.3183L0.416111 11.0254L16.1849 26.7942L16.892 26.0871ZM16.1849 26.0871L0.416117 41.8558L1.12322 42.5629L16.892 26.7942L16.1849 26.0871ZM0.416117 42.5629L9.87737 52.0242L10.5845 51.3171L1.12322 41.8558L0.416117 42.5629ZM10.5845 52.0242L26.3532 36.2554L25.6461 35.5483L9.87737 51.3171L10.5845 52.0242ZM26.3532 36.2554L35.8145 26.7942L35.1074 26.0871L25.6461 35.5483L26.3532 36.2554ZM25.6461 17.3329L35.1074 26.7942L35.8145 26.0871L26.3532 16.6258L25.6461 17.3329Z\" fill=\"#171717\" />\n                    </svg>\n\n                }\n                {(proximoPartido.deporte[0] !== undefined) ? <img style={{ position: 'absolute', width: '1080px', height: '1080px' }} className=\"top-0 left-0\" src={proximoPartido.deporte[0].imgCancha} /> : \"\"\n                }\n\n                <div id=\"fotoVisitante\" style={{ position: 'absolute', height: '660px', width: '620px', background: `url(${proximoPartido.fotoVisitante}) center center/cover`, filter: 'grayscale(1)', top: '130px', left: '70px' }} ></div>\n                <div id=\"fotoLocal\" style={{ position: 'absolute', height: '420px', width: '650px', background: `url(${proximoPartido.fotoLocal}) center center/cover`, top: '500px', right: '95px' }} ></div>\n                <div id=\"escudo+lugar\" className=\"flex flex-col absolute\" style={{ left: '720px', bottom: '600px' }}>\n                    {(proximoPartido.eqLocal[0] !== undefined) ?\n                        <img src={proximoPartido.eqLocal[0].escudo} className=\"mt-2\" style={{ width: '80px', height: '80px' }} /> :\n                        \"\"\n                    }\n                    {(proximoPartido.eqVisitante[0] !== undefined) ?\n                        <img src={proximoPartido.eqVisitante[0].escudo} className=\"mt-2\" style={{ width: '80px', height: '80px' }} /> :\n                        \"\"\n                    }\n                    <div className=\"mt-2 text-orange tracking-widest font-semibold\" style={{ fontFamily: 'HK Grotesk', fontSize: '22px' }}> {proximoPartido.fecha} {proximoPartido.hora}<br />\n                        <span className=\" text-black dark:text-white uppercase \">{proximoPartido.lugar}</span></div></div>\n                {(proximoPartido.eqLocal[0] !== undefined && proximoPartido.eqVisitante[0] !== undefined) ?\n                    <div className=\"font-title absolute bg-orange p-5 flex items-center text-white text-center\" style={{ fontSize: '60px', top: '815px', left: '140px', zIndex: 9999, witdh: 'auto' }}> <span style={{ padding: 0, margin: 0, lineHeight: '40px' }}>{proximoPartido.eqLocal[0].nombre} vs {proximoPartido.eqVisitante[0].nombre}</span></div> :\n                    \"\"\n                }\n\n\n\n\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    proximoPartido: state.proximoPartido,\n    deportes: state.deportes\n})\n\n\nexport default connect(mapStateToProps)(ProximoPartido)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\n\nconst FinalPartido = (props) => {\n    let { finalPartido, deportes } = props;\n    console.log(finalPartido)\n\n\n\n    return (\n\n        <div className={finalPartido.darkMode === true ? 'dark' : ''}>\n            <div style={{ width: '1080px', height: '1080px' }} className=\"bg-white dark:bg-black relative\">\n\n                <div className=\"font-title absolute bg-black dark:bg-white p-5 flex items-center text-white dark:text-black text-center\" style={{ fontSize: '60px', top: '70px', left: '80px', zIndex: 9999, witdh: 'auto' }}> <span style={{ padding: 0, margin: 0, lineHeight: '40px' }}>Final del partido</span></div>\n                {/* aca va la imagen */}\n\n\n                {(finalPartido.deporte[0] !== undefined) ? <img style={{ position: 'absolute', width: '1080px', height: '1080px' }} className=\"top-0 left-0\" src={finalPartido.deporte[0].imgCancha} /> : \"\"\n                }\n                {finalPartido.foto !== \"\" ?\n                    <div className=\"absolute bg-orange\" style={{ top: '120px', left: '105px', width: '646px', height: '880px', zIndex: 1, background: `url(${finalPartido.foto}) center center/cover` }}></div> : \"\"\n                }\n\n                <div className=\"flex flex-col absolute\" style={{ left: '800px', top: '280px', zIndex: 99999999, alignItems: 'center', minWidth: '142px' }}>\n                    {(finalPartido.eqLocal[0] !== undefined) ?\n                        <img src={finalPartido.eqLocal[0].escudo} className=\"mt-2\" style={{ width: '80px', height: '80px' }} /> :\n                        \"\"\n                    }\n                    <p className=\"font-title text-black dark:text-white\" style={{ margin: 0, padding: 0, fontSize: '180px', lineHeight: '160px', marginTop: '40px', }}>{finalPartido.pLocal}</p>\n                    <p className=\"font-title text-black dark:text-white\" style={{ margin: 0, padding: 0, fontSize: '180px', lineHeight: '160px', marginTop: '40px', }}>{finalPartido.pVisitante}</p>\n                    {(finalPartido.eqVisitante[0] !== undefined) ?\n                        <img src={finalPartido.eqVisitante[0].escudo} className=\"mt-2\" style={{ width: '80px', height: '80px', marginTop: '40px' }} /> :\n                        \"\"\n                    }\n                </div>\n                {(finalPartido.eqLocal[0] !== undefined && finalPartido.eqVisitante[0] !== undefined) ?\n                    <div className=\"font-title absolute bg-orange p-5 flex items-center text-white text-center\" style={{ fontSize: '60px', top: '930px', right: '300px', zIndex: 9999, witdh: 'auto' }}> <span style={{ padding: 0, margin: 0, lineHeight: '40px' }}>{finalPartido.eqLocal[0].nombre} vs {finalPartido.eqVisitante[0].nombre}</span></div> :\n                    \"\"\n                }\n                {finalPartido.darkMode === false ?\n                    <svg style={{ position: 'absolute', bottom: '170px', right: '290px', zIndex: 0 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"112\" height=\"204\" viewBox=\"0 0 112 204\" fill=\"none\">\n                        <path d=\"M109.872 3.63965C109.044 3.63965 108.372 2.96808 108.372 2.13965C108.372 1.31123 109.044 0.639653 109.872 0.639653C110.7 0.639653 111.372 1.31123 111.372 2.13965C111.372 2.96808 110.7 3.63965 109.872 3.63965Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 3.63965C93.6622 3.63965 92.9906 2.96808 92.9906 2.13965C92.9906 1.31123 93.6622 0.639652 94.4906 0.639652C95.3191 0.639653 95.9906 1.31123 95.9906 2.13965C95.9906 2.96808 95.3191 3.63965 94.4906 3.63965Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 3.63965C78.2808 3.63965 77.6092 2.96808 77.6092 2.13965C77.6092 1.31122 78.2808 0.639652 79.1092 0.639652C79.9376 0.639652 80.6092 1.31122 80.6092 2.13965C80.6092 2.96808 79.9376 3.63965 79.1092 3.63965Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 3.63965C62.8994 3.63965 62.2278 2.96808 62.2278 2.13965C62.2278 1.31122 62.8994 0.639651 63.7278 0.639651C64.5562 0.639651 65.2278 1.31122 65.2278 2.13965C65.2278 2.96808 64.5562 3.63965 63.7278 3.63965Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 3.63965C47.5179 3.63965 46.8464 2.96808 46.8464 2.13965C46.8464 1.31122 47.5179 0.63965 48.3464 0.63965C49.1748 0.63965 49.8464 1.31122 49.8464 2.13965C49.8464 2.96808 49.1748 3.63965 48.3464 3.63965Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 3.63965C32.1365 3.63965 31.4649 2.96808 31.4649 2.13965C31.4649 1.31122 32.1365 0.63965 32.9649 0.63965C33.7934 0.63965 34.4649 1.31122 34.4649 2.13965C34.4649 2.96808 33.7934 3.63965 32.9649 3.63965Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 3.63965C16.7551 3.63965 16.0835 2.96808 16.0835 2.13965C16.0835 1.31122 16.7551 0.639649 17.5835 0.639649C18.4119 0.639649 19.0835 1.31122 19.0835 2.13965C19.0835 2.96808 18.4119 3.63965 17.5835 3.63965Z\" fill=\"#171717\" />\n                        <path d=\"M2.2021 3.63965C1.37367 3.63965 0.702096 2.96808 0.702096 2.13965C0.702096 1.31122 1.37367 0.639648 2.2021 0.639648C3.03052 0.639648 3.7021 1.31122 3.7021 2.13965C3.7021 2.96808 3.03052 3.63965 2.2021 3.63965Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 19.0211C109.044 19.0211 108.372 18.3495 108.372 17.5211C108.372 16.6926 109.044 16.0211 109.872 16.0211C110.7 16.0211 111.372 16.6926 111.372 17.5211C111.372 18.3495 110.7 19.0211 109.872 19.0211Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 19.0211C93.6622 19.0211 92.9906 18.3495 92.9906 17.5211C92.9906 16.6926 93.6622 16.0211 94.4906 16.0211C95.3191 16.0211 95.9906 16.6926 95.9906 17.5211C95.9906 18.3495 95.3191 19.0211 94.4906 19.0211Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 19.0211C78.2808 19.0211 77.6092 18.3495 77.6092 17.5211C77.6092 16.6926 78.2808 16.0211 79.1092 16.0211C79.9376 16.0211 80.6092 16.6926 80.6092 17.5211C80.6092 18.3495 79.9376 19.0211 79.1092 19.0211Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 19.0211C62.8994 19.0211 62.2278 18.3495 62.2278 17.5211C62.2278 16.6926 62.8994 16.0211 63.7278 16.0211C64.5562 16.0211 65.2278 16.6926 65.2278 17.5211C65.2278 18.3495 64.5562 19.0211 63.7278 19.0211Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 19.0211C47.5179 19.0211 46.8464 18.3495 46.8464 17.5211C46.8464 16.6926 47.5179 16.0211 48.3464 16.0211C49.1748 16.0211 49.8464 16.6926 49.8464 17.5211C49.8464 18.3495 49.1748 19.0211 48.3464 19.0211Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 19.0211C32.1365 19.0211 31.4649 18.3495 31.4649 17.5211C31.4649 16.6926 32.1365 16.0211 32.9649 16.0211C33.7934 16.0211 34.4649 16.6926 34.4649 17.5211C34.4649 18.3495 33.7934 19.0211 32.9649 19.0211Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 19.0211C16.7551 19.0211 16.0835 18.3495 16.0835 17.5211C16.0835 16.6926 16.7551 16.0211 17.5835 16.0211C18.4119 16.0211 19.0835 16.6926 19.0835 17.5211C19.0835 18.3495 18.4119 19.0211 17.5835 19.0211Z\" fill=\"#171717\" />\n                        <path d=\"M2.2021 19.0211C1.37367 19.0211 0.702095 18.3495 0.702095 17.5211C0.702096 16.6926 1.37367 16.0211 2.2021 16.0211C3.03052 16.0211 3.7021 16.6926 3.7021 17.5211C3.7021 18.3495 3.03052 19.0211 2.2021 19.0211Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 34.4025C109.044 34.4025 108.372 33.7309 108.372 32.9025C108.372 32.0741 109.044 31.4025 109.872 31.4025C110.7 31.4025 111.372 32.0741 111.372 32.9025C111.372 33.7309 110.7 34.4025 109.872 34.4025Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 34.4025C93.6622 34.4025 92.9906 33.7309 92.9906 32.9025C92.9906 32.0741 93.6622 31.4025 94.4906 31.4025C95.3191 31.4025 95.9906 32.0741 95.9906 32.9025C95.9906 33.7309 95.3191 34.4025 94.4906 34.4025Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 34.4025C78.2808 34.4025 77.6092 33.7309 77.6092 32.9025C77.6092 32.0741 78.2808 31.4025 79.1092 31.4025C79.9376 31.4025 80.6092 32.0741 80.6092 32.9025C80.6092 33.7309 79.9376 34.4025 79.1092 34.4025Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 34.4025C62.8994 34.4025 62.2278 33.7309 62.2278 32.9025C62.2278 32.0741 62.8994 31.4025 63.7278 31.4025C64.5562 31.4025 65.2278 32.0741 65.2278 32.9025C65.2278 33.7309 64.5562 34.4025 63.7278 34.4025Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 34.4025C47.5179 34.4025 46.8464 33.7309 46.8464 32.9025C46.8464 32.0741 47.5179 31.4025 48.3464 31.4025C49.1748 31.4025 49.8464 32.0741 49.8464 32.9025C49.8464 33.7309 49.1748 34.4025 48.3464 34.4025Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 34.4025C32.1365 34.4025 31.4649 33.7309 31.4649 32.9025C31.4649 32.0741 32.1365 31.4025 32.9649 31.4025C33.7934 31.4025 34.4649 32.0741 34.4649 32.9025C34.4649 33.7309 33.7934 34.4025 32.9649 34.4025Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 34.4025C16.7551 34.4025 16.0835 33.7309 16.0835 32.9025C16.0835 32.0741 16.7551 31.4025 17.5835 31.4025C18.4119 31.4025 19.0835 32.0741 19.0835 32.9025C19.0835 33.7309 18.4119 34.4025 17.5835 34.4025Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 34.4025C1.37367 34.4025 0.702095 33.7309 0.702095 32.9025C0.702095 32.0741 1.37367 31.4025 2.20209 31.4025C3.03052 31.4025 3.70209 32.0741 3.70209 32.9025C3.70209 33.7309 3.03052 34.4025 2.20209 34.4025Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 49.7839C109.044 49.7839 108.372 49.1123 108.372 48.2839C108.372 47.4555 109.044 46.7839 109.872 46.7839C110.7 46.7839 111.372 47.4555 111.372 48.2839C111.372 49.1123 110.7 49.7839 109.872 49.7839Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 49.7839C93.6622 49.7839 92.9906 49.1123 92.9906 48.2839C92.9906 47.4555 93.6622 46.7839 94.4906 46.7839C95.3191 46.7839 95.9906 47.4555 95.9906 48.2839C95.9906 49.1123 95.3191 49.7839 94.4906 49.7839Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 49.7839C78.2808 49.7839 77.6092 49.1123 77.6092 48.2839C77.6092 47.4555 78.2808 46.7839 79.1092 46.7839C79.9376 46.7839 80.6092 47.4555 80.6092 48.2839C80.6092 49.1123 79.9376 49.7839 79.1092 49.7839Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 49.7839C62.8994 49.7839 62.2278 49.1123 62.2278 48.2839C62.2278 47.4555 62.8994 46.7839 63.7278 46.7839C64.5562 46.7839 65.2278 47.4555 65.2278 48.2839C65.2278 49.1123 64.5562 49.7839 63.7278 49.7839Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 49.7839C47.5179 49.7839 46.8464 49.1123 46.8464 48.2839C46.8464 47.4555 47.5179 46.7839 48.3464 46.7839C49.1748 46.7839 49.8464 47.4555 49.8464 48.2839C49.8464 49.1123 49.1748 49.7839 48.3464 49.7839Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 49.7839C32.1365 49.7839 31.4649 49.1123 31.4649 48.2839C31.4649 47.4555 32.1365 46.7839 32.9649 46.7839C33.7934 46.7839 34.4649 47.4555 34.4649 48.2839C34.4649 49.1123 33.7934 49.7839 32.9649 49.7839Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 49.7839C16.7551 49.7839 16.0835 49.1123 16.0835 48.2839C16.0835 47.4555 16.7551 46.7839 17.5835 46.7839C18.4119 46.7839 19.0835 47.4555 19.0835 48.2839C19.0835 49.1123 18.4119 49.7839 17.5835 49.7839Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 49.7839C1.37367 49.7839 0.702094 49.1123 0.702094 48.2839C0.702094 47.4555 1.37367 46.7839 2.20209 46.7839C3.03052 46.7839 3.70209 47.4555 3.70209 48.2839C3.70209 49.1123 3.03052 49.7839 2.20209 49.7839Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 65.1653C109.044 65.1653 108.372 64.4938 108.372 63.6653C108.372 62.8369 109.044 62.1653 109.872 62.1653C110.7 62.1653 111.372 62.8369 111.372 63.6653C111.372 64.4938 110.7 65.1653 109.872 65.1653Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 65.1653C93.6622 65.1653 92.9906 64.4938 92.9906 63.6653C92.9906 62.8369 93.6622 62.1653 94.4906 62.1653C95.3191 62.1653 95.9906 62.8369 95.9906 63.6653C95.9906 64.4938 95.3191 65.1653 94.4906 65.1653Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 65.1653C78.2808 65.1653 77.6092 64.4938 77.6092 63.6653C77.6092 62.8369 78.2808 62.1653 79.1092 62.1653C79.9376 62.1653 80.6092 62.8369 80.6092 63.6653C80.6092 64.4938 79.9376 65.1653 79.1092 65.1653Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 65.1653C62.8994 65.1653 62.2278 64.4938 62.2278 63.6653C62.2278 62.8369 62.8994 62.1653 63.7278 62.1653C64.5562 62.1653 65.2278 62.8369 65.2278 63.6653C65.2278 64.4938 64.5562 65.1653 63.7278 65.1653Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 65.1653C47.5179 65.1653 46.8464 64.4938 46.8464 63.6653C46.8464 62.8369 47.5179 62.1653 48.3464 62.1653C49.1748 62.1653 49.8464 62.8369 49.8464 63.6653C49.8464 64.4938 49.1748 65.1653 48.3464 65.1653Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 65.1653C32.1365 65.1653 31.4649 64.4938 31.4649 63.6653C31.4649 62.8369 32.1365 62.1653 32.9649 62.1653C33.7934 62.1653 34.4649 62.8369 34.4649 63.6653C34.4649 64.4938 33.7934 65.1653 32.9649 65.1653Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 65.1653C16.7551 65.1653 16.0835 64.4938 16.0835 63.6653C16.0835 62.8369 16.7551 62.1653 17.5835 62.1653C18.4119 62.1653 19.0835 62.8369 19.0835 63.6653C19.0835 64.4938 18.4119 65.1653 17.5835 65.1653Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 65.1653C1.37367 65.1653 0.702093 64.4938 0.702093 63.6653C0.702093 62.8369 1.37367 62.1653 2.20209 62.1653C3.03052 62.1653 3.70209 62.8369 3.70209 63.6653C3.70209 64.4938 3.03052 65.1653 2.20209 65.1653Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 80.5468C109.044 80.5468 108.372 79.8752 108.372 79.0468C108.372 78.2183 109.044 77.5468 109.872 77.5468C110.7 77.5468 111.372 78.2183 111.372 79.0468C111.372 79.8752 110.7 80.5468 109.872 80.5468Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 80.5468C93.6622 80.5468 92.9906 79.8752 92.9906 79.0468C92.9906 78.2183 93.6622 77.5468 94.4906 77.5468C95.3191 77.5468 95.9906 78.2183 95.9906 79.0468C95.9906 79.8752 95.3191 80.5468 94.4906 80.5468Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 80.5468C78.2808 80.5468 77.6092 79.8752 77.6092 79.0468C77.6092 78.2183 78.2808 77.5468 79.1092 77.5468C79.9376 77.5468 80.6092 78.2183 80.6092 79.0468C80.6092 79.8752 79.9376 80.5468 79.1092 80.5468Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 80.5468C62.8994 80.5468 62.2278 79.8752 62.2278 79.0468C62.2278 78.2183 62.8994 77.5468 63.7278 77.5468C64.5562 77.5468 65.2278 78.2183 65.2278 79.0468C65.2278 79.8752 64.5562 80.5468 63.7278 80.5468Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 80.5468C47.5179 80.5468 46.8464 79.8752 46.8464 79.0468C46.8464 78.2183 47.5179 77.5468 48.3464 77.5468C49.1748 77.5468 49.8464 78.2183 49.8464 79.0468C49.8464 79.8752 49.1748 80.5468 48.3464 80.5468Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 80.5468C32.1365 80.5468 31.4649 79.8752 31.4649 79.0468C31.4649 78.2183 32.1365 77.5468 32.9649 77.5468C33.7934 77.5468 34.4649 78.2183 34.4649 79.0468C34.4649 79.8752 33.7934 80.5468 32.9649 80.5468Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 80.5468C16.7551 80.5468 16.0835 79.8752 16.0835 79.0468C16.0835 78.2183 16.7551 77.5468 17.5835 77.5468C18.4119 77.5468 19.0835 78.2183 19.0835 79.0468C19.0835 79.8752 18.4119 80.5468 17.5835 80.5468Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 80.5468C1.37367 80.5468 0.702093 79.8752 0.702093 79.0468C0.702093 78.2183 1.37367 77.5468 2.20209 77.5468C3.03052 77.5468 3.70209 78.2183 3.70209 79.0468C3.70209 79.8752 3.03052 80.5468 2.20209 80.5468Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 95.9282C109.044 95.9282 108.372 95.2566 108.372 94.4282C108.372 93.5998 109.044 92.9282 109.872 92.9282C110.7 92.9282 111.372 93.5998 111.372 94.4282C111.372 95.2566 110.7 95.9282 109.872 95.9282Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 95.9282C93.6622 95.9282 92.9906 95.2566 92.9906 94.4282C92.9906 93.5998 93.6622 92.9282 94.4906 92.9282C95.3191 92.9282 95.9906 93.5998 95.9906 94.4282C95.9906 95.2566 95.3191 95.9282 94.4906 95.9282Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 95.9282C78.2808 95.9282 77.6092 95.2566 77.6092 94.4282C77.6092 93.5997 78.2808 92.9282 79.1092 92.9282C79.9376 92.9282 80.6092 93.5997 80.6092 94.4282C80.6092 95.2566 79.9376 95.9282 79.1092 95.9282Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 95.9282C62.8994 95.9282 62.2278 95.2566 62.2278 94.4282C62.2278 93.5997 62.8994 92.9282 63.7278 92.9282C64.5562 92.9282 65.2278 93.5997 65.2278 94.4282C65.2278 95.2566 64.5562 95.9282 63.7278 95.9282Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 95.9282C47.5179 95.9282 46.8464 95.2566 46.8464 94.4282C46.8464 93.5997 47.5179 92.9282 48.3464 92.9282C49.1748 92.9282 49.8464 93.5997 49.8464 94.4282C49.8464 95.2566 49.1748 95.9282 48.3464 95.9282Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 95.9282C32.1365 95.9282 31.4649 95.2566 31.4649 94.4282C31.4649 93.5997 32.1365 92.9282 32.9649 92.9282C33.7934 92.9282 34.4649 93.5997 34.4649 94.4282C34.4649 95.2566 33.7934 95.9282 32.9649 95.9282Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 95.9282C16.7551 95.9282 16.0835 95.2566 16.0835 94.4282C16.0835 93.5997 16.7551 92.9282 17.5835 92.9282C18.4119 92.9282 19.0835 93.5997 19.0835 94.4282C19.0835 95.2566 18.4119 95.9282 17.5835 95.9282Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 95.9282C1.37366 95.9282 0.702092 95.2566 0.702092 94.4282C0.702092 93.5997 1.37367 92.9282 2.20209 92.9282C3.03052 92.9282 3.70209 93.5997 3.70209 94.4282C3.70209 95.2566 3.03052 95.9282 2.20209 95.9282Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 111.31C109.044 111.31 108.372 110.638 108.372 109.81C108.372 108.981 109.044 108.31 109.872 108.31C110.7 108.31 111.372 108.981 111.372 109.81C111.372 110.638 110.7 111.31 109.872 111.31Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 111.31C93.6622 111.31 92.9906 110.638 92.9906 109.81C92.9906 108.981 93.6622 108.31 94.4906 108.31C95.3191 108.31 95.9906 108.981 95.9906 109.81C95.9906 110.638 95.3191 111.31 94.4906 111.31Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 111.31C78.2808 111.31 77.6092 110.638 77.6092 109.81C77.6092 108.981 78.2808 108.31 79.1092 108.31C79.9376 108.31 80.6092 108.981 80.6092 109.81C80.6092 110.638 79.9376 111.31 79.1092 111.31Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 111.31C62.8994 111.31 62.2278 110.638 62.2278 109.81C62.2278 108.981 62.8994 108.31 63.7278 108.31C64.5562 108.31 65.2278 108.981 65.2278 109.81C65.2278 110.638 64.5562 111.31 63.7278 111.31Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 111.31C47.5179 111.31 46.8464 110.638 46.8464 109.81C46.8464 108.981 47.5179 108.31 48.3464 108.31C49.1748 108.31 49.8464 108.981 49.8464 109.81C49.8464 110.638 49.1748 111.31 48.3464 111.31Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 111.31C32.1365 111.31 31.4649 110.638 31.4649 109.81C31.4649 108.981 32.1365 108.31 32.9649 108.31C33.7934 108.31 34.4649 108.981 34.4649 109.81C34.4649 110.638 33.7934 111.31 32.9649 111.31Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 111.31C16.7551 111.31 16.0835 110.638 16.0835 109.81C16.0835 108.981 16.7551 108.31 17.5835 108.31C18.4119 108.31 19.0835 108.981 19.0835 109.81C19.0835 110.638 18.4119 111.31 17.5835 111.31Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 111.31C1.37366 111.31 0.702091 110.638 0.702091 109.81C0.702091 108.981 1.37366 108.31 2.20209 108.31C3.03052 108.31 3.70209 108.981 3.70209 109.81C3.70209 110.638 3.03052 111.31 2.20209 111.31Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 126.691C109.044 126.691 108.372 126.019 108.372 125.191C108.372 124.363 109.044 123.691 109.872 123.691C110.7 123.691 111.372 124.363 111.372 125.191C111.372 126.019 110.7 126.691 109.872 126.691Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 126.691C93.6622 126.691 92.9906 126.019 92.9906 125.191C92.9906 124.363 93.6622 123.691 94.4906 123.691C95.3191 123.691 95.9906 124.363 95.9906 125.191C95.9906 126.019 95.3191 126.691 94.4906 126.691Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 126.691C78.2808 126.691 77.6092 126.019 77.6092 125.191C77.6092 124.363 78.2808 123.691 79.1092 123.691C79.9376 123.691 80.6092 124.363 80.6092 125.191C80.6092 126.019 79.9376 126.691 79.1092 126.691Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 126.691C62.8994 126.691 62.2278 126.019 62.2278 125.191C62.2278 124.363 62.8994 123.691 63.7278 123.691C64.5562 123.691 65.2278 124.363 65.2278 125.191C65.2278 126.019 64.5562 126.691 63.7278 126.691Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 126.691C47.5179 126.691 46.8464 126.019 46.8464 125.191C46.8464 124.363 47.5179 123.691 48.3464 123.691C49.1748 123.691 49.8464 124.363 49.8464 125.191C49.8464 126.019 49.1748 126.691 48.3464 126.691Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 126.691C32.1365 126.691 31.4649 126.019 31.4649 125.191C31.4649 124.363 32.1365 123.691 32.9649 123.691C33.7934 123.691 34.4649 124.363 34.4649 125.191C34.4649 126.019 33.7934 126.691 32.9649 126.691Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 126.691C16.7551 126.691 16.0835 126.019 16.0835 125.191C16.0835 124.363 16.7551 123.691 17.5835 123.691C18.4119 123.691 19.0835 124.363 19.0835 125.191C19.0835 126.019 18.4119 126.691 17.5835 126.691Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 126.691C1.37366 126.691 0.702091 126.019 0.702091 125.191C0.702091 124.363 1.37366 123.691 2.20209 123.691C3.03052 123.691 3.70209 124.363 3.70209 125.191C3.70209 126.019 3.03052 126.691 2.20209 126.691Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 142.072C109.044 142.072 108.372 141.401 108.372 140.572C108.372 139.744 109.044 139.072 109.872 139.072C110.7 139.072 111.372 139.744 111.372 140.572C111.372 141.401 110.7 142.072 109.872 142.072Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 142.072C93.6622 142.072 92.9906 141.401 92.9906 140.572C92.9906 139.744 93.6622 139.072 94.4906 139.072C95.3191 139.072 95.9906 139.744 95.9906 140.572C95.9906 141.401 95.3191 142.072 94.4906 142.072Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 142.072C78.2808 142.072 77.6092 141.401 77.6092 140.572C77.6092 139.744 78.2808 139.072 79.1092 139.072C79.9376 139.072 80.6092 139.744 80.6092 140.572C80.6092 141.401 79.9376 142.072 79.1092 142.072Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 142.072C62.8994 142.072 62.2278 141.401 62.2278 140.572C62.2278 139.744 62.8994 139.072 63.7278 139.072C64.5562 139.072 65.2278 139.744 65.2278 140.572C65.2278 141.401 64.5562 142.072 63.7278 142.072Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 142.072C47.5179 142.072 46.8464 141.401 46.8464 140.572C46.8464 139.744 47.5179 139.072 48.3464 139.072C49.1748 139.072 49.8464 139.744 49.8464 140.572C49.8464 141.401 49.1748 142.072 48.3464 142.072Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 142.072C32.1365 142.072 31.4649 141.401 31.4649 140.572C31.4649 139.744 32.1365 139.072 32.9649 139.072C33.7934 139.072 34.4649 139.744 34.4649 140.572C34.4649 141.401 33.7934 142.072 32.9649 142.072Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 142.072C16.7551 142.072 16.0835 141.401 16.0835 140.572C16.0835 139.744 16.7551 139.072 17.5835 139.072C18.4119 139.072 19.0835 139.744 19.0835 140.572C19.0835 141.401 18.4119 142.072 17.5835 142.072Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 142.072C1.37366 142.072 0.70209 141.401 0.70209 140.572C0.70209 139.744 1.37366 139.072 2.20209 139.072C3.03052 139.072 3.70209 139.744 3.70209 140.572C3.70209 141.401 3.03052 142.072 2.20209 142.072Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 157.454C109.044 157.454 108.372 156.782 108.372 155.954C108.372 155.125 109.044 154.454 109.872 154.454C110.7 154.454 111.372 155.125 111.372 155.954C111.372 156.782 110.7 157.454 109.872 157.454Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 157.454C93.6622 157.454 92.9906 156.782 92.9906 155.954C92.9906 155.125 93.6622 154.454 94.4906 154.454C95.3191 154.454 95.9906 155.125 95.9906 155.954C95.9906 156.782 95.3191 157.454 94.4906 157.454Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 157.454C78.2808 157.454 77.6092 156.782 77.6092 155.954C77.6092 155.125 78.2808 154.454 79.1092 154.454C79.9376 154.454 80.6092 155.125 80.6092 155.954C80.6092 156.782 79.9376 157.454 79.1092 157.454Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 157.454C62.8994 157.454 62.2278 156.782 62.2278 155.954C62.2278 155.125 62.8994 154.454 63.7278 154.454C64.5562 154.454 65.2278 155.125 65.2278 155.954C65.2278 156.782 64.5562 157.454 63.7278 157.454Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 157.454C47.5179 157.454 46.8464 156.782 46.8464 155.954C46.8464 155.125 47.5179 154.454 48.3464 154.454C49.1748 154.454 49.8464 155.125 49.8464 155.954C49.8464 156.782 49.1748 157.454 48.3464 157.454Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 157.454C32.1365 157.454 31.4649 156.782 31.4649 155.954C31.4649 155.125 32.1365 154.454 32.9649 154.454C33.7934 154.454 34.4649 155.125 34.4649 155.954C34.4649 156.782 33.7934 157.454 32.9649 157.454Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 157.454C16.7551 157.454 16.0835 156.782 16.0835 155.954C16.0835 155.125 16.7551 154.454 17.5835 154.454C18.4119 154.454 19.0835 155.125 19.0835 155.954C19.0835 156.782 18.4119 157.454 17.5835 157.454Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 157.454C1.37366 157.454 0.702089 156.782 0.702089 155.954C0.702089 155.125 1.37366 154.454 2.20209 154.454C3.03052 154.454 3.70209 155.125 3.70209 155.954C3.70209 156.782 3.03052 157.454 2.20209 157.454Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 172.835C109.044 172.835 108.372 172.164 108.372 171.335C108.372 170.507 109.044 169.835 109.872 169.835C110.7 169.835 111.372 170.507 111.372 171.335C111.372 172.164 110.7 172.835 109.872 172.835Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 172.835C93.6622 172.835 92.9906 172.164 92.9906 171.335C92.9906 170.507 93.6622 169.835 94.4906 169.835C95.3191 169.835 95.9906 170.507 95.9906 171.335C95.9906 172.164 95.3191 172.835 94.4906 172.835Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 172.835C78.2808 172.835 77.6092 172.164 77.6092 171.335C77.6092 170.507 78.2808 169.835 79.1092 169.835C79.9376 169.835 80.6092 170.507 80.6092 171.335C80.6092 172.164 79.9376 172.835 79.1092 172.835Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 172.835C62.8994 172.835 62.2278 172.164 62.2278 171.335C62.2278 170.507 62.8994 169.835 63.7278 169.835C64.5562 169.835 65.2278 170.507 65.2278 171.335C65.2278 172.164 64.5562 172.835 63.7278 172.835Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 172.835C47.5179 172.835 46.8464 172.164 46.8464 171.335C46.8464 170.507 47.5179 169.835 48.3464 169.835C49.1748 169.835 49.8464 170.507 49.8464 171.335C49.8464 172.164 49.1748 172.835 48.3464 172.835Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 172.835C32.1365 172.835 31.4649 172.164 31.4649 171.335C31.4649 170.507 32.1365 169.835 32.9649 169.835C33.7934 169.835 34.4649 170.507 34.4649 171.335C34.4649 172.164 33.7934 172.835 32.9649 172.835Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 172.835C16.7551 172.835 16.0835 172.164 16.0835 171.335C16.0835 170.507 16.7551 169.835 17.5835 169.835C18.4119 169.835 19.0835 170.507 19.0835 171.335C19.0835 172.164 18.4119 172.835 17.5835 172.835Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 172.835C1.37366 172.835 0.702089 172.164 0.702089 171.335C0.702089 170.507 1.37366 169.835 2.20209 169.835C3.03052 169.835 3.70209 170.507 3.70209 171.335C3.70209 172.164 3.03052 172.835 2.20209 172.835Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 188.217C109.044 188.217 108.372 187.545 108.372 186.717C108.372 185.888 109.044 185.217 109.872 185.217C110.7 185.217 111.372 185.888 111.372 186.717C111.372 187.545 110.7 188.217 109.872 188.217Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 188.217C93.6622 188.217 92.9906 187.545 92.9906 186.717C92.9906 185.888 93.6622 185.217 94.4906 185.217C95.3191 185.217 95.9906 185.888 95.9906 186.717C95.9906 187.545 95.3191 188.217 94.4906 188.217Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 188.217C78.2808 188.217 77.6092 187.545 77.6092 186.717C77.6092 185.888 78.2808 185.217 79.1092 185.217C79.9376 185.217 80.6092 185.888 80.6092 186.717C80.6092 187.545 79.9376 188.217 79.1092 188.217Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 188.217C62.8994 188.217 62.2278 187.545 62.2278 186.717C62.2278 185.888 62.8994 185.217 63.7278 185.217C64.5562 185.217 65.2278 185.888 65.2278 186.717C65.2278 187.545 64.5562 188.217 63.7278 188.217Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 188.217C47.5179 188.217 46.8464 187.545 46.8464 186.717C46.8464 185.888 47.5179 185.217 48.3464 185.217C49.1748 185.217 49.8464 185.888 49.8464 186.717C49.8464 187.545 49.1748 188.217 48.3464 188.217Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 188.217C32.1365 188.217 31.4649 187.545 31.4649 186.717C31.4649 185.888 32.1365 185.217 32.9649 185.217C33.7934 185.217 34.4649 185.888 34.4649 186.717C34.4649 187.545 33.7934 188.217 32.9649 188.217Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 188.217C16.7551 188.217 16.0835 187.545 16.0835 186.717C16.0835 185.888 16.7551 185.217 17.5835 185.217C18.4119 185.217 19.0835 185.888 19.0835 186.717C19.0835 187.545 18.4119 188.217 17.5835 188.217Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 188.217C1.37366 188.217 0.702088 187.545 0.702088 186.717C0.702088 185.888 1.37366 185.217 2.20209 185.217C3.03052 185.217 3.70209 185.888 3.70209 186.717C3.70209 187.545 3.03052 188.217 2.20209 188.217Z\" fill=\"#171717\" />\n                        <path d=\"M109.872 203.598C109.044 203.598 108.372 202.927 108.372 202.098C108.372 201.27 109.044 200.598 109.872 200.598C110.7 200.598 111.372 201.27 111.372 202.098C111.372 202.927 110.7 203.598 109.872 203.598Z\" fill=\"#171717\" />\n                        <path d=\"M94.4906 203.598C93.6622 203.598 92.9906 202.927 92.9906 202.098C92.9906 201.27 93.6622 200.598 94.4906 200.598C95.3191 200.598 95.9906 201.27 95.9906 202.098C95.9906 202.927 95.319 203.598 94.4906 203.598Z\" fill=\"#171717\" />\n                        <path d=\"M79.1092 203.598C78.2808 203.598 77.6092 202.927 77.6092 202.098C77.6092 201.27 78.2808 200.598 79.1092 200.598C79.9376 200.598 80.6092 201.27 80.6092 202.098C80.6092 202.927 79.9376 203.598 79.1092 203.598Z\" fill=\"#171717\" />\n                        <path d=\"M63.7278 203.598C62.8994 203.598 62.2278 202.927 62.2278 202.098C62.2278 201.27 62.8994 200.598 63.7278 200.598C64.5562 200.598 65.2278 201.27 65.2278 202.098C65.2278 202.927 64.5562 203.598 63.7278 203.598Z\" fill=\"#171717\" />\n                        <path d=\"M48.3464 203.598C47.5179 203.598 46.8464 202.927 46.8464 202.098C46.8464 201.27 47.5179 200.598 48.3464 200.598C49.1748 200.598 49.8464 201.27 49.8464 202.098C49.8464 202.927 49.1748 203.598 48.3464 203.598Z\" fill=\"#171717\" />\n                        <path d=\"M32.9649 203.598C32.1365 203.598 31.4649 202.927 31.4649 202.098C31.4649 201.27 32.1365 200.598 32.9649 200.598C33.7934 200.598 34.4649 201.27 34.4649 202.098C34.4649 202.927 33.7934 203.598 32.9649 203.598Z\" fill=\"#171717\" />\n                        <path d=\"M17.5835 203.598C16.7551 203.598 16.0835 202.927 16.0835 202.098C16.0835 201.27 16.7551 200.598 17.5835 200.598C18.4119 200.598 19.0835 201.27 19.0835 202.098C19.0835 202.927 18.4119 203.598 17.5835 203.598Z\" fill=\"#171717\" />\n                        <path d=\"M2.20209 203.598C1.37366 203.598 0.702087 202.927 0.702087 202.098C0.702087 201.27 1.37366 200.598 2.20209 200.598C3.03051 200.598 3.70209 201.27 3.70209 202.098C3.70209 202.927 3.03051 203.598 2.20209 203.598Z\" fill=\"#171717\" />\n                    </svg> :\n                    <svg style={{ position: 'absolute', bottom: '170px', right: '290px', zIndex: 0 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"112\" height=\"204\" viewBox=\"0 0 112 204\" fill=\"none\">\n                        <path d=\"M109.872 3.63965C109.044 3.63965 108.372 2.96808 108.372 2.13965C108.372 1.31123 109.044 0.639653 109.872 0.639653C110.7 0.639653 111.372 1.31123 111.372 2.13965C111.372 2.96808 110.7 3.63965 109.872 3.63965Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 3.63965C93.6622 3.63965 92.9906 2.96808 92.9906 2.13965C92.9906 1.31123 93.6622 0.639652 94.4906 0.639652C95.3191 0.639653 95.9906 1.31123 95.9906 2.13965C95.9906 2.96808 95.3191 3.63965 94.4906 3.63965Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 3.63965C78.2808 3.63965 77.6092 2.96808 77.6092 2.13965C77.6092 1.31122 78.2808 0.639652 79.1092 0.639652C79.9376 0.639652 80.6092 1.31122 80.6092 2.13965C80.6092 2.96808 79.9376 3.63965 79.1092 3.63965Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 3.63965C62.8994 3.63965 62.2278 2.96808 62.2278 2.13965C62.2278 1.31122 62.8994 0.639651 63.7278 0.639651C64.5562 0.639651 65.2278 1.31122 65.2278 2.13965C65.2278 2.96808 64.5562 3.63965 63.7278 3.63965Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 3.63965C47.5179 3.63965 46.8464 2.96808 46.8464 2.13965C46.8464 1.31122 47.5179 0.63965 48.3464 0.63965C49.1748 0.63965 49.8464 1.31122 49.8464 2.13965C49.8464 2.96808 49.1748 3.63965 48.3464 3.63965Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 3.63965C32.1365 3.63965 31.4649 2.96808 31.4649 2.13965C31.4649 1.31122 32.1365 0.63965 32.9649 0.63965C33.7934 0.63965 34.4649 1.31122 34.4649 2.13965C34.4649 2.96808 33.7934 3.63965 32.9649 3.63965Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 3.63965C16.7551 3.63965 16.0835 2.96808 16.0835 2.13965C16.0835 1.31122 16.7551 0.639649 17.5835 0.639649C18.4119 0.639649 19.0835 1.31122 19.0835 2.13965C19.0835 2.96808 18.4119 3.63965 17.5835 3.63965Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.2021 3.63965C1.37367 3.63965 0.702096 2.96808 0.702096 2.13965C0.702096 1.31122 1.37367 0.639648 2.2021 0.639648C3.03052 0.639648 3.7021 1.31122 3.7021 2.13965C3.7021 2.96808 3.03052 3.63965 2.2021 3.63965Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 19.0211C109.044 19.0211 108.372 18.3495 108.372 17.5211C108.372 16.6926 109.044 16.0211 109.872 16.0211C110.7 16.0211 111.372 16.6926 111.372 17.5211C111.372 18.3495 110.7 19.0211 109.872 19.0211Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 19.0211C93.6622 19.0211 92.9906 18.3495 92.9906 17.5211C92.9906 16.6926 93.6622 16.0211 94.4906 16.0211C95.3191 16.0211 95.9906 16.6926 95.9906 17.5211C95.9906 18.3495 95.3191 19.0211 94.4906 19.0211Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 19.0211C78.2808 19.0211 77.6092 18.3495 77.6092 17.5211C77.6092 16.6926 78.2808 16.0211 79.1092 16.0211C79.9376 16.0211 80.6092 16.6926 80.6092 17.5211C80.6092 18.3495 79.9376 19.0211 79.1092 19.0211Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 19.0211C62.8994 19.0211 62.2278 18.3495 62.2278 17.5211C62.2278 16.6926 62.8994 16.0211 63.7278 16.0211C64.5562 16.0211 65.2278 16.6926 65.2278 17.5211C65.2278 18.3495 64.5562 19.0211 63.7278 19.0211Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 19.0211C47.5179 19.0211 46.8464 18.3495 46.8464 17.5211C46.8464 16.6926 47.5179 16.0211 48.3464 16.0211C49.1748 16.0211 49.8464 16.6926 49.8464 17.5211C49.8464 18.3495 49.1748 19.0211 48.3464 19.0211Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 19.0211C32.1365 19.0211 31.4649 18.3495 31.4649 17.5211C31.4649 16.6926 32.1365 16.0211 32.9649 16.0211C33.7934 16.0211 34.4649 16.6926 34.4649 17.5211C34.4649 18.3495 33.7934 19.0211 32.9649 19.0211Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 19.0211C16.7551 19.0211 16.0835 18.3495 16.0835 17.5211C16.0835 16.6926 16.7551 16.0211 17.5835 16.0211C18.4119 16.0211 19.0835 16.6926 19.0835 17.5211C19.0835 18.3495 18.4119 19.0211 17.5835 19.0211Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.2021 19.0211C1.37367 19.0211 0.702095 18.3495 0.702095 17.5211C0.702096 16.6926 1.37367 16.0211 2.2021 16.0211C3.03052 16.0211 3.7021 16.6926 3.7021 17.5211C3.7021 18.3495 3.03052 19.0211 2.2021 19.0211Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 34.4025C109.044 34.4025 108.372 33.7309 108.372 32.9025C108.372 32.0741 109.044 31.4025 109.872 31.4025C110.7 31.4025 111.372 32.0741 111.372 32.9025C111.372 33.7309 110.7 34.4025 109.872 34.4025Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 34.4025C93.6622 34.4025 92.9906 33.7309 92.9906 32.9025C92.9906 32.0741 93.6622 31.4025 94.4906 31.4025C95.3191 31.4025 95.9906 32.0741 95.9906 32.9025C95.9906 33.7309 95.3191 34.4025 94.4906 34.4025Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 34.4025C78.2808 34.4025 77.6092 33.7309 77.6092 32.9025C77.6092 32.0741 78.2808 31.4025 79.1092 31.4025C79.9376 31.4025 80.6092 32.0741 80.6092 32.9025C80.6092 33.7309 79.9376 34.4025 79.1092 34.4025Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 34.4025C62.8994 34.4025 62.2278 33.7309 62.2278 32.9025C62.2278 32.0741 62.8994 31.4025 63.7278 31.4025C64.5562 31.4025 65.2278 32.0741 65.2278 32.9025C65.2278 33.7309 64.5562 34.4025 63.7278 34.4025Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 34.4025C47.5179 34.4025 46.8464 33.7309 46.8464 32.9025C46.8464 32.0741 47.5179 31.4025 48.3464 31.4025C49.1748 31.4025 49.8464 32.0741 49.8464 32.9025C49.8464 33.7309 49.1748 34.4025 48.3464 34.4025Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 34.4025C32.1365 34.4025 31.4649 33.7309 31.4649 32.9025C31.4649 32.0741 32.1365 31.4025 32.9649 31.4025C33.7934 31.4025 34.4649 32.0741 34.4649 32.9025C34.4649 33.7309 33.7934 34.4025 32.9649 34.4025Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 34.4025C16.7551 34.4025 16.0835 33.7309 16.0835 32.9025C16.0835 32.0741 16.7551 31.4025 17.5835 31.4025C18.4119 31.4025 19.0835 32.0741 19.0835 32.9025C19.0835 33.7309 18.4119 34.4025 17.5835 34.4025Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 34.4025C1.37367 34.4025 0.702095 33.7309 0.702095 32.9025C0.702095 32.0741 1.37367 31.4025 2.20209 31.4025C3.03052 31.4025 3.70209 32.0741 3.70209 32.9025C3.70209 33.7309 3.03052 34.4025 2.20209 34.4025Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 49.7839C109.044 49.7839 108.372 49.1123 108.372 48.2839C108.372 47.4555 109.044 46.7839 109.872 46.7839C110.7 46.7839 111.372 47.4555 111.372 48.2839C111.372 49.1123 110.7 49.7839 109.872 49.7839Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 49.7839C93.6622 49.7839 92.9906 49.1123 92.9906 48.2839C92.9906 47.4555 93.6622 46.7839 94.4906 46.7839C95.3191 46.7839 95.9906 47.4555 95.9906 48.2839C95.9906 49.1123 95.3191 49.7839 94.4906 49.7839Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 49.7839C78.2808 49.7839 77.6092 49.1123 77.6092 48.2839C77.6092 47.4555 78.2808 46.7839 79.1092 46.7839C79.9376 46.7839 80.6092 47.4555 80.6092 48.2839C80.6092 49.1123 79.9376 49.7839 79.1092 49.7839Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 49.7839C62.8994 49.7839 62.2278 49.1123 62.2278 48.2839C62.2278 47.4555 62.8994 46.7839 63.7278 46.7839C64.5562 46.7839 65.2278 47.4555 65.2278 48.2839C65.2278 49.1123 64.5562 49.7839 63.7278 49.7839Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 49.7839C47.5179 49.7839 46.8464 49.1123 46.8464 48.2839C46.8464 47.4555 47.5179 46.7839 48.3464 46.7839C49.1748 46.7839 49.8464 47.4555 49.8464 48.2839C49.8464 49.1123 49.1748 49.7839 48.3464 49.7839Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 49.7839C32.1365 49.7839 31.4649 49.1123 31.4649 48.2839C31.4649 47.4555 32.1365 46.7839 32.9649 46.7839C33.7934 46.7839 34.4649 47.4555 34.4649 48.2839C34.4649 49.1123 33.7934 49.7839 32.9649 49.7839Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 49.7839C16.7551 49.7839 16.0835 49.1123 16.0835 48.2839C16.0835 47.4555 16.7551 46.7839 17.5835 46.7839C18.4119 46.7839 19.0835 47.4555 19.0835 48.2839C19.0835 49.1123 18.4119 49.7839 17.5835 49.7839Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 49.7839C1.37367 49.7839 0.702094 49.1123 0.702094 48.2839C0.702094 47.4555 1.37367 46.7839 2.20209 46.7839C3.03052 46.7839 3.70209 47.4555 3.70209 48.2839C3.70209 49.1123 3.03052 49.7839 2.20209 49.7839Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 65.1653C109.044 65.1653 108.372 64.4938 108.372 63.6653C108.372 62.8369 109.044 62.1653 109.872 62.1653C110.7 62.1653 111.372 62.8369 111.372 63.6653C111.372 64.4938 110.7 65.1653 109.872 65.1653Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 65.1653C93.6622 65.1653 92.9906 64.4938 92.9906 63.6653C92.9906 62.8369 93.6622 62.1653 94.4906 62.1653C95.3191 62.1653 95.9906 62.8369 95.9906 63.6653C95.9906 64.4938 95.3191 65.1653 94.4906 65.1653Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 65.1653C78.2808 65.1653 77.6092 64.4938 77.6092 63.6653C77.6092 62.8369 78.2808 62.1653 79.1092 62.1653C79.9376 62.1653 80.6092 62.8369 80.6092 63.6653C80.6092 64.4938 79.9376 65.1653 79.1092 65.1653Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 65.1653C62.8994 65.1653 62.2278 64.4938 62.2278 63.6653C62.2278 62.8369 62.8994 62.1653 63.7278 62.1653C64.5562 62.1653 65.2278 62.8369 65.2278 63.6653C65.2278 64.4938 64.5562 65.1653 63.7278 65.1653Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 65.1653C47.5179 65.1653 46.8464 64.4938 46.8464 63.6653C46.8464 62.8369 47.5179 62.1653 48.3464 62.1653C49.1748 62.1653 49.8464 62.8369 49.8464 63.6653C49.8464 64.4938 49.1748 65.1653 48.3464 65.1653Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 65.1653C32.1365 65.1653 31.4649 64.4938 31.4649 63.6653C31.4649 62.8369 32.1365 62.1653 32.9649 62.1653C33.7934 62.1653 34.4649 62.8369 34.4649 63.6653C34.4649 64.4938 33.7934 65.1653 32.9649 65.1653Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 65.1653C16.7551 65.1653 16.0835 64.4938 16.0835 63.6653C16.0835 62.8369 16.7551 62.1653 17.5835 62.1653C18.4119 62.1653 19.0835 62.8369 19.0835 63.6653C19.0835 64.4938 18.4119 65.1653 17.5835 65.1653Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 65.1653C1.37367 65.1653 0.702093 64.4938 0.702093 63.6653C0.702093 62.8369 1.37367 62.1653 2.20209 62.1653C3.03052 62.1653 3.70209 62.8369 3.70209 63.6653C3.70209 64.4938 3.03052 65.1653 2.20209 65.1653Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 80.5468C109.044 80.5468 108.372 79.8752 108.372 79.0468C108.372 78.2183 109.044 77.5468 109.872 77.5468C110.7 77.5468 111.372 78.2183 111.372 79.0468C111.372 79.8752 110.7 80.5468 109.872 80.5468Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 80.5468C93.6622 80.5468 92.9906 79.8752 92.9906 79.0468C92.9906 78.2183 93.6622 77.5468 94.4906 77.5468C95.3191 77.5468 95.9906 78.2183 95.9906 79.0468C95.9906 79.8752 95.3191 80.5468 94.4906 80.5468Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 80.5468C78.2808 80.5468 77.6092 79.8752 77.6092 79.0468C77.6092 78.2183 78.2808 77.5468 79.1092 77.5468C79.9376 77.5468 80.6092 78.2183 80.6092 79.0468C80.6092 79.8752 79.9376 80.5468 79.1092 80.5468Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 80.5468C62.8994 80.5468 62.2278 79.8752 62.2278 79.0468C62.2278 78.2183 62.8994 77.5468 63.7278 77.5468C64.5562 77.5468 65.2278 78.2183 65.2278 79.0468C65.2278 79.8752 64.5562 80.5468 63.7278 80.5468Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 80.5468C47.5179 80.5468 46.8464 79.8752 46.8464 79.0468C46.8464 78.2183 47.5179 77.5468 48.3464 77.5468C49.1748 77.5468 49.8464 78.2183 49.8464 79.0468C49.8464 79.8752 49.1748 80.5468 48.3464 80.5468Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 80.5468C32.1365 80.5468 31.4649 79.8752 31.4649 79.0468C31.4649 78.2183 32.1365 77.5468 32.9649 77.5468C33.7934 77.5468 34.4649 78.2183 34.4649 79.0468C34.4649 79.8752 33.7934 80.5468 32.9649 80.5468Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 80.5468C16.7551 80.5468 16.0835 79.8752 16.0835 79.0468C16.0835 78.2183 16.7551 77.5468 17.5835 77.5468C18.4119 77.5468 19.0835 78.2183 19.0835 79.0468C19.0835 79.8752 18.4119 80.5468 17.5835 80.5468Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 80.5468C1.37367 80.5468 0.702093 79.8752 0.702093 79.0468C0.702093 78.2183 1.37367 77.5468 2.20209 77.5468C3.03052 77.5468 3.70209 78.2183 3.70209 79.0468C3.70209 79.8752 3.03052 80.5468 2.20209 80.5468Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 95.9282C109.044 95.9282 108.372 95.2566 108.372 94.4282C108.372 93.5998 109.044 92.9282 109.872 92.9282C110.7 92.9282 111.372 93.5998 111.372 94.4282C111.372 95.2566 110.7 95.9282 109.872 95.9282Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 95.9282C93.6622 95.9282 92.9906 95.2566 92.9906 94.4282C92.9906 93.5998 93.6622 92.9282 94.4906 92.9282C95.3191 92.9282 95.9906 93.5998 95.9906 94.4282C95.9906 95.2566 95.3191 95.9282 94.4906 95.9282Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 95.9282C78.2808 95.9282 77.6092 95.2566 77.6092 94.4282C77.6092 93.5997 78.2808 92.9282 79.1092 92.9282C79.9376 92.9282 80.6092 93.5997 80.6092 94.4282C80.6092 95.2566 79.9376 95.9282 79.1092 95.9282Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 95.9282C62.8994 95.9282 62.2278 95.2566 62.2278 94.4282C62.2278 93.5997 62.8994 92.9282 63.7278 92.9282C64.5562 92.9282 65.2278 93.5997 65.2278 94.4282C65.2278 95.2566 64.5562 95.9282 63.7278 95.9282Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 95.9282C47.5179 95.9282 46.8464 95.2566 46.8464 94.4282C46.8464 93.5997 47.5179 92.9282 48.3464 92.9282C49.1748 92.9282 49.8464 93.5997 49.8464 94.4282C49.8464 95.2566 49.1748 95.9282 48.3464 95.9282Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 95.9282C32.1365 95.9282 31.4649 95.2566 31.4649 94.4282C31.4649 93.5997 32.1365 92.9282 32.9649 92.9282C33.7934 92.9282 34.4649 93.5997 34.4649 94.4282C34.4649 95.2566 33.7934 95.9282 32.9649 95.9282Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 95.9282C16.7551 95.9282 16.0835 95.2566 16.0835 94.4282C16.0835 93.5997 16.7551 92.9282 17.5835 92.9282C18.4119 92.9282 19.0835 93.5997 19.0835 94.4282C19.0835 95.2566 18.4119 95.9282 17.5835 95.9282Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 95.9282C1.37366 95.9282 0.702092 95.2566 0.702092 94.4282C0.702092 93.5997 1.37367 92.9282 2.20209 92.9282C3.03052 92.9282 3.70209 93.5997 3.70209 94.4282C3.70209 95.2566 3.03052 95.9282 2.20209 95.9282Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 111.31C109.044 111.31 108.372 110.638 108.372 109.81C108.372 108.981 109.044 108.31 109.872 108.31C110.7 108.31 111.372 108.981 111.372 109.81C111.372 110.638 110.7 111.31 109.872 111.31Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 111.31C93.6622 111.31 92.9906 110.638 92.9906 109.81C92.9906 108.981 93.6622 108.31 94.4906 108.31C95.3191 108.31 95.9906 108.981 95.9906 109.81C95.9906 110.638 95.3191 111.31 94.4906 111.31Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 111.31C78.2808 111.31 77.6092 110.638 77.6092 109.81C77.6092 108.981 78.2808 108.31 79.1092 108.31C79.9376 108.31 80.6092 108.981 80.6092 109.81C80.6092 110.638 79.9376 111.31 79.1092 111.31Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 111.31C62.8994 111.31 62.2278 110.638 62.2278 109.81C62.2278 108.981 62.8994 108.31 63.7278 108.31C64.5562 108.31 65.2278 108.981 65.2278 109.81C65.2278 110.638 64.5562 111.31 63.7278 111.31Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 111.31C47.5179 111.31 46.8464 110.638 46.8464 109.81C46.8464 108.981 47.5179 108.31 48.3464 108.31C49.1748 108.31 49.8464 108.981 49.8464 109.81C49.8464 110.638 49.1748 111.31 48.3464 111.31Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 111.31C32.1365 111.31 31.4649 110.638 31.4649 109.81C31.4649 108.981 32.1365 108.31 32.9649 108.31C33.7934 108.31 34.4649 108.981 34.4649 109.81C34.4649 110.638 33.7934 111.31 32.9649 111.31Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 111.31C16.7551 111.31 16.0835 110.638 16.0835 109.81C16.0835 108.981 16.7551 108.31 17.5835 108.31C18.4119 108.31 19.0835 108.981 19.0835 109.81C19.0835 110.638 18.4119 111.31 17.5835 111.31Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 111.31C1.37366 111.31 0.702091 110.638 0.702091 109.81C0.702091 108.981 1.37366 108.31 2.20209 108.31C3.03052 108.31 3.70209 108.981 3.70209 109.81C3.70209 110.638 3.03052 111.31 2.20209 111.31Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 126.691C109.044 126.691 108.372 126.019 108.372 125.191C108.372 124.363 109.044 123.691 109.872 123.691C110.7 123.691 111.372 124.363 111.372 125.191C111.372 126.019 110.7 126.691 109.872 126.691Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 126.691C93.6622 126.691 92.9906 126.019 92.9906 125.191C92.9906 124.363 93.6622 123.691 94.4906 123.691C95.3191 123.691 95.9906 124.363 95.9906 125.191C95.9906 126.019 95.3191 126.691 94.4906 126.691Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 126.691C78.2808 126.691 77.6092 126.019 77.6092 125.191C77.6092 124.363 78.2808 123.691 79.1092 123.691C79.9376 123.691 80.6092 124.363 80.6092 125.191C80.6092 126.019 79.9376 126.691 79.1092 126.691Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 126.691C62.8994 126.691 62.2278 126.019 62.2278 125.191C62.2278 124.363 62.8994 123.691 63.7278 123.691C64.5562 123.691 65.2278 124.363 65.2278 125.191C65.2278 126.019 64.5562 126.691 63.7278 126.691Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 126.691C47.5179 126.691 46.8464 126.019 46.8464 125.191C46.8464 124.363 47.5179 123.691 48.3464 123.691C49.1748 123.691 49.8464 124.363 49.8464 125.191C49.8464 126.019 49.1748 126.691 48.3464 126.691Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 126.691C32.1365 126.691 31.4649 126.019 31.4649 125.191C31.4649 124.363 32.1365 123.691 32.9649 123.691C33.7934 123.691 34.4649 124.363 34.4649 125.191C34.4649 126.019 33.7934 126.691 32.9649 126.691Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 126.691C16.7551 126.691 16.0835 126.019 16.0835 125.191C16.0835 124.363 16.7551 123.691 17.5835 123.691C18.4119 123.691 19.0835 124.363 19.0835 125.191C19.0835 126.019 18.4119 126.691 17.5835 126.691Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 126.691C1.37366 126.691 0.702091 126.019 0.702091 125.191C0.702091 124.363 1.37366 123.691 2.20209 123.691C3.03052 123.691 3.70209 124.363 3.70209 125.191C3.70209 126.019 3.03052 126.691 2.20209 126.691Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 142.072C109.044 142.072 108.372 141.401 108.372 140.572C108.372 139.744 109.044 139.072 109.872 139.072C110.7 139.072 111.372 139.744 111.372 140.572C111.372 141.401 110.7 142.072 109.872 142.072Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 142.072C93.6622 142.072 92.9906 141.401 92.9906 140.572C92.9906 139.744 93.6622 139.072 94.4906 139.072C95.3191 139.072 95.9906 139.744 95.9906 140.572C95.9906 141.401 95.3191 142.072 94.4906 142.072Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 142.072C78.2808 142.072 77.6092 141.401 77.6092 140.572C77.6092 139.744 78.2808 139.072 79.1092 139.072C79.9376 139.072 80.6092 139.744 80.6092 140.572C80.6092 141.401 79.9376 142.072 79.1092 142.072Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 142.072C62.8994 142.072 62.2278 141.401 62.2278 140.572C62.2278 139.744 62.8994 139.072 63.7278 139.072C64.5562 139.072 65.2278 139.744 65.2278 140.572C65.2278 141.401 64.5562 142.072 63.7278 142.072Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 142.072C47.5179 142.072 46.8464 141.401 46.8464 140.572C46.8464 139.744 47.5179 139.072 48.3464 139.072C49.1748 139.072 49.8464 139.744 49.8464 140.572C49.8464 141.401 49.1748 142.072 48.3464 142.072Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 142.072C32.1365 142.072 31.4649 141.401 31.4649 140.572C31.4649 139.744 32.1365 139.072 32.9649 139.072C33.7934 139.072 34.4649 139.744 34.4649 140.572C34.4649 141.401 33.7934 142.072 32.9649 142.072Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 142.072C16.7551 142.072 16.0835 141.401 16.0835 140.572C16.0835 139.744 16.7551 139.072 17.5835 139.072C18.4119 139.072 19.0835 139.744 19.0835 140.572C19.0835 141.401 18.4119 142.072 17.5835 142.072Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 142.072C1.37366 142.072 0.70209 141.401 0.70209 140.572C0.70209 139.744 1.37366 139.072 2.20209 139.072C3.03052 139.072 3.70209 139.744 3.70209 140.572C3.70209 141.401 3.03052 142.072 2.20209 142.072Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 157.454C109.044 157.454 108.372 156.782 108.372 155.954C108.372 155.125 109.044 154.454 109.872 154.454C110.7 154.454 111.372 155.125 111.372 155.954C111.372 156.782 110.7 157.454 109.872 157.454Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 157.454C93.6622 157.454 92.9906 156.782 92.9906 155.954C92.9906 155.125 93.6622 154.454 94.4906 154.454C95.3191 154.454 95.9906 155.125 95.9906 155.954C95.9906 156.782 95.3191 157.454 94.4906 157.454Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 157.454C78.2808 157.454 77.6092 156.782 77.6092 155.954C77.6092 155.125 78.2808 154.454 79.1092 154.454C79.9376 154.454 80.6092 155.125 80.6092 155.954C80.6092 156.782 79.9376 157.454 79.1092 157.454Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 157.454C62.8994 157.454 62.2278 156.782 62.2278 155.954C62.2278 155.125 62.8994 154.454 63.7278 154.454C64.5562 154.454 65.2278 155.125 65.2278 155.954C65.2278 156.782 64.5562 157.454 63.7278 157.454Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 157.454C47.5179 157.454 46.8464 156.782 46.8464 155.954C46.8464 155.125 47.5179 154.454 48.3464 154.454C49.1748 154.454 49.8464 155.125 49.8464 155.954C49.8464 156.782 49.1748 157.454 48.3464 157.454Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 157.454C32.1365 157.454 31.4649 156.782 31.4649 155.954C31.4649 155.125 32.1365 154.454 32.9649 154.454C33.7934 154.454 34.4649 155.125 34.4649 155.954C34.4649 156.782 33.7934 157.454 32.9649 157.454Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 157.454C16.7551 157.454 16.0835 156.782 16.0835 155.954C16.0835 155.125 16.7551 154.454 17.5835 154.454C18.4119 154.454 19.0835 155.125 19.0835 155.954C19.0835 156.782 18.4119 157.454 17.5835 157.454Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 157.454C1.37366 157.454 0.702089 156.782 0.702089 155.954C0.702089 155.125 1.37366 154.454 2.20209 154.454C3.03052 154.454 3.70209 155.125 3.70209 155.954C3.70209 156.782 3.03052 157.454 2.20209 157.454Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 172.835C109.044 172.835 108.372 172.164 108.372 171.335C108.372 170.507 109.044 169.835 109.872 169.835C110.7 169.835 111.372 170.507 111.372 171.335C111.372 172.164 110.7 172.835 109.872 172.835Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 172.835C93.6622 172.835 92.9906 172.164 92.9906 171.335C92.9906 170.507 93.6622 169.835 94.4906 169.835C95.3191 169.835 95.9906 170.507 95.9906 171.335C95.9906 172.164 95.3191 172.835 94.4906 172.835Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 172.835C78.2808 172.835 77.6092 172.164 77.6092 171.335C77.6092 170.507 78.2808 169.835 79.1092 169.835C79.9376 169.835 80.6092 170.507 80.6092 171.335C80.6092 172.164 79.9376 172.835 79.1092 172.835Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 172.835C62.8994 172.835 62.2278 172.164 62.2278 171.335C62.2278 170.507 62.8994 169.835 63.7278 169.835C64.5562 169.835 65.2278 170.507 65.2278 171.335C65.2278 172.164 64.5562 172.835 63.7278 172.835Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 172.835C47.5179 172.835 46.8464 172.164 46.8464 171.335C46.8464 170.507 47.5179 169.835 48.3464 169.835C49.1748 169.835 49.8464 170.507 49.8464 171.335C49.8464 172.164 49.1748 172.835 48.3464 172.835Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 172.835C32.1365 172.835 31.4649 172.164 31.4649 171.335C31.4649 170.507 32.1365 169.835 32.9649 169.835C33.7934 169.835 34.4649 170.507 34.4649 171.335C34.4649 172.164 33.7934 172.835 32.9649 172.835Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 172.835C16.7551 172.835 16.0835 172.164 16.0835 171.335C16.0835 170.507 16.7551 169.835 17.5835 169.835C18.4119 169.835 19.0835 170.507 19.0835 171.335C19.0835 172.164 18.4119 172.835 17.5835 172.835Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 172.835C1.37366 172.835 0.702089 172.164 0.702089 171.335C0.702089 170.507 1.37366 169.835 2.20209 169.835C3.03052 169.835 3.70209 170.507 3.70209 171.335C3.70209 172.164 3.03052 172.835 2.20209 172.835Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 188.217C109.044 188.217 108.372 187.545 108.372 186.717C108.372 185.888 109.044 185.217 109.872 185.217C110.7 185.217 111.372 185.888 111.372 186.717C111.372 187.545 110.7 188.217 109.872 188.217Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 188.217C93.6622 188.217 92.9906 187.545 92.9906 186.717C92.9906 185.888 93.6622 185.217 94.4906 185.217C95.3191 185.217 95.9906 185.888 95.9906 186.717C95.9906 187.545 95.3191 188.217 94.4906 188.217Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 188.217C78.2808 188.217 77.6092 187.545 77.6092 186.717C77.6092 185.888 78.2808 185.217 79.1092 185.217C79.9376 185.217 80.6092 185.888 80.6092 186.717C80.6092 187.545 79.9376 188.217 79.1092 188.217Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 188.217C62.8994 188.217 62.2278 187.545 62.2278 186.717C62.2278 185.888 62.8994 185.217 63.7278 185.217C64.5562 185.217 65.2278 185.888 65.2278 186.717C65.2278 187.545 64.5562 188.217 63.7278 188.217Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 188.217C47.5179 188.217 46.8464 187.545 46.8464 186.717C46.8464 185.888 47.5179 185.217 48.3464 185.217C49.1748 185.217 49.8464 185.888 49.8464 186.717C49.8464 187.545 49.1748 188.217 48.3464 188.217Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 188.217C32.1365 188.217 31.4649 187.545 31.4649 186.717C31.4649 185.888 32.1365 185.217 32.9649 185.217C33.7934 185.217 34.4649 185.888 34.4649 186.717C34.4649 187.545 33.7934 188.217 32.9649 188.217Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 188.217C16.7551 188.217 16.0835 187.545 16.0835 186.717C16.0835 185.888 16.7551 185.217 17.5835 185.217C18.4119 185.217 19.0835 185.888 19.0835 186.717C19.0835 187.545 18.4119 188.217 17.5835 188.217Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 188.217C1.37366 188.217 0.702088 187.545 0.702088 186.717C0.702088 185.888 1.37366 185.217 2.20209 185.217C3.03052 185.217 3.70209 185.888 3.70209 186.717C3.70209 187.545 3.03052 188.217 2.20209 188.217Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M109.872 203.598C109.044 203.598 108.372 202.927 108.372 202.098C108.372 201.27 109.044 200.598 109.872 200.598C110.7 200.598 111.372 201.27 111.372 202.098C111.372 202.927 110.7 203.598 109.872 203.598Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M94.4906 203.598C93.6622 203.598 92.9906 202.927 92.9906 202.098C92.9906 201.27 93.6622 200.598 94.4906 200.598C95.3191 200.598 95.9906 201.27 95.9906 202.098C95.9906 202.927 95.319 203.598 94.4906 203.598Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M79.1092 203.598C78.2808 203.598 77.6092 202.927 77.6092 202.098C77.6092 201.27 78.2808 200.598 79.1092 200.598C79.9376 200.598 80.6092 201.27 80.6092 202.098C80.6092 202.927 79.9376 203.598 79.1092 203.598Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M63.7278 203.598C62.8994 203.598 62.2278 202.927 62.2278 202.098C62.2278 201.27 62.8994 200.598 63.7278 200.598C64.5562 200.598 65.2278 201.27 65.2278 202.098C65.2278 202.927 64.5562 203.598 63.7278 203.598Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M48.3464 203.598C47.5179 203.598 46.8464 202.927 46.8464 202.098C46.8464 201.27 47.5179 200.598 48.3464 200.598C49.1748 200.598 49.8464 201.27 49.8464 202.098C49.8464 202.927 49.1748 203.598 48.3464 203.598Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M32.9649 203.598C32.1365 203.598 31.4649 202.927 31.4649 202.098C31.4649 201.27 32.1365 200.598 32.9649 200.598C33.7934 200.598 34.4649 201.27 34.4649 202.098C34.4649 202.927 33.7934 203.598 32.9649 203.598Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M17.5835 203.598C16.7551 203.598 16.0835 202.927 16.0835 202.098C16.0835 201.27 16.7551 200.598 17.5835 200.598C18.4119 200.598 19.0835 201.27 19.0835 202.098C19.0835 202.927 18.4119 203.598 17.5835 203.598Z\" fill=\"#FFFCFA\" />\n                        <path d=\"M2.20209 203.598C1.37366 203.598 0.702087 202.927 0.702087 202.098C0.702087 201.27 1.37366 200.598 2.20209 200.598C3.03051 200.598 3.70209 201.27 3.70209 202.098C3.70209 202.927 3.03051 203.598 2.20209 203.598Z\" fill=\"#FFFCFA\" />\n                    </svg>\n\n\n                }\n                {finalPartido.darkMode === false ?\n                    <svg style={{ position: 'absolute', top: '180px', left: '80px', zIndex: 0 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"211\" viewBox=\"0 0 46 211\" fill=\"none\">\n                        <mask id=\"path-1-inside-1_260_1059\" fill=\"white\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45.5352 8.54373L37.0354 0.0439453L23.0351 14.0442L9.03499 0.0440738L0.535202 8.54386L14.5353 22.544L0.535269 36.5441L9.03505 45.0439L23.0351 31.0438L37.0353 45.044L45.5351 36.5442L31.5349 22.544L45.5352 8.54373Z\" />\n                        </mask>\n                        <path d=\"M37.0354 0.0439453L37.7425 -0.663161L37.0354 -1.37027L36.3283 -0.663161L37.0354 0.0439453ZM45.5352 8.54373L46.2423 9.25084L46.9494 8.54373L46.2423 7.83662L45.5352 8.54373ZM23.0351 14.0442L22.328 14.7513L23.0351 15.4584L23.7422 14.7513L23.0351 14.0442ZM9.03499 0.0440738L9.74209 -0.663033L9.03499 -1.37014L8.32788 -0.663033L9.03499 0.0440738ZM0.535202 8.54386L-0.171905 7.83675L-0.879012 8.54386L-0.171905 9.25096L0.535202 8.54386ZM14.5353 22.544L15.2424 23.2511L15.9496 22.544L15.2424 21.8369L14.5353 22.544ZM0.535269 36.5441L-0.171838 35.837L-0.878945 36.5441L-0.171838 37.2512L0.535269 36.5441ZM9.03505 45.0439L8.32795 45.751L9.03505 46.4581L9.74216 45.751L9.03505 45.0439ZM23.0351 31.0438L23.7422 30.3367L23.0351 29.6296L22.328 30.3367L23.0351 31.0438ZM37.0353 45.044L36.3282 45.7511L37.0353 46.4582L37.7424 45.7511L37.0353 45.044ZM45.5351 36.5442L46.2422 37.2513L46.9493 36.5442L46.2422 35.8371L45.5351 36.5442ZM31.5349 22.544L30.8278 21.8369L30.1207 22.544L30.8278 23.2511L31.5349 22.544ZM36.3283 0.751052L44.8281 9.25084L46.2423 7.83662L37.7425 -0.663161L36.3283 0.751052ZM23.7422 14.7513L37.7425 0.751052L36.3283 -0.663161L22.328 13.3371L23.7422 14.7513ZM8.32788 0.751181L22.328 14.7513L23.7422 13.3371L9.74209 -0.663033L8.32788 0.751181ZM1.24231 9.25096L9.74209 0.751181L8.32788 -0.663033L-0.171905 7.83675L1.24231 9.25096ZM15.2424 21.8369L1.24231 7.83675L-0.171905 9.25096L13.8282 23.2511L15.2424 21.8369ZM1.24238 37.2512L15.2424 23.2511L13.8282 21.8369L-0.171838 35.837L1.24238 37.2512ZM9.74216 44.3368L1.24238 35.837L-0.171838 37.2512L8.32795 45.751L9.74216 44.3368ZM22.328 30.3367L8.32795 44.3368L9.74216 45.751L23.7422 31.7509L22.328 30.3367ZM37.7424 44.3369L23.7422 30.3367L22.328 31.7509L36.3282 45.7511L37.7424 44.3369ZM44.828 35.8371L36.3282 44.3369L37.7424 45.7511L46.2422 37.2513L44.828 35.8371ZM30.8278 23.2511L44.828 37.2513L46.2422 35.8371L32.242 21.8369L30.8278 23.2511ZM44.8281 7.83662L30.8278 21.8369L32.242 23.2511L46.2423 9.25084L44.8281 7.83662Z\" fill=\"#171717\" mask=\"url(#path-1-inside-1_260_1059)\" />\n                        <mask id=\"path-3-inside-2_260_1059\" fill=\"white\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45.5352 63.5437L37.0354 55.0439L23.0351 69.0442L9.03499 55.0441L0.535202 63.5439L14.5353 77.544L0.535269 91.5441L9.03505 100.044L23.0351 86.0438L37.0353 100.044L45.5351 91.5442L31.5349 77.544L45.5352 63.5437Z\" />\n                        </mask>\n                        <path d=\"M37.0354 55.0439L37.7425 54.3368L37.0354 53.6297L36.3283 54.3368L37.0354 55.0439ZM45.5352 63.5437L46.2423 64.2508L46.9494 63.5437L46.2423 62.8366L45.5352 63.5437ZM23.0351 69.0442L22.328 69.7513L23.0351 70.4584L23.7422 69.7513L23.0351 69.0442ZM9.03499 55.0441L9.74209 54.337L9.03499 53.6299L8.32788 54.337L9.03499 55.0441ZM0.535202 63.5439L-0.171905 62.8368L-0.879012 63.5439L-0.171905 64.251L0.535202 63.5439ZM14.5353 77.544L15.2424 78.2511L15.9496 77.544L15.2424 76.8369L14.5353 77.544ZM0.535269 91.5441L-0.171838 90.837L-0.878945 91.5441L-0.171838 92.2512L0.535269 91.5441ZM9.03505 100.044L8.32795 100.751L9.03505 101.458L9.74216 100.751L9.03505 100.044ZM23.0351 86.0438L23.7422 85.3367L23.0351 84.6296L22.328 85.3367L23.0351 86.0438ZM37.0353 100.044L36.3282 100.751L37.0353 101.458L37.7424 100.751L37.0353 100.044ZM45.5351 91.5442L46.2422 92.2513L46.9493 91.5442L46.2422 90.8371L45.5351 91.5442ZM31.5349 77.544L30.8278 76.8369L30.1207 77.544L30.8278 78.2511L31.5349 77.544ZM36.3283 55.7511L44.8281 64.2508L46.2423 62.8366L37.7425 54.3368L36.3283 55.7511ZM23.7422 69.7513L37.7425 55.7511L36.3283 54.3368L22.328 68.3371L23.7422 69.7513ZM8.32788 55.7512L22.328 69.7513L23.7422 68.3371L9.74209 54.337L8.32788 55.7512ZM1.24231 64.251L9.74209 55.7512L8.32788 54.337L-0.171905 62.8368L1.24231 64.251ZM15.2424 76.8369L1.24231 62.8368L-0.171905 64.251L13.8282 78.2511L15.2424 76.8369ZM1.24238 92.2512L15.2424 78.2511L13.8282 76.8369L-0.171838 90.837L1.24238 92.2512ZM9.74216 99.3368L1.24238 90.837L-0.171838 92.2512L8.32795 100.751L9.74216 99.3368ZM22.328 85.3367L8.32795 99.3368L9.74216 100.751L23.7422 86.7509L22.328 85.3367ZM37.7424 99.3369L23.7422 85.3367L22.328 86.7509L36.3282 100.751L37.7424 99.3369ZM44.828 90.8371L36.3282 99.3369L37.7424 100.751L46.2422 92.2513L44.828 90.8371ZM30.8278 78.2511L44.828 92.2513L46.2422 90.8371L32.242 76.8369L30.8278 78.2511ZM44.8281 62.8366L30.8278 76.8369L32.242 78.2511L46.2423 64.2508L44.8281 62.8366Z\" fill=\"#171717\" mask=\"url(#path-3-inside-2_260_1059)\" />\n                        <mask id=\"path-5-inside-3_260_1059\" fill=\"white\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45.5352 118.544L37.0354 110.044L23.0351 124.044L9.03499 110.044L0.535202 118.544L14.5353 132.544L0.535269 146.544L9.03505 155.044L23.0351 141.044L37.0353 155.044L45.5351 146.544L31.5349 132.544L45.5352 118.544Z\" />\n                        </mask>\n                        <path d=\"M37.0354 110.044L37.7425 109.337L37.0354 108.63L36.3283 109.337L37.0354 110.044ZM45.5352 118.544L46.2423 119.251L46.9494 118.544L46.2423 117.837L45.5352 118.544ZM23.0351 124.044L22.328 124.751L23.0351 125.458L23.7422 124.751L23.0351 124.044ZM9.03499 110.044L9.74209 109.337L9.03499 108.63L8.32788 109.337L9.03499 110.044ZM0.535202 118.544L-0.171905 117.837L-0.879012 118.544L-0.171905 119.251L0.535202 118.544ZM14.5353 132.544L15.2424 133.251L15.9496 132.544L15.2424 131.837L14.5353 132.544ZM0.535269 146.544L-0.171838 145.837L-0.878945 146.544L-0.171838 147.251L0.535269 146.544ZM9.03505 155.044L8.32795 155.751L9.03505 156.458L9.74216 155.751L9.03505 155.044ZM23.0351 141.044L23.7422 140.337L23.0351 139.63L22.328 140.337L23.0351 141.044ZM37.0353 155.044L36.3282 155.751L37.0353 156.458L37.7424 155.751L37.0353 155.044ZM45.5351 146.544L46.2422 147.251L46.9493 146.544L46.2422 145.837L45.5351 146.544ZM31.5349 132.544L30.8278 131.837L30.1207 132.544L30.8278 133.251L31.5349 132.544ZM36.3283 110.751L44.8281 119.251L46.2423 117.837L37.7425 109.337L36.3283 110.751ZM23.7422 124.751L37.7425 110.751L36.3283 109.337L22.328 123.337L23.7422 124.751ZM8.32788 110.751L22.328 124.751L23.7422 123.337L9.74209 109.337L8.32788 110.751ZM1.24231 119.251L9.74209 110.751L8.32788 109.337L-0.171905 117.837L1.24231 119.251ZM15.2424 131.837L1.24231 117.837L-0.171905 119.251L13.8282 133.251L15.2424 131.837ZM1.24238 147.251L15.2424 133.251L13.8282 131.837L-0.171838 145.837L1.24238 147.251ZM9.74216 154.337L1.24238 145.837L-0.171838 147.251L8.32795 155.751L9.74216 154.337ZM22.328 140.337L8.32795 154.337L9.74216 155.751L23.7422 141.751L22.328 140.337ZM37.7424 154.337L23.7422 140.337L22.328 141.751L36.3282 155.751L37.7424 154.337ZM44.828 145.837L36.3282 154.337L37.7424 155.751L46.2422 147.251L44.828 145.837ZM30.8278 133.251L44.828 147.251L46.2422 145.837L32.242 131.837L30.8278 133.251ZM44.8281 117.837L30.8278 131.837L32.242 133.251L46.2423 119.251L44.8281 117.837Z\" fill=\"#171717\" mask=\"url(#path-5-inside-3_260_1059)\" />\n                        <mask id=\"path-7-inside-4_260_1059\" fill=\"white\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45.5352 173.544L37.0354 165.044L23.0351 179.044L9.03499 165.044L0.535202 173.544L14.5353 187.544L0.535269 201.544L9.03505 210.044L23.0351 196.044L37.0353 210.044L45.5351 201.544L31.5349 187.544L45.5352 173.544Z\" />\n                        </mask>\n                        <path d=\"M37.0354 165.044L37.7425 164.337L37.0354 163.63L36.3283 164.337L37.0354 165.044ZM45.5352 173.544L46.2423 174.251L46.9494 173.544L46.2423 172.837L45.5352 173.544ZM23.0351 179.044L22.328 179.751L23.0351 180.458L23.7422 179.751L23.0351 179.044ZM9.03499 165.044L9.74209 164.337L9.03499 163.63L8.32788 164.337L9.03499 165.044ZM0.535202 173.544L-0.171905 172.837L-0.879012 173.544L-0.171905 174.251L0.535202 173.544ZM14.5353 187.544L15.2424 188.251L15.9496 187.544L15.2424 186.837L14.5353 187.544ZM0.535269 201.544L-0.171838 200.837L-0.878945 201.544L-0.171838 202.251L0.535269 201.544ZM9.03505 210.044L8.32795 210.751L9.03505 211.458L9.74216 210.751L9.03505 210.044ZM23.0351 196.044L23.7422 195.337L23.0351 194.63L22.328 195.337L23.0351 196.044ZM37.0353 210.044L36.3282 210.751L37.0353 211.458L37.7424 210.751L37.0353 210.044ZM45.5351 201.544L46.2422 202.251L46.9493 201.544L46.2422 200.837L45.5351 201.544ZM31.5349 187.544L30.8278 186.837L30.1207 187.544L30.8278 188.251L31.5349 187.544ZM36.3283 165.751L44.8281 174.251L46.2423 172.837L37.7425 164.337L36.3283 165.751ZM23.7422 179.751L37.7425 165.751L36.3283 164.337L22.328 178.337L23.7422 179.751ZM8.32788 165.751L22.328 179.751L23.7422 178.337L9.74209 164.337L8.32788 165.751ZM1.24231 174.251L9.74209 165.751L8.32788 164.337L-0.171905 172.837L1.24231 174.251ZM15.2424 186.837L1.24231 172.837L-0.171905 174.251L13.8282 188.251L15.2424 186.837ZM1.24238 202.251L15.2424 188.251L13.8282 186.837L-0.171838 200.837L1.24238 202.251ZM9.74216 209.337L1.24238 200.837L-0.171838 202.251L8.32795 210.751L9.74216 209.337ZM22.328 195.337L8.32795 209.337L9.74216 210.751L23.7422 196.751L22.328 195.337ZM37.7424 209.337L23.7422 195.337L22.328 196.751L36.3282 210.751L37.7424 209.337ZM44.828 200.837L36.3282 209.337L37.7424 210.751L46.2422 202.251L44.828 200.837ZM30.8278 188.251L44.828 202.251L46.2422 200.837L32.242 186.837L30.8278 188.251ZM44.8281 172.837L30.8278 186.837L32.242 188.251L46.2423 174.251L44.8281 172.837Z\" fill=\"#171717\" mask=\"url(#path-7-inside-4_260_1059)\" />\n                    </svg> :\n                    <svg style={{ position: 'absolute', top: '180px', left: '80px', zIndex: 0 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"211\" viewBox=\"0 0 46 211\" fill=\"none\">\n                        <mask id=\"path-1-inside-1_260_1059\" fill=\"white\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45.5352 8.54373L37.0354 0.0439453L23.0351 14.0442L9.03499 0.0440738L0.535202 8.54386L14.5353 22.544L0.535269 36.5441L9.03505 45.0439L23.0351 31.0438L37.0353 45.044L45.5351 36.5442L31.5349 22.544L45.5352 8.54373Z\" />\n                        </mask>\n                        <path d=\"M37.0354 0.0439453L37.7425 -0.663161L37.0354 -1.37027L36.3283 -0.663161L37.0354 0.0439453ZM45.5352 8.54373L46.2423 9.25084L46.9494 8.54373L46.2423 7.83662L45.5352 8.54373ZM23.0351 14.0442L22.328 14.7513L23.0351 15.4584L23.7422 14.7513L23.0351 14.0442ZM9.03499 0.0440738L9.74209 -0.663033L9.03499 -1.37014L8.32788 -0.663033L9.03499 0.0440738ZM0.535202 8.54386L-0.171905 7.83675L-0.879012 8.54386L-0.171905 9.25096L0.535202 8.54386ZM14.5353 22.544L15.2424 23.2511L15.9496 22.544L15.2424 21.8369L14.5353 22.544ZM0.535269 36.5441L-0.171838 35.837L-0.878945 36.5441L-0.171838 37.2512L0.535269 36.5441ZM9.03505 45.0439L8.32795 45.751L9.03505 46.4581L9.74216 45.751L9.03505 45.0439ZM23.0351 31.0438L23.7422 30.3367L23.0351 29.6296L22.328 30.3367L23.0351 31.0438ZM37.0353 45.044L36.3282 45.7511L37.0353 46.4582L37.7424 45.7511L37.0353 45.044ZM45.5351 36.5442L46.2422 37.2513L46.9493 36.5442L46.2422 35.8371L45.5351 36.5442ZM31.5349 22.544L30.8278 21.8369L30.1207 22.544L30.8278 23.2511L31.5349 22.544ZM36.3283 0.751052L44.8281 9.25084L46.2423 7.83662L37.7425 -0.663161L36.3283 0.751052ZM23.7422 14.7513L37.7425 0.751052L36.3283 -0.663161L22.328 13.3371L23.7422 14.7513ZM8.32788 0.751181L22.328 14.7513L23.7422 13.3371L9.74209 -0.663033L8.32788 0.751181ZM1.24231 9.25096L9.74209 0.751181L8.32788 -0.663033L-0.171905 7.83675L1.24231 9.25096ZM15.2424 21.8369L1.24231 7.83675L-0.171905 9.25096L13.8282 23.2511L15.2424 21.8369ZM1.24238 37.2512L15.2424 23.2511L13.8282 21.8369L-0.171838 35.837L1.24238 37.2512ZM9.74216 44.3368L1.24238 35.837L-0.171838 37.2512L8.32795 45.751L9.74216 44.3368ZM22.328 30.3367L8.32795 44.3368L9.74216 45.751L23.7422 31.7509L22.328 30.3367ZM37.7424 44.3369L23.7422 30.3367L22.328 31.7509L36.3282 45.7511L37.7424 44.3369ZM44.828 35.8371L36.3282 44.3369L37.7424 45.7511L46.2422 37.2513L44.828 35.8371ZM30.8278 23.2511L44.828 37.2513L46.2422 35.8371L32.242 21.8369L30.8278 23.2511ZM44.8281 7.83662L30.8278 21.8369L32.242 23.2511L46.2423 9.25084L44.8281 7.83662Z\" fill=\"#FFFCFA\" mask=\"url(#path-1-inside-1_260_1059)\" />\n                        <mask id=\"path-3-inside-2_260_1059\" fill=\"white\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45.5352 63.5437L37.0354 55.0439L23.0351 69.0442L9.03499 55.0441L0.535202 63.5439L14.5353 77.544L0.535269 91.5441L9.03505 100.044L23.0351 86.0438L37.0353 100.044L45.5351 91.5442L31.5349 77.544L45.5352 63.5437Z\" />\n                        </mask>\n                        <path d=\"M37.0354 55.0439L37.7425 54.3368L37.0354 53.6297L36.3283 54.3368L37.0354 55.0439ZM45.5352 63.5437L46.2423 64.2508L46.9494 63.5437L46.2423 62.8366L45.5352 63.5437ZM23.0351 69.0442L22.328 69.7513L23.0351 70.4584L23.7422 69.7513L23.0351 69.0442ZM9.03499 55.0441L9.74209 54.337L9.03499 53.6299L8.32788 54.337L9.03499 55.0441ZM0.535202 63.5439L-0.171905 62.8368L-0.879012 63.5439L-0.171905 64.251L0.535202 63.5439ZM14.5353 77.544L15.2424 78.2511L15.9496 77.544L15.2424 76.8369L14.5353 77.544ZM0.535269 91.5441L-0.171838 90.837L-0.878945 91.5441L-0.171838 92.2512L0.535269 91.5441ZM9.03505 100.044L8.32795 100.751L9.03505 101.458L9.74216 100.751L9.03505 100.044ZM23.0351 86.0438L23.7422 85.3367L23.0351 84.6296L22.328 85.3367L23.0351 86.0438ZM37.0353 100.044L36.3282 100.751L37.0353 101.458L37.7424 100.751L37.0353 100.044ZM45.5351 91.5442L46.2422 92.2513L46.9493 91.5442L46.2422 90.8371L45.5351 91.5442ZM31.5349 77.544L30.8278 76.8369L30.1207 77.544L30.8278 78.2511L31.5349 77.544ZM36.3283 55.7511L44.8281 64.2508L46.2423 62.8366L37.7425 54.3368L36.3283 55.7511ZM23.7422 69.7513L37.7425 55.7511L36.3283 54.3368L22.328 68.3371L23.7422 69.7513ZM8.32788 55.7512L22.328 69.7513L23.7422 68.3371L9.74209 54.337L8.32788 55.7512ZM1.24231 64.251L9.74209 55.7512L8.32788 54.337L-0.171905 62.8368L1.24231 64.251ZM15.2424 76.8369L1.24231 62.8368L-0.171905 64.251L13.8282 78.2511L15.2424 76.8369ZM1.24238 92.2512L15.2424 78.2511L13.8282 76.8369L-0.171838 90.837L1.24238 92.2512ZM9.74216 99.3368L1.24238 90.837L-0.171838 92.2512L8.32795 100.751L9.74216 99.3368ZM22.328 85.3367L8.32795 99.3368L9.74216 100.751L23.7422 86.7509L22.328 85.3367ZM37.7424 99.3369L23.7422 85.3367L22.328 86.7509L36.3282 100.751L37.7424 99.3369ZM44.828 90.8371L36.3282 99.3369L37.7424 100.751L46.2422 92.2513L44.828 90.8371ZM30.8278 78.2511L44.828 92.2513L46.2422 90.8371L32.242 76.8369L30.8278 78.2511ZM44.8281 62.8366L30.8278 76.8369L32.242 78.2511L46.2423 64.2508L44.8281 62.8366Z\" fill=\"#FFFCFA\" mask=\"url(#path-3-inside-2_260_1059)\" />\n                        <mask id=\"path-5-inside-3_260_1059\" fill=\"white\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45.5352 118.544L37.0354 110.044L23.0351 124.044L9.03499 110.044L0.535202 118.544L14.5353 132.544L0.535269 146.544L9.03505 155.044L23.0351 141.044L37.0353 155.044L45.5351 146.544L31.5349 132.544L45.5352 118.544Z\" />\n                        </mask>\n                        <path d=\"M37.0354 110.044L37.7425 109.337L37.0354 108.63L36.3283 109.337L37.0354 110.044ZM45.5352 118.544L46.2423 119.251L46.9494 118.544L46.2423 117.837L45.5352 118.544ZM23.0351 124.044L22.328 124.751L23.0351 125.458L23.7422 124.751L23.0351 124.044ZM9.03499 110.044L9.74209 109.337L9.03499 108.63L8.32788 109.337L9.03499 110.044ZM0.535202 118.544L-0.171905 117.837L-0.879012 118.544L-0.171905 119.251L0.535202 118.544ZM14.5353 132.544L15.2424 133.251L15.9496 132.544L15.2424 131.837L14.5353 132.544ZM0.535269 146.544L-0.171838 145.837L-0.878945 146.544L-0.171838 147.251L0.535269 146.544ZM9.03505 155.044L8.32795 155.751L9.03505 156.458L9.74216 155.751L9.03505 155.044ZM23.0351 141.044L23.7422 140.337L23.0351 139.63L22.328 140.337L23.0351 141.044ZM37.0353 155.044L36.3282 155.751L37.0353 156.458L37.7424 155.751L37.0353 155.044ZM45.5351 146.544L46.2422 147.251L46.9493 146.544L46.2422 145.837L45.5351 146.544ZM31.5349 132.544L30.8278 131.837L30.1207 132.544L30.8278 133.251L31.5349 132.544ZM36.3283 110.751L44.8281 119.251L46.2423 117.837L37.7425 109.337L36.3283 110.751ZM23.7422 124.751L37.7425 110.751L36.3283 109.337L22.328 123.337L23.7422 124.751ZM8.32788 110.751L22.328 124.751L23.7422 123.337L9.74209 109.337L8.32788 110.751ZM1.24231 119.251L9.74209 110.751L8.32788 109.337L-0.171905 117.837L1.24231 119.251ZM15.2424 131.837L1.24231 117.837L-0.171905 119.251L13.8282 133.251L15.2424 131.837ZM1.24238 147.251L15.2424 133.251L13.8282 131.837L-0.171838 145.837L1.24238 147.251ZM9.74216 154.337L1.24238 145.837L-0.171838 147.251L8.32795 155.751L9.74216 154.337ZM22.328 140.337L8.32795 154.337L9.74216 155.751L23.7422 141.751L22.328 140.337ZM37.7424 154.337L23.7422 140.337L22.328 141.751L36.3282 155.751L37.7424 154.337ZM44.828 145.837L36.3282 154.337L37.7424 155.751L46.2422 147.251L44.828 145.837ZM30.8278 133.251L44.828 147.251L46.2422 145.837L32.242 131.837L30.8278 133.251ZM44.8281 117.837L30.8278 131.837L32.242 133.251L46.2423 119.251L44.8281 117.837Z\" fill=\"#FFFCFA\" mask=\"url(#path-5-inside-3_260_1059)\" />\n                        <mask id=\"path-7-inside-4_260_1059\" fill=\"white\">\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M45.5352 173.544L37.0354 165.044L23.0351 179.044L9.03499 165.044L0.535202 173.544L14.5353 187.544L0.535269 201.544L9.03505 210.044L23.0351 196.044L37.0353 210.044L45.5351 201.544L31.5349 187.544L45.5352 173.544Z\" />\n                        </mask>\n                        <path d=\"M37.0354 165.044L37.7425 164.337L37.0354 163.63L36.3283 164.337L37.0354 165.044ZM45.5352 173.544L46.2423 174.251L46.9494 173.544L46.2423 172.837L45.5352 173.544ZM23.0351 179.044L22.328 179.751L23.0351 180.458L23.7422 179.751L23.0351 179.044ZM9.03499 165.044L9.74209 164.337L9.03499 163.63L8.32788 164.337L9.03499 165.044ZM0.535202 173.544L-0.171905 172.837L-0.879012 173.544L-0.171905 174.251L0.535202 173.544ZM14.5353 187.544L15.2424 188.251L15.9496 187.544L15.2424 186.837L14.5353 187.544ZM0.535269 201.544L-0.171838 200.837L-0.878945 201.544L-0.171838 202.251L0.535269 201.544ZM9.03505 210.044L8.32795 210.751L9.03505 211.458L9.74216 210.751L9.03505 210.044ZM23.0351 196.044L23.7422 195.337L23.0351 194.63L22.328 195.337L23.0351 196.044ZM37.0353 210.044L36.3282 210.751L37.0353 211.458L37.7424 210.751L37.0353 210.044ZM45.5351 201.544L46.2422 202.251L46.9493 201.544L46.2422 200.837L45.5351 201.544ZM31.5349 187.544L30.8278 186.837L30.1207 187.544L30.8278 188.251L31.5349 187.544ZM36.3283 165.751L44.8281 174.251L46.2423 172.837L37.7425 164.337L36.3283 165.751ZM23.7422 179.751L37.7425 165.751L36.3283 164.337L22.328 178.337L23.7422 179.751ZM8.32788 165.751L22.328 179.751L23.7422 178.337L9.74209 164.337L8.32788 165.751ZM1.24231 174.251L9.74209 165.751L8.32788 164.337L-0.171905 172.837L1.24231 174.251ZM15.2424 186.837L1.24231 172.837L-0.171905 174.251L13.8282 188.251L15.2424 186.837ZM1.24238 202.251L15.2424 188.251L13.8282 186.837L-0.171838 200.837L1.24238 202.251ZM9.74216 209.337L1.24238 200.837L-0.171838 202.251L8.32795 210.751L9.74216 209.337ZM22.328 195.337L8.32795 209.337L9.74216 210.751L23.7422 196.751L22.328 195.337ZM37.7424 209.337L23.7422 195.337L22.328 196.751L36.3282 210.751L37.7424 209.337ZM44.828 200.837L36.3282 209.337L37.7424 210.751L46.2422 202.251L44.828 200.837ZM30.8278 188.251L44.828 202.251L46.2422 200.837L32.242 186.837L30.8278 188.251ZM44.8281 172.837L30.8278 186.837L32.242 188.251L46.2423 174.251L44.8281 172.837Z\" fill=\"#FFFCFA\" mask=\"url(#path-7-inside-4_260_1059)\" />\n                    </svg>\n\n\n                }\n\n\n\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    finalPartido: state.finalPartido,\n    deportes: state.deportes\n})\n\n\nexport default connect(mapStateToProps)(FinalPartido)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport domtoimage from 'dom-to-image';\nimport SociaVitalicia from './posteos/SociaVitalicia';\nimport Noticias from './posteos/Noticias'\nimport ProximoPartido from './posteos/ProximoPartido'\nimport FinalPartido from './posteos/FinalPartido'\nimport Alerta from '../Alerta'\n\nconst Imagen = (props) => {\n\n    const [disabledState, setDisabledState] = useState(true)\n    const [mensajeError, setMensajeError] = useState(\"\")\n\n    let { tipo, sociaVitalicia, noticias, proximoPartido, finalPartido } = props;\n\n    let preview;\n\n\n\n    useEffect(() => {\n        domtoimage.toJpeg(document.getElementById('capture'), { quality: 0.95 }).then(\n            function (dataUrl) {\n                preview = dataUrl;\n                /*     console.log(dataUrl) */\n                document.getElementById(\"preview\").src = preview;\n\n            }\n        )\n        if (tipo === \"socia\") {\n            console.log(sociaVitalicia)\n            if (sociaVitalicia.fecha !== \"\" && sociaVitalicia.fotoFondo !== \"\" && sociaVitalicia.fotoMain !== \"\" && sociaVitalicia.frase !== \"\" && sociaVitalicia.nombre !== \"\" && sociaVitalicia.profesion !== \"\" && sociaVitalicia.spCode !== \"\") {\n                document.getElementById(\"btn-download\").disabled = false;\n                document.getElementById(\"btn-download\").style.opacity = \"1\";\n\n            } else {\n                document.getElementById(\"btn-download\").disabled = true;\n                document.getElementById(\"btn-download\").style.opacity = \"0.7\";\n            }\n        }\n        if (tipo === \"noticias\") {\n            console.log(noticias)\n            if (noticias.foto !== \"\" && noticias.titulo !== \"\") {\n                document.getElementById(\"btn-download\").disabled = false;\n                document.getElementById(\"btn-download\").style.opacity = \"1\";\n            } else {\n                document.getElementById(\"btn-download\").disabled = true;\n                document.getElementById(\"btn-download\").style.opacity = \"0.7\";\n            }\n        }\n        if (tipo === \"proximoPartido\") {\n            console.log(proximoPartido)\n            if (proximoPartido.deporte !== \"\" && proximoPartido.eqLocal !== \"\" && proximoPartido.eqVisitante !== \"\" && proximoPartido.fecha !== \"\" && proximoPartido.fotoLocal !== \"\" && proximoPartido.fotoVisitante !== \"\" && proximoPartido.hora !== \"\" && proximoPartido.lugar !== \"\") {\n                document.getElementById(\"btn-download\").disabled = false;\n                document.getElementById(\"btn-download\").style.opacity = \"1\";\n            } else {\n                document.getElementById(\"btn-download\").disabled = true;\n                document.getElementById(\"btn-download\").style.opacity = \"0.7\";\n            }\n        }\n        if (tipo === \"finalPartido\") {\n            console.log(finalPartido)\n            if (finalPartido.deporte !== [] && finalPartido.eqLocal !== \"\" && finalPartido.eqVisitante !== \"\" && finalPartido.foto !== \"\" && finalPartido.pLocal !== \"\" && finalPartido.pVisitante !== \"\") {\n                document.getElementById(\"btn-download\").disabled = false;\n                document.getElementById(\"btn-download\").style.opacity = \"1\";\n            } else {\n                document.getElementById(\"btn-download\").disabled = true;\n                document.getElementById(\"btn-download\").style.opacity = \"0.7\";\n            }\n        }\n\n\n\n    }\n    )\n    /*  const cropView = () => {\n         let previewHeight = document.getElementById('preview').offsetHeight;\n         var div = document.querySelector('#contenedorImg');\n         div.style.height = `${previewHeight + 70}px`;\n     } */\n    const descargarImg = () => {\n        domtoimage.toJpeg(document.getElementById('capture'), { quality: 0.95 })\n            .then(function (dataUrl) {\n                /*  console.log(dataUrl) */\n                var link = document.createElement('a');\n                link.download = `${tipo}.jpeg`;\n                link.href = dataUrl;\n                link.click();\n            });\n    }\n\n\n\n    return (\n        <div id=\"contenedorImg\" style={{ overflow: \"hidden\" }}>\n            <img className=\"w-full md:w-10/12 mx-auto \" id=\"preview\" src={preview} />\n            <div className=\"w-full md:w-10/12 mx-auto pt-4\">\n                <button className=\"btn disabled:opacity-75 w-full md:w-auto  bg-orange py-2 px-4 rounded-3xl text-white text-base\" id=\"btn-download\" download=\"post.jpg\" onClick={descargarImg}>Descargar </button>\n            </div>\n            <div className=\"lastMobile\"></div>\n            <div style={{ position: \"fixed\", top: 0, left: 0, width: \"1080px\", height: \"1080px\", position: \"relative\", }}>\n                <div id=\"capture\" style={{ width: \"1080px\", height: \"1080px\", position: \"absolute\", top: \"0\", zIndex: -10 }}>\n                    {(tipo === \"socia\") ?\n                        <SociaVitalicia /> :\n                        (tipo === \"noticias\") ?\n                            <Noticias /> :\n                            (tipo === \"proximoPartido\") ?\n                                <ProximoPartido /> :\n                                (tipo === \"finalPartido\") ?\n                                    <FinalPartido /> :\n                                    \"\"\n                    }\n                </div>\n                <div className=\"bg-black-50 \" style={{ position: \"fixed\", top: 0, left: 0, width: \"1080px\", height: \"1080px\", position: \"absolute\" }}>\n\n                </div>\n            </div>\n\n\n\n        </div >\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    sociaVitalicia: state.sociaVitalicia,\n    noticias: state.noticias,\n    proximoPartido: state.proximoPartido,\n    finalPartido: state.finalPartido\n\n})\n\n\nexport default connect(mapStateToProps)(Imagen)","import React, { useState, useEffect } from 'react'\nimport './Switch.css'\nconst Switch = (props) => {\n\n    let toggle = false;\n\n    return (\n        <div id=\"switch\" className=\"flex mb-2\">\n\n            <label className=\"switch mt-2 \">\n                <input type=\"checkbox\" onClick={e => {\n\n                    if (toggle === false) {\n                        toggle = true\n\n                    } else {\n                        toggle = false\n\n                    }\n                    props.funcion(toggle)\n                }} />\n                <span className=\"slider round\"></span>\n            </label>\n            <span className=\"font-body ml-2 self-center\">Modo oscuro</span>\n        </div>\n\n    )\n}\n\nexport default Switch\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Input from '../../../formComponents/Input'\nimport Switch from '../../../formComponents/Switch'\n\n\nconst SociaVitalicia = (props) => {\n\n    useEffect(() => {\n        var x = window.matchMedia(\"(min-width: 1024px)\")\n        if (x.matches) {\n            let last = document.getElementsByClassName(\"last\")\n            props.setAlturaForm(last[0].offsetTop)\n            console.log(\"entro a socia\")\n        }\n\n\n    }, [])\n\n    let fondo = \"\";\n    let main = \"\";\n    let nombre = \"\";\n    let spCode = \"\";\n    let profesion = \"\";\n    let fecha = \"\";\n    let frase = \"\";\n    let darkMode = false;\n\n    const [fotoFondoSubida, setFotoFondoSubida] = useState(\"\")\n    const [fotoMainSubida, setFotoMainSubida] = useState(\"\")\n\n    let guardarDatos = (fondo, main, nombre, profesion, fecha, spCode, frase, darkMode) => {\n        props.dispatch({\n            type: \"SOCIA_VITALICIA\", payload: { \"fotoFondo\": fondo, \"fotoMain\": main, \"nombre\": nombre, \"profesion\": profesion, \"fecha\": fecha, \"spCode\": spCode, \"frase\": frase, \"darkMode\": darkMode }\n        });\n    }\n\n    let guardarFotoFondo = (recibido) => {\n        const file = recibido.target.files[0];\n        if (file !== undefined) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                fondo = reader.result\n                guardarDatos(fondo, main, nombre, profesion, fecha, spCode, frase, darkMode);\n            }\n\n        }\n\n    }\n\n    let guardarFotoMain = (recibido) => {\n        const file = recibido.target.files[0];\n        if (file !== undefined) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                main = reader.result\n                guardarDatos(fondo, main, nombre, profesion, fecha, spCode, frase, darkMode);\n            }\n        }\n    }\n\n    let guardarSpCode = (recibido) => {\n        const file = recibido.target.files[0];\n        if (file !== undefined) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                spCode = reader.result;\n                guardarDatos(fondo, main, nombre, profesion, fecha, spCode, frase, darkMode);\n            }\n        }\n    }\n\n    let guardarNombre = (recibido) => {\n        /*  console.log(recibido) */\n        nombre = recibido;\n        guardarDatos(fondo, main, nombre, profesion, fecha, spCode, frase, darkMode);\n\n    }\n\n    let guardarProfesion = (recibido) => {\n        profesion = recibido;\n        guardarDatos(fondo, main, nombre, profesion, fecha, spCode, frase, darkMode);\n    }\n    let guardarFecha = (recibido) => {\n        /*  console.log(recibido); */\n        let aux = new Date(`${recibido} GMT-3`);\n        /*   console.log(aux) */\n        let dia = aux.getDate();\n        if (dia < 10) {\n            dia = `0${dia}`\n        }\n        let mes = aux.getMonth() + 1;\n        if (mes < 10) {\n            mes = `0${mes}`\n        }\n        let anio = aux.getFullYear();\n\n        fecha = `${dia}.${mes}.${anio}`\n        /*   console.log(fecha) */\n        guardarDatos(fondo, main, nombre, profesion, fecha, spCode, frase, darkMode);\n    }\n\n    let guardarFrase = (recibido) => {\n        frase = recibido;\n        guardarDatos(fondo, main, nombre, profesion, fecha, spCode, frase, darkMode);\n    }\n    let guardarDarkMode = (recibido) => {\n        console.log(recibido)\n        darkMode = recibido;\n        guardarDatos(fondo, main, nombre, profesion, fecha, spCode, frase, darkMode);\n    }\n\n    return (\n\n        <div>\n            <Switch funcion={guardarDarkMode} />\n            <Input label={\"Nombre\"} funcion={guardarNombre} type={\"text\"} />\n            <Input label={\"Profesión\"} funcion={guardarProfesion} type={\"text\"} />\n            <Input label={\"Fecha\"} funcion={guardarFecha} type={\"date\"} />\n\n            <Input label={\"Frase\"} funcion={guardarFrase} type={\"textarea\"} />\n\n            <Input label={\"Foto de Fondo\"} funcion={guardarFotoFondo} type={\"file\"} />\n\n            <Input label={\"Foto de la Socia\"} funcion={guardarFotoMain} type={\"file\"} />\n\n            <Input label={\"Código de Spotify\"} funcion={guardarSpCode} type={\"file\"} />\n\n\n            <div className=\"last\"></div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\n\nexport default connect(mapStateToProps)(SociaVitalicia)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Input from '../formComponents/Input'\nimport Alerta from './Alerta'\n\nconst CambiarContrasena = (props) => {\n\n    let { usuarioLogueado, url } = props\n\n    const [passViejo, setPassViejo] = useState(\"\")\n    const [passNuevo, setPassNuevo] = useState(\"\")\n    const [passNuevoRep, setPassNuevoRep] = useState(\"\")\n\n    const [mensaje, setMensaje] = useState(\"\")\n    const [tipoMensaje, setTipoMensaje] = useState(\"\")\n    const [visible, setVisible] = useState(\"\")\n\n\n    useEffect(() => {\n        if (passNuevo !== \"\" && passViejo !== \"\" && passNuevoRep !== \"\") {\n            document.getElementById(\"btn-cambiar\").disabled = false;\n            document.getElementById(\"btn-cambiar\").style.opacity = \"1\";\n        } else {\n            document.getElementById(\"btn-cambiar\").disabled = true;\n            document.getElementById(\"btn-cambiar\").style.opacity = \"0.7\";\n        }\n    }, [passViejo, passNuevo, passNuevoRep])\n\n    const cambiarContrasena = () => {\n        /* validaciones */\n        if (passViejo !== usuarioLogueado.pass) {\n            setMensaje(\"Tu contraseña actual es incorrecta\");\n            setTipoMensaje(\"error\");\n            setVisible(1)\n        } else if (passNuevo !== passNuevoRep) {\n            setMensaje(\"Las contraseñas ingresadas no coinciden\");\n            setTipoMensaje(\"error\");\n            setVisible(1)\n        } else if (passViejo === passNuevo && passNuevo === passNuevoRep) {\n            setMensaje(\"Tu nueva contraseña debe ser diferente a la contraseña actual\");\n            setTipoMensaje(\"error\");\n            setVisible(1)\n        }\n        else {\n            let usuario = {\n                user: usuarioLogueado._id,\n                passNuevo: passNuevo\n            }\n            fetch(`${url}/cambiarContrasena`, {\n                method: \"PUT\",\n                body: JSON.stringify(usuario),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(r => r.json()).then(r => {\n                setMensaje(\"Contraseña cambiada con éxito\");\n                setTipoMensaje(\"exito\");\n                setVisible(1)\n                props.dispatch({ type: \"CAMBIAR_CONTRASENA\", payload: r });\n                props.funcionPopup(false)\n                props.funcionDropdown(false)\n\n            }\n            )\n        }\n    }\n\n    return (\n        <div>\n            <div className=\" left-0 top-0 fixed h-full w-full flex items-center jusitfy-center z-50 bg-black bg-opacity-60\">\n                <Alerta tipo={tipoMensaje} mensaje={mensaje} visible={visible} funcion={setVisible} duracion={3000} />\n                <div className=\"w-10/12 mx-auto bg-black-50 text-black md:w-1/3  top-20  rounded-xl shadow-md p-12 \">\n                    <h2 className=\"font-body font-semibold text-lg mb-8\">Cambiar contraseña</h2>\n                    <Input type={\"password\"} label={\"Contraseña actual\"} funcion={setPassViejo} />\n                    <Input type={\"password\"} label={\"Nueva contraseña\"} funcion={setPassNuevo} />\n                    <Input type={\"password\"} label={\"Confirmar contraseña\"} funcion={setPassNuevoRep} />\n                    <div className=\"flex flex-row justify-between mt-4\">\n                        <button className=\"text-center block md:inline-block bg-white border border-orange py-3 px-4 rounded-3xl text-orange text-base hover:border-orangelight hover:text-orangelight transition-all\" onClick={() => {\n                            props.funcionPopup(false)\n                            props.funcionDropdown(false)\n                        }}>Cancelar</button>\n                        <button id=\"btn-cambiar\" className=\" text-center block md:inline-block bg-orange py-3 px-8 rounded-3xl text-white text-base hover:bg-orangelight transition-all\" onClick={cambiarContrasena} >Cambiar Contraseña</button>\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    url: state.url,\n    usuarioLogueado: state.usuarioLogueado,\n})\n\n\n\nexport default connect(mapStateToProps)(CambiarContrasena)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport CambiarContrasena from '../admin/CambiarContrasena'\n\nexport const Avatar = (props) => {\n\n    let { usuarioLogueado } = props\n    const [showDropdown, setShowDropdown] = useState(false)\n    const [popupCambiar, setPopupCambiar] = useState(false)\n\n    const cerrarSesion = () => {\n        props.dispatch({ type: \"CERRAR_SESION\" });\n    }\n\n\n    return (\n        <div className=\"pl-8  relative \" >\n            <div className=\"flex items-center cursor-pointer \" onClick={() => { setShowDropdown(!showDropdown) }}>\n                <div className=\"bg-orange w-12 h-12 rounded-3xl\" style={{ background: `url(${usuarioLogueado.avatar}) center center /cover`, backgroundSize: '50px 50px' }}>\n\n                </div>\n                <div className=\"m-0 px-2 w-auto\">\n                    <p className=\"text-base font-body opacity-70 w-auto inline whitespace-nowrap\">{usuarioLogueado.nombreCompleto}</p>\n                    {/*   <p className=\"text-sm font-body opacity-70\">{usuarioLogueado.rol}</p> */}\n                </div>\n                <button className=\"group\"  > <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n                </button>\n            </div>\n            {showDropdown ?\n                <div className=\"absolute w-48 top-12 bg-white right-0 py-2 px-4 rounded-md shadow text-right\">\n                    <p className=\"text-base font-body text-black pb-2 hover:text-opacity-80\" onClick={() => setPopupCambiar(true)}>Cambiar contraseña</p>\n                    <p className=\"text-base font-body text-red-500 pb-2 hover:text-opacity-80\" onClick={cerrarSesion} >Cerrar sesión</p>\n                </div>\n                :\n                null\n\n            }\n            {popupCambiar ?\n                <CambiarContrasena funcionPopup={setPopupCambiar} funcionDropdown={setShowDropdown} />\n                : null\n\n            }\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    usuarioLogueado: state.usuarioLogueado\n})\n\n\nexport default connect(mapStateToProps)(Avatar)\n","import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport Avatar from './Avatar'\n\nconst NavbarAdmin = () => {\n\n    const [menu, setMenu] = useState(\"cerrado\")\n    const toggleMenu = () => {\n        if (menu === \"cerrado\") {\n            setMenu(\"abierto\");\n        } else {\n            setMenu(\"cerrado\")\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"fixed w-screen z-50\">\n                <nav className=\"w-screen flex justify-between p-4 md:py-2 items-center md:px-8 lg:px-14  bg-white \" >\n                    <div className=\"w-full  flex items-center justify-between\">\n                        <NavLink to={{ pathname: \"/\" }}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"57\" height=\"56\" viewBox=\"0 0 57 56\" fill=\"none\">\n                            <path d=\"M7.85302 25.3496C9.62007 21.5958 13.5938 19.5882 17.4973 20.1461C18.3849 20.273 19.2689 20.5325 20.1225 20.9343C22.1424 21.8851 23.6568 23.475 24.5378 25.349C25.6663 27.7495 25.7558 30.6163 24.5378 33.2037\" stroke=\"#F06F46\" strokeWidth=\"5.68166\" />\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.4811 35.0452C16.6665 36.5446 20.4644 35.1779 21.9638 31.9925L27.1044 34.4124C24.6575 39.6105 18.9744 42.2479 13.5914 41.0519L12.4848 43.4027L14.469 44.3367C15.1382 44.6517 15.4254 45.4497 15.1104 46.1189L14.2279 47.9935C13.9129 48.6628 13.1149 48.95 12.4456 48.6349L10.4615 47.7009L8.48761 51.8941C8.23557 52.4295 7.59721 52.6592 7.06179 52.4072L4.25005 51.0836C3.71463 50.8315 3.48491 50.1932 3.73695 49.6578L5.71082 45.4646L3.68812 44.5124C3.01884 44.1974 2.73169 43.3994 3.04674 42.7302L3.92917 40.8556C4.24422 40.1863 5.04218 39.8991 5.71145 40.2142L7.73415 41.1663L8.83456 38.8287C4.44259 35.4503 2.83096 29.3618 5.28784 24.1425L10.4284 26.5624C8.92894 29.7478 10.2957 33.5457 13.4811 35.0452Z\" fill=\"#F06F46\" />\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27.4048 7.7278C26.4919 7.59352 25.8607 6.7446 25.9949 5.83169L26.6427 1.42783C26.777 0.514919 27.6259 -0.116277 28.5388 0.0180088C29.4518 0.152295 30.083 1.00121 29.9487 1.91412L29.3009 6.31799C29.1666 7.23089 28.3177 7.86209 27.4048 7.7278ZM19.5127 7.03654C19.7768 7.92066 20.7076 8.42329 21.5917 8.15918C22.4759 7.89508 22.9785 6.96425 22.7144 6.08013L21.4403 1.8151C21.1762 0.930975 20.2454 0.42835 19.3613 0.692456C18.4772 0.956562 17.9745 1.88739 18.2386 2.77151L19.5127 7.03654ZM30.8135 12.4547C30.6866 12.3976 30.5564 12.3576 30.4254 12.3337C25.3706 10.5821 19.8055 12.3935 16.7211 16.6351C16.2665 17.2544 15.8647 17.9264 15.5251 18.6476L15.53 18.6499C12.6941 24.6744 15.2789 31.8572 21.3034 34.6931C27.3278 37.529 34.5106 34.9442 37.3465 28.9197L37.3505 28.9216C37.4693 28.6691 37.5786 28.4146 37.6786 28.1585C37.7281 28.0883 37.7767 28.0181 37.8243 27.9479L52.3568 29.7295C52.9607 29.8035 53.5571 29.5435 53.9137 29.0506L56.4843 26.2196C56.7787 25.8127 56.8744 25.295 56.745 24.8097C56.6156 24.3244 56.2748 23.9231 55.8168 23.7169L30.8135 12.4547ZM32.2099 26.5017C33.7105 23.3139 32.3428 19.5131 29.1549 18.0125C25.9671 16.5119 22.1663 17.8797 20.6657 21.0675L20.6706 21.0698C19.1711 24.2552 20.5378 28.053 23.7232 29.5525C26.9086 31.052 30.7065 29.6853 32.206 26.4999L32.2099 26.5017ZM16.8294 12.5188C16.1957 13.1895 15.1383 13.2196 14.4675 12.5859L11.2319 9.52904C10.5611 8.89537 10.5311 7.83793 11.1648 7.1672C11.7984 6.49646 12.8559 6.46641 13.5266 7.10009L16.7623 10.1569C17.433 10.7906 17.463 11.848 16.8294 12.5188Z\" fill=\"#031030\" />\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.9128 23.5036C20.3127 24.1626 21.3571 25.259 21.9672 26.5567L27.109 24.1394C25.957 21.6891 23.9727 19.6058 21.3327 18.363C20.2205 17.8395 19.0639 17.4993 17.8996 17.3329C12.7959 16.6034 7.59633 19.2245 5.28304 24.1387L10.4236 26.5586C11.6444 23.9652 14.3924 22.571 17.0957 22.9574C17.7066 23.0447 18.3179 23.2236 18.9128 23.5036Z\" fill=\"#F06F46\" />\n                        </svg>\n                        </NavLink>\n                        <div className=\"lg:hidden\" onClick={toggleMenu}>\n                            {(menu === \"cerrado\") ?\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"display:block h-6 w-6 stroke-current text-black\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\" />\n                                </svg> :\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\" display:block h-6 w-6 stroke-current text-black\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                </svg>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"hidden lg:flex items-center\" >\n\n                        <Avatar />\n                    </div>\n                </nav>\n\n                {/* <div className=\"hidden md:block bg-black  py-2 items-center\">\n                    <div className=\"w-10/12 mx-auto flex justify-around\">\n                        <NavLink className=\"text-white font-regular font-body hover:opacity-70 transition-all\" to={{ pathname: \"/admin\", aboutProps: \"nuevoPosteo\" }}>Nuevo Posteo</NavLink>\n                        <NavLink className=\"text-white font-regular font-body hover:opacity-70 transition-all\" to={{ pathname: \"/admin\", aboutProps: \"nuestraGaleria\" }}>Gestionar Galería</NavLink>\n                        <NavLink className=\"text-white font-regular font-body hover:opacity-70 transition-all\" to={{ pathname: \"/admin\", aboutProps: \"editarDatos\" }}>Editar Datos</NavLink>\n                        <NavLink className=\"text-white font-regular font-body hover:opacity-70 transition-all\" to={{ pathname: \"/admin\", aboutProps: \"nuevaStory\" }}>Nueva Story</NavLink>\n                        <NavLink className=\"text-white font-regular font-body hover:opacity-70 transition-all\" to={{ pathname: \"/admin\", aboutProps: \"gestionarUsuarios\" }}>Gestionar Usuarios</NavLink>\n                    </div>\n\n                </div> */}{\n                    (menu === \"cerrado\") ?\n                        \"\" :\n                        <div className=\"lg:hidden bg-black  p-4 items-center flex flex-col\">\n\n                            <NavLink onClick={() => { setMenu(\"cerrado\") }} className=\"text-white font-regular font-body hover:opacity-70 transition-all  rounded-md mx-4 my-2 px-4  pr-10 py-2 flex\" to={{ pathname: \"/admin\", aboutProps: \"nuevoPosteo\" }}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                                </svg>Nuevo Posteo</NavLink>\n                            <NavLink onClick={(e) => { setMenu(\"cerrado\") }} className=\"text-white font-regular font-body hover:opacity-70 transition-all rounded-md mx-4 my-2 px-4  pr-10 py-2 flex\" to={{ pathname: \"/admin\", aboutProps: \"nuestraGaleria\" }}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" />\n                                </svg>Nuestra Galería</NavLink>\n                            <NavLink onClick={(e) => { setMenu(\"cerrado\") }} className=\"text-white font-regular font-body hover:opacity-70 transition-all flex rounded-md mx-4 my-2 px-4 pr-10  py-2\" to={{ pathname: \"/admin\", aboutProps: \"editarDatos\" }}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                                </svg>Editar Datos</NavLink>\n                            <NavLink onClick={(e) => { setMenu(\"cerrado\") }} className=\"text-white font-regular font-body hover:opacity-70 transition-all rounded-md mx-4 my-2 px-4  pr-10 py-2 flex\" to={{ pathname: \"/admin\", aboutProps: \"nuevaStory\" }}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M7 4v16M17 4v16M3 8h4m10 0h4M3 12h18M3 16h4m10 0h4M4 20h16a1 1 0 001-1V5a1 1 0 00-1-1H4a1 1 0 00-1 1v14a1 1 0 001 1z\" />\n                                </svg>Nueva Story</NavLink>\n                            <NavLink onClick={(e) => { setMenu(\"cerrado\") }} className=\"text-white font-regular font-body hover:opacity-70 transition-all rounded-md mx-4 my-2 px-4 pr-10  py-2 flex\" to={{ pathname: \"/admin\", aboutProps: \"gestionarUsuarios\" }}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n                                </svg>  Usuarios</NavLink>\n                            <NavLink onClick={(e) => { setMenu(\"cerrado\") }} to={{ pathname: \"/\" }} className=\"bg-orange py-3 rounded-3xl text-white px-8 text-center m-2  text-base\">Ir al sitio</NavLink>\n                        </div>\n                }\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default NavbarAdmin\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Input from '../../../formComponents/Input'\nimport Switch from '../../../formComponents/Switch'\n\n\nconst Noticias = (props) => {\n\n    let foto = \"\";\n    let titulo = \"\";\n    let darkMode = false;\n\n    useEffect(() => {\n        let last = document.getElementsByClassName(\"last\")\n        props.setAlturaForm(last[0].offsetTop)\n    }, [])\n\n    const [fotoSubida, setFotoSubida] = useState(\"\")\n\n    let guardarDatos = (foto, titulo, darkMode) => {\n        props.dispatch({\n            type: \"NOTICIAS\", payload: { \"foto\": foto, \"titulo\": titulo, \"darkMode\": darkMode }\n        });\n    }\n    let guardarFoto = (recibido) => {\n        const file = recibido.target.files[0];\n        if (file !== undefined) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                foto = reader.result\n                console.log(foto);\n                guardarDatos(foto, titulo, darkMode);\n            }\n\n        }\n\n    }\n\n    let guardarTitulo = (recibido) => {\n        console.log(recibido)\n        titulo = recibido;\n        guardarDatos(foto, titulo, darkMode);\n\n    }\n\n    let guardarDarkMode = (recibido) => {\n        console.log(recibido)\n        darkMode = recibido;\n        guardarDatos(foto, titulo, darkMode);\n    }\n\n    return (\n\n        <div>\n            <Switch funcion={guardarDarkMode} />\n            <Input label={\"Titulo de la Noticia\"} funcion={guardarTitulo} type={\"text\"} />\n            <Input label={\"Foto de la noticia\"} funcion={guardarFoto} type={\"file\"} />\n            <div className=\"last\"></div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\n\nexport default connect(mapStateToProps)(Noticias)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Switch from '../../../formComponents/Switch'\nimport Input from '../../../formComponents/Input'\n\nconst ProximoPartido = (props) => {\n\n    let { url } = props\n    let filtro;\n\n    useEffect(() => {\n        let last = document.getElementsByClassName(\"last\")\n        props.setAlturaForm(last[0].offsetTop)\n    }, [])\n\n    const [equipos, setEquipos] = useState([])\n    const [equiposFiltrados, setEquiposFiltrados] = useState([])\n\n    let eqLocal = \"\";\n    let eqVisitante = \"\";\n    let hora = \"\";\n    let fecha = \"\";\n    let lugar = \"\";\n    let fotoLocal = \"\";\n    let fotoVisitante = \"\";\n    const [deporteElegido, setDeporteElegido] = useState(\"\");\n\n    let darkMode = false;\n\n    useEffect(() => {\n\n        fetch(`${url}/listarEquipos`, {\n            method: 'GET',\n        }).then(r => r.json())\n            .then(equipos => {\n                console.log(equipos)\n                setEquipos(equipos);\n                setEquiposFiltrados(equipos)\n            }).then(() => {\n                /* buscarPorDeporte(\"61785cfa21299d6da5a1e2d7\"); */\n            }\n            )\n    }, [])\n    useEffect(() => {\n        guardarDatos(eqLocal, eqVisitante, fecha, hora, lugar, fotoLocal, fotoVisitante, deporteElegido, darkMode);\n    }, [deporteElegido])\n\n    let { deportes } = props\n\n    let guardarDatos = (eqLocal, eqVisitante, fecha, hora, lugar, fotoLocal, fotoVisitante, deporteElegido, darkMode) => {\n\n        props.dispatch({\n            type: \"PROXIMO_PARTIDO\", payload: { \"eqLocal\": eqLocal, \"eqVisitante\": eqVisitante, \"fecha\": fecha, \"hora\": hora, \"lugar\": lugar, \"fotoLocal\": fotoLocal, \"fotoVisitante\": fotoVisitante, \"deporte\": deporteElegido, \"darkMode\": darkMode }\n        });\n    }\n    let buscarPorDeporte = (recibido) => {\n        setDeporteElegido(deportes.filter(d => d._id === recibido))\n        setEquiposFiltrados(equipos.filter(eq => eq.deporte === recibido))\n\n    }\n\n\n    const guardarEqLocal = (recibido) => {\n        console.log(deporteElegido)\n        console.log(recibido) /* recibo id de equipo elegido */\n        eqLocal = equipos.filter(eq => eq._id === recibido);\n\n        guardarDatos(eqLocal, eqVisitante, fecha, hora, lugar, fotoLocal, fotoVisitante, deporteElegido, darkMode);\n    }\n    const guardarEqVisitante = (recibido) => {\n\n        console.log(recibido) /* recibo id de equipo elegido */\n        eqVisitante = equipos.filter(eq => eq._id === recibido);\n        guardarDatos(eqLocal, eqVisitante, fecha, hora, lugar, fotoLocal, fotoVisitante, deporteElegido, darkMode);\n    }\n    let guardarDarkMode = (recibido) => {\n\n        darkMode = recibido;\n\n        guardarDatos(eqLocal, eqVisitante, fecha, hora, lugar, fotoLocal, fotoVisitante, deporteElegido, darkMode);\n    }\n    let guardarFotoLocal = (recibido) => {\n        const file = recibido.target.files[0];\n        if (file !== undefined) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                fotoLocal = reader.result\n                guardarDatos(eqLocal, eqVisitante, fecha, hora, lugar, fotoLocal, fotoVisitante, deporteElegido, darkMode);\n            }\n\n        }\n\n    }\n\n    let guardarFotoVisitante = (recibido) => {\n        const file = recibido.target.files[0];\n        if (file !== undefined) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                fotoVisitante = reader.result\n                guardarDatos(eqLocal, eqVisitante, fecha, hora, lugar, fotoLocal, fotoVisitante, deporteElegido, darkMode);\n            }\n        }\n    }\n\n    let guardarFecha = (recibido) => {\n\n        let aux = new Date(`${recibido} GMT-3`);\n\n        let dia = aux.getDate();\n        if (dia < 10) {\n            dia = `0${dia}`\n        }\n        let mes = aux.getMonth() + 1;\n        if (mes < 10) {\n            mes = `0${mes}`\n        }\n\n        fecha = `${dia}.${mes}`\n        guardarDatos(eqLocal, eqVisitante, fecha, hora, lugar, fotoLocal, fotoVisitante, deporteElegido, darkMode);\n\n    }\n    let guardarHora = (recibido) => {\n        console.log(recibido)\n        hora = recibido;\n        guardarDatos(eqLocal, eqVisitante, fecha, hora, lugar, fotoLocal, fotoVisitante, deporteElegido, darkMode);\n    }\n    let guardarLugar = (recibido) => {\n        console.log(recibido)\n        lugar = recibido;\n        guardarDatos(eqLocal, eqVisitante, fecha, hora, lugar, fotoLocal, fotoVisitante, deporteElegido, darkMode);\n    }\n\n    return (\n        <div>\n            <Switch funcion={guardarDarkMode} />\n            <Input label={\"Deporte\"} defaultValue={\"Elige un deporte\"} type={\"select\"} opciones={deportes} funcion={buscarPorDeporte} />\n            <Input label={\"Equipo local\"} type={\"select\"} defaultValue={\"Elige un equipo\"} opciones={equiposFiltrados} funcion={guardarEqLocal} />\n            <Input label={\"Equipo visitante\"} type={\"select\"} defaultValue={\"Elige otro equipo\"} opciones={equiposFiltrados} funcion={guardarEqVisitante} />\n            <Input label={\"Fecha\"} type={\"date\"} funcion={guardarFecha} />\n            <Input label={\"Hora\"} type={\"text\"} funcion={guardarHora} />\n            <Input label={\"Ubicación\"} type={\"text\"} funcion={guardarLugar} />\n            <Input label={\"Foto del equipo local\"} funcion={guardarFotoLocal} type={\"file\"} />\n            <Input label={\"Foto del equipo visitante\"} funcion={guardarFotoVisitante} type={\"file\"} />\n            <div className=\"last\"></div>\n\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    deportes: state.deportes,\n    url: state.url\n})\n\n\nexport default connect(mapStateToProps)(ProximoPartido)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Switch from '../../../formComponents/Switch'\nimport Input from '../../../formComponents/Input'\n\nconst FinalPartido = (props) => {\n\n    let { url } = props\n    let filtro;\n\n    useEffect(() => {\n        let last = document.getElementsByClassName(\"last\")\n        props.setAlturaForm(last[0].offsetTop)\n    }, [])\n\n    const [equipos, setEquipos] = useState([])\n    const [equiposFiltrados, setEquiposFiltrados] = useState([])\n\n    let eqLocal = \"\";\n    let eqVisitante = \"\";\n    let pLocal = \"\";\n    let pVisitante = \"\";\n    let foto = \"\";\n\n    const [deporteElegido, setDeporteElegido] = useState(\"\");\n\n    let darkMode = false;\n\n    useEffect(() => {\n\n        fetch(`${url}/listarEquipos`, {\n            method: 'GET',\n        }).then(r => r.json())\n            .then(equipos => {\n                console.log(equipos)\n                setEquipos(equipos);\n                setEquiposFiltrados(equipos)\n            }).then(() => {\n                /* buscarPorDeporte(\"61785cfa21299d6da5a1e2d7\"); */\n            }\n            )\n    }, [])\n    useEffect(() => {\n        guardarDatos(eqLocal, eqVisitante, pLocal, pVisitante, foto, deporteElegido, darkMode);\n    }, [deporteElegido])\n\n    let { deportes } = props\n\n    let guardarDatos = (eqLocal, eqVisitante, pLocal, pVisitante, foto, deporteElegido, darkMode) => {\n\n        props.dispatch({\n            type: \"FINAL_PARTIDO\", payload: { \"eqLocal\": eqLocal, \"eqVisitante\": eqVisitante, \"pLocal\": pLocal, \"pVisitante\": pVisitante, \"foto\": foto, \"deporte\": deporteElegido, \"darkMode\": darkMode }\n        });\n    }\n    let buscarPorDeporte = (recibido) => {\n        console.log(recibido)\n        setDeporteElegido(deportes.filter(d => d._id === recibido))\n        setEquiposFiltrados(equipos.filter(eq => eq.deporte === recibido))\n    }\n\n    const guardarEqLocal = (recibido) => {\n        console.log(deporteElegido)\n        console.log(recibido) /* recibo id de equipo elegido */\n        eqLocal = equipos.filter(eq => eq._id === recibido);\n\n        guardarDatos(eqLocal, eqVisitante, pLocal, pVisitante, foto, deporteElegido, darkMode);\n    }\n    const guardarEqVisitante = (recibido) => {\n\n        console.log(recibido) /* recibo id de equipo elegido */\n        eqVisitante = equipos.filter(eq => eq._id === recibido);\n        guardarDatos(eqLocal, eqVisitante, pLocal, pVisitante, foto, deporteElegido, darkMode);\n    }\n    let guardarDarkMode = (recibido) => {\n\n        darkMode = recibido;\n\n        guardarDatos(eqLocal, eqVisitante, pLocal, pVisitante, foto, deporteElegido, darkMode);\n    }\n    let guardarFoto = (recibido) => {\n        const file = recibido.target.files[0];\n        if (file !== undefined) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                foto = reader.result\n                guardarDatos(eqLocal, eqVisitante, pLocal, pVisitante, foto, deporteElegido, darkMode);\n            }\n\n        }\n\n    }\n\n\n    let guardarPuntajeLocal = (recibido) => {\n        pLocal = recibido;\n        guardarDatos(eqLocal, eqVisitante, pLocal, pVisitante, foto, deporteElegido, darkMode);\n    }\n    let guardarPuntajeVisitante = (recibido) => {\n        pVisitante = recibido;\n        guardarDatos(eqLocal, eqVisitante, pLocal, pVisitante, foto, deporteElegido, darkMode);\n    }\n\n    return (\n        <div>\n            <Switch funcion={guardarDarkMode} />\n            <Input label={\"Deporte\"} defaultValue={\"Elige un deporte\"} type={\"select\"} opciones={deportes} funcion={buscarPorDeporte} bgColor={\"grey\"} />\n            <Input label={\"Equipo local\"} type={\"select\"} defaultValue={\"Elige un equipo\"} opciones={equiposFiltrados} funcion={guardarEqLocal} />\n            <Input label={\"Equipo visitante\"} type={\"select\"} defaultValue={\"Elige otro equipo\"} opciones={equiposFiltrados} funcion={guardarEqVisitante} />\n            <Input label={\"Puntaje local\"} type={\"text\"} funcion={guardarPuntajeLocal} />\n            <Input label={\"Puntaje visitante\"} type={\"text\"} funcion={guardarPuntajeVisitante} />\n            <Input label={\"Foto del partido\"} funcion={guardarFoto} type={\"file\"} />\n            <div className=\"last\"></div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    deportes: state.deportes,\n    url: state.url\n})\n\n\nexport default connect(mapStateToProps)(FinalPartido)\n","import React, { useState, useEffect } from 'react'\nimport { SelectField } from 'evergreen-ui'\nimport { connect } from 'react-redux'\nimport Imagen from './Imagen'\nimport SociaVitalicia from './form/SociaVitalicia'\nimport NavbarAdmin from '../NavbarAdmin'\nimport Input from '../../formComponents/Input'\nimport Noticias from './form/Noticias'\nimport ProximoPartido from './form/ProximoPartido'\nimport FinalPartido from './form/FinalPartido'\n\n\nconst PosteosContenedor = (props) => {\n\n    const [tipoPosteo, setTipoPosteo] = useState(\"\")\n\n    let { url } = props;\n\n    const [alturaForm, setAlturaForm] = useState(0)\n\n\n\n    useEffect(() => {\n        var x = window.matchMedia(\"(max-width: 1023px)\")\n        if (x.matches) {\n            let last = document.getElementById(\"lastMobile\")\n            setAlturaForm(last.offsetTop + 500)\n\n        }\n    }, [tipoPosteo])\n    useEffect(() => {\n        setTipoPosteo(\"socia\")\n    }, [])\n\n    useEffect(() => {\n        console.log(alturaForm)\n    }, [alturaForm])\n\n    return (\n        <div>\n            {/*  <NavbarAdmin /> */}\n            <div className=\"w-screen overflow-hidden p-4  md:p-0 md:w-10/12 mx-auto pt-32 md:pt-32 w-10/12 mx-auto lg:min-h-screen\" style={{ maxHeight: `${alturaForm}px` }}>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"col-span-1\">\n                        <div className=\"mb-6 col-span-1\">\n                            <Input type={\"select\"} label={\"Tipo de Posteo\"} funcion={setTipoPosteo} opciones={[{ \"nombre\": \"Socia Vitalicia\", \"_id\": \"socia\" }, { \"nombre\": \"Noticias\", \"_id\": \"noticias\" }, { \"nombre\": \"Próximo Partido\", \"_id\": \"proximoPartido\" }, { \"nombre\": \"Fin del Partido\", \"_id\": \"finalPartido\" }]} />\n                        </div>\n\n\n                        {\n                            (tipoPosteo === \"socia\") ?\n                                <SociaVitalicia setAlturaForm={setAlturaForm} /> :\n                                (tipoPosteo === \"noticias\") ?\n                                    <Noticias setAlturaForm={setAlturaForm} /> :\n                                    (tipoPosteo === \"proximoPartido\") ?\n                                        <ProximoPartido setAlturaForm={setAlturaForm} /> :\n                                        (tipoPosteo === \"finalPartido\") ?\n                                            <FinalPartido setAlturaForm={setAlturaForm} /> :\n                                            \"\"\n                        }\n                    </div>\n                    <div className=\"col-span-1\">\n                        <div id=\"lastMobile\"></div>\n                        {\n                            <Imagen tipo={tipoPosteo} setAlturaForm={setAlturaForm} />\n                        }\n                    </div>\n\n                </div>\n            </div >\n\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    url: state.url\n})\n\n\n\nexport default connect(mapStateToProps)(PosteosContenedor)","import React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Alerta from './Alerta';\nimport Input from '../formComponents/Input'\n\nconst Login = (props) => {\n\n    let history = useHistory();\n\n    let { url } = props\n\n    const [visible, setVisible] = useState(0)\n    const [mensaje, setMensaje] = useState(\"\")\n\n    const [user, setUser] = useState(\"\")\n    const [pass, setPass] = useState(\"\")\n\n    const iniciarSesion = () => {\n\n        if (user === \"\" || pass === \"\") {\n            setMensaje(\"Los campos no pueden estar vacíos\");\n            setVisible(1);\n        }\n        else {\n            let usuario = {\n                user: user,\n                pass: pass\n            }\n\n            fetch(`${url}/iniciarsesion`, {\n                method: \"POST\",\n                body: JSON.stringify(usuario),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then(r => r.json())\n                .then(usuario => {\n                    console.log(usuario);\n\n                    if (usuario === null) {\n                        setVisible(1)\n                        setMensaje(\"Usuario o contraseña incorrecto\")\n                    } else {\n                        setVisible(0)\n                        props.dispatch({ type: \"SESION_INICIADA\", payload: usuario })\n                        history.push(\"/admin\")\n                    }\n\n                })\n        }\n    }\n\n    return (\n        <div className=\"flex items-center h-screen bg-black p-4 absolute  w-full justify-center\">\n            <svg className=\"absolute top-0 right-0 w-1/2 \" xmlns=\"http://www.w3.org/2000/svg\" width=\"773\" height=\"173\" viewBox=\"0 0 773 173\" fill=\"none\">\n                <path d=\"M136.283 170.565L135.236 171.613L136.283 172.66L137.33 171.613L136.283 170.565ZM52.981 87.2638L51.9339 88.3109L51.9339 88.3109L52.981 87.2638ZM186.264 120.584L187.311 121.632L188.358 120.584L187.311 119.537L186.264 120.584ZM102.962 37.2827L101.915 36.2356L100.868 37.2827L101.915 38.3299L102.962 37.2827ZM186.264 -46.0189L187.311 -44.9718L188.358 -46.0189L187.311 -47.0661L186.264 -46.0189ZM136.283 -96L137.33 -97.0471L136.283 -98.0943L135.236 -97.0471L136.283 -96ZM52.981 -12.6983L51.9339 -13.7455L51.9339 -13.7455L52.981 -12.6983ZM3.00001 37.2827L1.95284 36.2355L0.90567 37.2827L1.95284 38.3299L3.00001 37.2827ZM137.33 169.518L54.0282 86.2166L51.9339 88.3109L135.236 171.613L137.33 169.518ZM185.217 119.537L135.236 169.518L137.33 171.613L187.311 121.632L185.217 119.537ZM101.915 38.3299L185.217 121.632L187.311 119.537L104.009 36.2356L101.915 38.3299ZM104.009 38.3299L187.311 -44.9718L185.217 -47.0661L101.915 36.2356L104.009 38.3299ZM187.311 -47.0661L137.33 -97.0471L135.236 -94.9528L185.217 -44.9718L187.311 -47.0661ZM135.236 -97.0471L51.9339 -13.7455L54.0282 -11.6511L137.33 -94.9528L135.236 -97.0471ZM51.9339 -13.7455L1.95284 36.2355L4.04717 38.3299L54.0282 -11.6511L51.9339 -13.7455ZM54.0282 86.2166L4.04717 36.2355L1.95284 38.3299L51.9339 88.3109L54.0282 86.2166Z\" fill=\"#FFFCFA\" />\n                <path d=\"M355.088 170.565L354.041 171.613L355.088 172.66L356.136 171.613L355.088 170.565ZM271.787 87.2638L270.74 88.3109L270.74 88.3109L271.787 87.2638ZM405.069 120.584L406.117 121.632L407.164 120.584L406.117 119.537L405.069 120.584ZM321.768 37.2827L320.721 36.2356L319.673 37.2827L320.721 38.3299L321.768 37.2827ZM405.069 -46.0189L406.117 -44.9718L407.164 -46.0189L406.117 -47.0661L405.069 -46.0189ZM355.088 -96L356.136 -97.0471L355.088 -98.0943L354.041 -97.0471L355.088 -96ZM271.787 -12.6983L270.74 -13.7455L270.74 -13.7455L271.787 -12.6983ZM221.806 37.2827L220.759 36.2355L220.216 36.7777L220.346 37.5333L221.806 37.2827ZM221.806 37.2827L220.346 37.5334L220.426 37.9972L220.759 38.3299L221.806 37.2827ZM356.136 169.518L272.834 86.2166L270.74 88.3109L354.041 171.613L356.136 169.518ZM404.022 119.537L354.041 169.518L356.136 171.613L406.117 121.632L404.022 119.537ZM320.721 38.3299L404.022 121.632L406.117 119.537L322.815 36.2356L320.721 38.3299ZM322.815 38.3299L406.117 -44.9718L404.022 -47.0661L320.721 36.2356L322.815 38.3299ZM406.117 -47.0661L356.136 -97.0471L354.041 -94.9528L404.022 -44.9718L406.117 -47.0661ZM354.041 -97.0471L270.74 -13.7455L272.834 -11.6511L356.136 -94.9528L354.041 -97.0471ZM222.853 38.3299L272.834 -11.6511L270.74 -13.7455L220.759 36.2355L222.853 38.3299ZM223.265 37.0321L223.265 37.0321L220.346 37.5333L220.346 37.5334L223.265 37.0321ZM272.834 86.2166L222.853 36.2356L220.759 38.3299L270.74 88.3109L272.834 86.2166Z\" fill=\"#FFFCFA\" />\n                <path d=\"M573.895 170.565L572.848 171.613L573.895 172.66L574.942 171.613L573.895 170.565ZM490.593 87.2638L489.546 88.3109L489.546 88.3109L490.593 87.2638ZM623.876 120.584L624.923 121.632L625.97 120.584L624.923 119.537L623.876 120.584ZM540.574 37.2827L539.527 36.2356L538.48 37.2827L539.527 38.3299L540.574 37.2827ZM623.876 -46.0189L624.923 -44.9718L625.97 -46.0189L624.923 -47.0661L623.876 -46.0189ZM573.895 -96L574.942 -97.0471L573.895 -98.0943L572.848 -97.0471L573.895 -96ZM490.593 -12.6983L489.546 -13.7455L489.546 -13.7455L490.593 -12.6983ZM440.612 37.2827L439.565 36.2355L439.023 36.7777L439.153 37.5333L440.612 37.2827ZM440.612 37.2827L439.153 37.5334L439.232 37.9972L439.565 38.3299L440.612 37.2827ZM574.942 169.518L491.641 86.2166L489.546 88.3109L572.848 171.613L574.942 169.518ZM622.829 119.537L572.848 169.518L574.942 171.613L624.923 121.632L622.829 119.537ZM539.527 38.3299L622.829 121.632L624.923 119.537L541.622 36.2356L539.527 38.3299ZM541.622 38.3299L624.923 -44.9718L622.829 -47.0661L539.527 36.2356L541.622 38.3299ZM624.923 -47.0661L574.942 -97.0471L572.848 -94.9528L622.829 -44.9718L624.923 -47.0661ZM572.848 -97.0471L489.546 -13.7455L491.641 -11.6511L574.942 -94.9528L572.848 -97.0471ZM441.659 38.3299L491.641 -11.6511L489.546 -13.7455L439.565 36.2355L441.659 38.3299ZM442.072 37.0321L442.072 37.0321L439.153 37.5333L439.153 37.5334L442.072 37.0321ZM491.641 86.2166L441.659 36.2356L439.565 38.3299L489.546 88.3109L491.641 86.2166Z\" fill=\"#FFFCFA\" />\n                <path d=\"M792.7 170.565L791.653 171.613L792.7 172.66L793.747 171.613L792.7 170.565ZM709.398 87.2638L708.351 88.3109L708.351 88.3109L709.398 87.2638ZM842.681 120.584L843.728 121.632L844.775 120.584L843.728 119.537L842.681 120.584ZM759.379 37.2827L758.332 36.2356L757.285 37.2827L758.332 38.3299L759.379 37.2827ZM842.681 -46.0189L843.728 -44.9718L844.775 -46.0189L843.728 -47.0661L842.681 -46.0189ZM792.7 -96L793.747 -97.0471L792.7 -98.0943L791.653 -97.0471L792.7 -96ZM709.398 -12.6983L708.351 -13.7455L708.351 -13.7455L709.398 -12.6983ZM659.417 37.2827L658.37 36.2355L657.828 36.7777L657.957 37.5333L659.417 37.2827ZM659.417 37.2827L657.957 37.5334L658.037 37.9972L658.37 38.3299L659.417 37.2827ZM793.747 169.518L710.445 86.2166L708.351 88.3109L791.653 171.613L793.747 169.518ZM841.634 119.537L791.653 169.518L793.747 171.613L843.728 121.632L841.634 119.537ZM758.332 38.3299L841.634 121.632L843.728 119.537L760.426 36.2356L758.332 38.3299ZM760.426 38.3299L843.728 -44.9718L841.634 -47.0661L758.332 36.2356L760.426 38.3299ZM843.728 -47.0661L793.747 -97.0471L791.653 -94.9528L841.634 -44.9718L843.728 -47.0661ZM791.653 -97.0471L708.351 -13.7455L710.445 -11.6511L793.747 -94.9528L791.653 -97.0471ZM660.464 38.3299L710.445 -11.6511L708.351 -13.7455L658.37 36.2355L660.464 38.3299ZM660.877 37.0321L660.877 37.0321L657.957 37.5333L657.957 37.5334L660.877 37.0321ZM710.445 86.2166L660.464 36.2356L658.37 38.3299L708.351 88.3109L710.445 86.2166Z\" fill=\"#FFFCFA\" />\n            </svg>\n            <svg className=\"absolute bottom-0 left-0 w-1/2 \" xmlns=\"http://www.w3.org/2000/svg\" width=\"847\" height=\"150\" viewBox=\"0 0 847 150\" fill=\"none\">\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M798.094 199.203C807.955 184.922 814.837 161.755 811.852 128.249L843.936 125.39C847.408 164.359 839.762 195.549 824.6 217.506C809.367 239.567 786.852 251.639 763.32 251.639C739.789 251.639 717.274 239.567 702.041 217.506C686.879 195.549 679.233 164.359 682.705 125.39C685.69 91.8835 678.808 68.7165 668.947 54.4356C659.158 40.2592 646.157 34.2116 634.173 34.2116C622.189 34.2116 609.189 40.2592 599.4 54.4356C589.539 68.7165 582.656 91.8835 585.642 125.39C589.114 164.359 581.467 195.549 566.306 217.506C551.072 239.567 528.558 251.639 505.026 251.639C481.494 251.639 458.98 239.567 443.746 217.506C428.585 195.549 420.938 164.359 424.41 125.39C427.396 91.8835 420.513 68.7164 410.652 54.4356C400.863 40.2592 387.863 34.2116 375.879 34.2116C363.895 34.2116 350.894 40.2592 341.105 54.4356C331.244 68.7164 324.362 91.8834 327.347 125.39C330.819 164.359 323.173 195.549 308.011 217.506C292.778 239.567 270.263 251.639 246.732 251.639C223.2 251.639 200.685 239.567 185.452 217.506C170.29 195.549 162.644 164.359 166.116 125.39C169.101 91.8834 162.219 68.7164 152.358 54.4356C142.569 40.2592 129.568 34.2115 117.584 34.2115C105.6 34.2115 92.5996 40.2592 82.8109 54.4356C72.9499 68.7164 66.0675 91.8834 69.0528 125.39C72.5248 164.359 64.8782 195.549 49.7169 217.506C34.4834 239.567 11.9687 251.639 -11.563 251.639C-35.0946 251.639 -57.6093 239.567 -72.8428 217.506C-88.0041 195.549 -95.6507 164.359 -92.1787 125.39C-89.1934 91.8834 -96.0758 68.7164 -105.937 54.4355C-115.726 40.2591 -128.726 34.2115 -140.71 34.2115C-152.694 34.2115 -165.695 40.2591 -175.484 54.4355C-185.344 68.7164 -192.227 91.8834 -189.242 125.39C-185.77 164.359 -193.416 195.549 -208.578 217.506C-223.811 239.567 -246.326 251.639 -269.857 251.639C-293.389 251.639 -315.904 239.567 -331.137 217.506C-346.299 195.549 -353.945 164.359 -350.473 125.39C-347.488 91.8834 -354.37 68.7164 -364.231 54.4355C-374.02 40.2591 -387.021 34.2115 -399.005 34.2115C-410.988 34.2115 -423.989 40.2591 -433.778 54.4355C-443.639 68.7164 -450.521 91.8834 -447.536 125.39L-479.62 128.249C-483.092 89.2796 -475.446 58.0898 -460.284 36.1328C-445.051 14.0714 -422.536 2.00009 -399.005 2.00009C-375.473 2.00009 -352.958 14.0714 -337.725 36.1329C-322.563 58.0898 -314.917 89.2796 -318.389 128.249C-321.374 161.755 -314.492 184.922 -304.631 199.203C-294.842 213.38 -281.841 219.427 -269.857 219.427C-257.874 219.427 -244.873 213.38 -235.084 199.203C-225.223 184.922 -218.341 161.755 -221.326 128.249C-224.798 89.2796 -217.151 58.0898 -201.99 36.1329C-186.757 14.0714 -164.242 2.00011 -140.71 2.00011C-117.178 2.00011 -94.6638 14.0714 -79.4303 36.1329C-64.2691 58.0899 -56.6224 89.2796 -60.0944 128.249C-63.0798 161.755 -56.1974 184.922 -46.3364 199.203C-36.5476 213.38 -23.5468 219.427 -11.563 219.427C0.420894 219.427 13.4217 213.38 23.2105 199.203C33.0715 184.922 39.9538 161.755 36.9685 128.249C33.4965 89.2796 41.1432 58.0899 56.3045 36.1329C71.5379 14.0714 94.0526 2.00013 117.584 2.00013C141.116 2.00013 163.631 14.0715 178.864 36.1329C194.025 58.0899 201.672 89.2796 198.2 128.249C195.215 161.755 202.097 184.922 211.958 199.203C221.747 213.38 234.748 219.427 246.732 219.427C258.715 219.427 271.716 213.38 281.505 199.203C291.366 184.922 298.248 161.755 295.263 128.249C291.791 89.2796 299.438 58.0899 314.599 36.1329C329.832 14.0715 352.347 2.00015 375.879 2.00015C399.41 2.00016 421.925 14.0715 437.159 36.1329C452.32 58.0899 459.967 89.2797 456.495 128.249C453.509 161.755 460.392 184.922 470.253 199.203C480.041 213.38 493.042 219.427 505.026 219.427C517.01 219.427 530.011 213.38 539.799 199.203C549.66 184.922 556.543 161.755 553.557 128.249C550.085 89.2797 557.732 58.0899 572.893 36.1329C588.127 14.0715 610.642 2.00018 634.173 2.00018C657.705 2.00018 680.22 14.0715 695.453 36.1329C710.614 58.0899 718.261 89.2797 714.789 128.249C711.804 161.755 718.686 184.922 728.547 199.203C738.336 213.38 751.337 219.427 763.32 219.427C775.304 219.427 788.305 213.38 798.094 199.203Z\" stroke=\"#F06F46\" strokeWidth=\"2.68428\" />\n            </svg>\n            <div className=\"w-11/12 lg:w-96 mx-auto rounded-xl shadow-md p-8 bg-black-50\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-1/4 mx-auto mb-8 w-auto\" viewBox=\"0 0 120 115\" fill=\"none\">\n                    <path d=\"M15.177 50.2314C18.5251 43.119 26.0544 39.315 33.4505 40.3722C35.1322 40.6125 36.8071 41.1043 38.4244 41.8656C42.2516 43.6672 45.1209 46.6795 46.7902 50.2303C48.9285 54.7786 49.098 60.2104 46.7902 65.1129\" stroke=\"#F06F46\" strokeWidth=\"10.7652\" />\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M25.841 68.6017C31.8765 71.4429 39.0725 68.8533 41.9136 62.8178L51.6537 67.4028C47.0173 77.2518 36.2494 82.249 26.0501 79.9828L23.9534 84.4369L27.713 86.2067C28.9811 86.8036 29.5252 88.3155 28.9282 89.5836L27.2562 93.1355C26.6593 94.4036 25.1474 94.9477 23.8793 94.3507L20.1198 92.581L16.3798 100.526C15.9022 101.54 14.6927 101.976 13.6782 101.498L8.35074 98.9903C7.33626 98.5127 6.901 97.3032 7.37855 96.2887L11.1185 88.3438L7.28614 86.5397C6.01804 85.9428 5.47395 84.4309 6.07089 83.1628L7.74287 79.6109C8.33981 78.3428 9.85172 77.7988 11.1198 78.3957L14.9522 80.1997L17.0371 75.7706C8.71552 69.3695 5.66191 57.8332 10.317 47.9442L20.0571 52.5292C17.2159 58.5647 19.8055 65.7606 25.841 68.6017Z\" fill=\"#F06F46\" />\n                    <mask id=\"path-4-outside-1_113_3266\" maskUnits=\"userSpaceOnUse\" x=\"18.5872\" y=\"0.200684\" width=\"92\" height=\"72\" fill=\"black\">\n                        <rect fill=\"white\" x=\"18.5872\" y=\"0.200684\" width=\"92\" height=\"72\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M52.2221 16.8428C50.4924 16.5884 49.2964 14.9799 49.5509 13.2502L50.7783 4.90603C51.0327 3.17632 52.6412 1.98037 54.3709 2.23481C56.1006 2.48924 57.2966 4.09771 57.0421 5.82743L55.8147 14.1716C55.5603 15.9013 53.9518 17.0972 52.2221 16.8428ZM37.2687 15.5331C37.7691 17.2082 39.5328 18.1606 41.2079 17.6602C42.8831 17.1598 43.8355 15.3961 43.3351 13.7209L40.9211 5.63983C40.4207 3.96465 38.657 3.01231 36.9818 3.51272C35.3066 4.01313 34.3543 5.77679 34.8547 7.45197L37.2687 15.5331ZM58.6806 25.7991C58.4402 25.6908 58.1935 25.615 57.9452 25.5698C48.3723 22.2525 37.8333 25.6799 31.9876 33.7084C31.1228 34.885 30.3586 36.162 29.7132 37.533L29.7228 37.5375C24.3496 48.9522 29.2471 62.5615 40.6618 67.9348C52.0765 73.3081 65.6859 68.4106 71.0593 56.996L71.0664 56.9993C71.2915 56.5211 71.4986 56.0389 71.688 55.5537C71.7819 55.4208 71.874 55.2877 71.9644 55.1545L99.4995 58.5302C100.644 58.6705 101.774 58.1777 102.449 57.2438L107.32 51.8799C107.878 51.1089 108.059 50.1279 107.814 49.2085C107.569 48.289 106.923 47.5287 106.055 47.1379L58.6806 25.7991ZM61.3265 52.4142C64.1696 46.3741 61.5781 39.1729 55.538 36.3296C49.498 33.4864 42.2967 36.0778 39.4533 42.1178L39.4629 42.1222C36.6217 48.1577 39.2113 55.3537 45.2468 58.1948C51.2823 61.0359 58.4782 58.4464 61.3194 52.4109L61.3265 52.4142ZM32.1846 25.9204C30.9839 27.1913 28.9804 27.2482 27.7095 26.0476L21.5788 20.2557C20.308 19.055 20.251 17.0515 21.4517 15.7806C22.6523 14.5097 24.6559 14.4528 25.9267 15.6535L32.0574 21.4454C33.3283 22.646 33.3852 24.6496 32.1846 25.9204Z\" />\n                    </mask>\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M52.2221 16.8428C50.4924 16.5884 49.2964 14.9799 49.5509 13.2502L50.7783 4.90603C51.0327 3.17632 52.6412 1.98037 54.3709 2.23481C56.1006 2.48924 57.2966 4.09771 57.0421 5.82743L55.8147 14.1716C55.5603 15.9013 53.9518 17.0972 52.2221 16.8428ZM37.2687 15.5331C37.7691 17.2082 39.5328 18.1606 41.2079 17.6602C42.8831 17.1598 43.8355 15.3961 43.3351 13.7209L40.9211 5.63983C40.4207 3.96465 38.657 3.01231 36.9818 3.51272C35.3066 4.01313 34.3543 5.77679 34.8547 7.45197L37.2687 15.5331ZM58.6806 25.7991C58.4402 25.6908 58.1935 25.615 57.9452 25.5698C48.3723 22.2525 37.8333 25.6799 31.9876 33.7084C31.1228 34.885 30.3586 36.162 29.7132 37.533L29.7228 37.5375C24.3496 48.9522 29.2471 62.5615 40.6618 67.9348C52.0765 73.3081 65.6859 68.4106 71.0593 56.996L71.0664 56.9993C71.2915 56.5211 71.4986 56.0389 71.688 55.5537C71.7819 55.4208 71.874 55.2877 71.9644 55.1545L99.4995 58.5302C100.644 58.6705 101.774 58.1777 102.449 57.2438L107.32 51.8799C107.878 51.1089 108.059 50.1279 107.814 49.2085C107.569 48.289 106.923 47.5287 106.055 47.1379L58.6806 25.7991ZM61.3265 52.4142C64.1696 46.3741 61.5781 39.1729 55.538 36.3296C49.498 33.4864 42.2967 36.0778 39.4533 42.1178L39.4629 42.1222C36.6217 48.1577 39.2113 55.3537 45.2468 58.1948C51.2823 61.0359 58.4782 58.4464 61.3194 52.4109L61.3265 52.4142ZM32.1846 25.9204C30.9839 27.1913 28.9804 27.2482 27.7095 26.0476L21.5788 20.2557C20.308 19.055 20.251 17.0515 21.4517 15.7806C22.6523 14.5097 24.6559 14.4528 25.9267 15.6535L32.0574 21.4454C33.3283 22.646 33.3852 24.6496 32.1846 25.9204Z\" fill=\"#031030\" />\n                    <path d=\"M49.5509 13.2502L51.4254 13.5259L51.4254 13.5259L49.5509 13.2502ZM52.2221 16.8428L51.9464 18.7174L51.9464 18.7174L52.2221 16.8428ZM50.7783 4.90603L48.9037 4.63029L48.9037 4.63029L50.7783 4.90603ZM54.3709 2.23481L54.0952 4.10937L54.0952 4.10937L54.3709 2.23481ZM57.0421 5.82743L55.1676 5.55168L55.1676 5.55169L57.0421 5.82743ZM55.8147 14.1716L57.6893 14.4473L57.6893 14.4473L55.8147 14.1716ZM41.2079 17.6602L40.6656 15.8447L40.6656 15.8447L41.2079 17.6602ZM37.2687 15.5331L39.0841 14.9907L39.0841 14.9907L37.2687 15.5331ZM43.3351 13.7209L45.1505 13.1786L45.1505 13.1786L43.3351 13.7209ZM40.9211 5.63983L42.7365 5.09751L42.7365 5.09751L40.9211 5.63983ZM36.9818 3.51272L37.5241 5.32818L37.5241 5.32818L36.9818 3.51272ZM34.8547 7.45197L36.6702 6.90966L36.6702 6.90966L34.8547 7.45197ZM57.9452 25.5698L57.3248 27.3601L57.4625 27.4078L57.6059 27.4339L57.9452 25.5698ZM58.6806 25.7991L59.4588 24.0715L59.4588 24.0715L58.6806 25.7991ZM31.9876 33.7084L33.5143 34.8307L33.5193 34.8237L31.9876 33.7084ZM29.7132 37.533L27.9989 36.726L27.192 38.4403L28.9063 39.2473L29.7132 37.533ZM29.7228 37.5375L31.4371 38.3444L32.244 36.6301L30.5297 35.8232L29.7228 37.5375ZM71.0593 56.996L71.8662 55.2817L70.152 54.4748L69.345 56.189L71.0593 56.996ZM71.0664 56.9993L70.2594 58.7137L71.9737 59.5206L72.7807 57.8063L71.0664 56.9993ZM71.688 55.5537L70.1404 54.4606L70.007 54.6494L69.9229 54.8649L71.688 55.5537ZM71.9644 55.1545L72.1949 53.2738L71.0458 53.133L70.3961 54.0912L71.9644 55.1545ZM99.4995 58.5302L99.2689 60.4108L99.2689 60.4108L99.4995 58.5302ZM102.449 57.2438L101.047 55.97L100.976 56.0479L100.914 56.1331L102.449 57.2438ZM107.32 51.8799L108.723 53.1536L108.793 53.0757L108.855 52.9906L107.32 51.8799ZM106.055 47.1379L105.277 48.8654L105.277 48.8654L106.055 47.1379ZM61.3265 52.4142L60.5195 54.1285L62.2338 54.9355L63.0408 53.2211L61.3265 52.4142ZM55.538 36.3296L54.7311 38.0439L54.7311 38.0439L55.538 36.3296ZM39.4533 42.1178L37.7391 41.3108L36.932 43.0251L38.6464 43.8321L39.4533 42.1178ZM39.4629 42.1222L41.1771 42.9292L41.9841 41.2149L40.2698 40.4079L39.4629 42.1222ZM45.2468 58.1948L46.0538 56.4805L46.0538 56.4805L45.2468 58.1948ZM61.3194 52.4109L62.1263 50.6966L60.412 49.8896L59.6051 51.6039L61.3194 52.4109ZM27.7095 26.0476L29.0107 24.6703L29.0107 24.6703L27.7095 26.0476ZM32.1846 25.9204L30.8073 24.6192L30.8073 24.6192L32.1846 25.9204ZM21.5788 20.2557L20.2776 21.633L20.2777 21.633L21.5788 20.2557ZM21.4517 15.7806L20.0744 14.4794L20.0744 14.4794L21.4517 15.7806ZM25.9267 15.6535L27.2279 14.2762L27.2279 14.2762L25.9267 15.6535ZM32.0574 21.4454L30.7562 22.8227L30.7562 22.8227L32.0574 21.4454ZM47.6763 12.9744C47.2696 15.7394 49.1814 18.3106 51.9464 18.7174L52.4979 14.9682C51.8034 14.8661 51.3233 14.2204 51.4254 13.5259L47.6763 12.9744ZM48.9037 4.63029L47.6763 12.9744L51.4254 13.5259L52.6528 5.18178L48.9037 4.63029ZM54.6467 0.360245C51.8816 -0.046481 49.3105 1.86528 48.9037 4.63029L52.6528 5.18178C52.755 4.48735 53.4007 4.00722 54.0952 4.10937L54.6467 0.360245ZM58.9167 6.10318C59.3234 3.33817 57.4117 0.766969 54.6467 0.360244L54.0952 4.10937C54.7896 4.21152 55.2697 4.85726 55.1676 5.55168L58.9167 6.10318ZM57.6893 14.4473L58.9167 6.10317L55.1676 5.55169L53.9402 13.8958L57.6893 14.4473ZM51.9464 18.7174C54.7114 19.1241 57.2826 17.2123 57.6893 14.4473L53.9402 13.8958C53.838 14.5903 53.1923 15.0704 52.4979 14.9682L51.9464 18.7174ZM40.6656 15.8447C39.9931 16.0456 39.285 15.6633 39.0841 14.9907L35.4532 16.0754C36.2531 18.7532 39.0724 20.2756 41.7503 19.4756L40.6656 15.8447ZM41.5196 14.2632C41.7205 14.9358 41.3382 15.6438 40.6656 15.8447L41.7503 19.4756C44.4281 18.6757 45.9504 15.8564 45.1505 13.1786L41.5196 14.2632ZM39.1056 6.18214L41.5196 14.2632L45.1505 13.1786L42.7365 5.09751L39.1056 6.18214ZM37.5241 5.32818C38.1967 5.12728 38.9047 5.50961 39.1056 6.18214L42.7365 5.09751C41.9366 2.41968 39.1173 0.897328 36.4395 1.69725L37.5241 5.32818ZM36.6702 6.90966C36.4693 6.23713 36.8516 5.52908 37.5241 5.32818L36.4395 1.69725C33.7617 2.49718 32.2393 5.31646 33.0392 7.99429L36.6702 6.90966ZM39.0841 14.9907L36.6702 6.90966L33.0392 7.99429L35.4532 16.0754L39.0841 14.9907ZM57.6059 27.4339C57.7041 27.4517 57.8034 27.482 57.9025 27.5266L59.4588 24.0715C59.0771 23.8996 58.6829 23.7782 58.2846 23.7057L57.6059 27.4339ZM33.5193 34.8237C38.8798 27.4616 48.5485 24.3188 57.3248 27.3601L58.5656 23.7795C48.1962 20.1862 36.7869 23.8982 30.4559 32.5932L33.5193 34.8237ZM31.4275 38.34C32.0204 37.0805 32.7216 35.9089 33.5142 34.8306L30.4609 32.5862C29.5239 33.861 28.6968 35.2435 27.9989 36.726L31.4275 38.34ZM30.5297 35.8232L30.5202 35.8187L28.9063 39.2473L28.9158 39.2518L30.5297 35.8232ZM28.0085 36.7305C22.1896 49.092 27.4934 63.8301 39.8549 69.6491L41.4688 66.2205C31.0009 61.2929 26.5095 48.8124 31.4371 38.3444L28.0085 36.7305ZM39.8549 69.6491C52.2163 75.4681 66.9545 70.1644 72.7736 57.803L69.345 56.189C64.4173 66.6569 51.9367 71.1481 41.4688 66.2205L39.8549 69.6491ZM71.8733 55.285L71.8662 55.2817L70.2523 58.7103L70.2594 58.7137L71.8733 55.285ZM69.9229 54.8649C69.7491 55.3102 69.559 55.7529 69.3521 56.1924L72.7807 57.8063C73.0241 57.2892 73.2481 56.7677 73.4531 56.2426L69.9229 54.8649ZM70.3961 54.0912C70.3127 54.2143 70.2274 54.3374 70.1404 54.4606L73.2356 56.6469C73.3364 56.5042 73.4354 56.3611 73.5326 56.2178L70.3961 54.0912ZM99.7301 56.6495L72.1949 53.2738L71.7338 57.0351L99.2689 60.4108L99.7301 56.6495ZM100.914 56.1331C100.643 56.508 100.189 56.7058 99.7301 56.6495L99.2689 60.4108C101.098 60.6351 102.904 59.8473 103.984 58.3544L100.914 56.1331ZM105.917 50.6062L101.047 55.97L103.852 58.5175L108.723 53.1536L105.917 50.6062ZM105.983 49.6967C106.082 50.0659 106.009 50.4597 105.785 50.7692L108.855 52.9906C109.747 51.7582 110.037 50.19 109.645 48.7203L105.983 49.6967ZM105.277 48.8654C105.626 49.0223 105.885 49.3276 105.983 49.6967L109.645 48.7203C109.253 47.2505 108.22 46.035 106.833 45.4103L105.277 48.8654ZM57.9025 27.5266L105.277 48.8654L106.833 45.4103L59.4588 24.0715L57.9025 27.5266ZM63.0408 53.2211C66.3296 46.2343 63.3318 37.9042 56.345 34.6153L54.7311 38.0439C59.8243 40.4415 62.0096 46.514 59.6122 51.6072L63.0408 53.2211ZM56.345 34.6153C49.3582 31.3264 41.0281 34.324 37.7391 41.3108L41.1676 42.9248C43.5653 37.8316 49.6378 35.6463 54.7311 38.0439L56.345 34.6153ZM40.2698 40.4079L40.2603 40.4035L38.6464 43.8321L38.6559 43.8365L40.2698 40.4079ZM46.0538 56.4805C40.965 54.0851 38.7817 48.0179 41.1771 42.9292L37.7486 41.3153C34.4618 48.2975 37.4575 56.6223 44.4398 59.9091L46.0538 56.4805ZM59.6051 51.6039C57.2096 56.6926 51.1425 58.876 46.0538 56.4805L44.4398 59.9091C51.4221 63.1959 59.7468 60.2001 63.0337 53.2178L59.6051 51.6039ZM62.1334 50.6999L62.1263 50.6966L60.5124 54.1252L60.5195 54.1285L62.1334 50.6999ZM26.4083 27.4249C28.4398 29.3441 31.6426 29.2531 33.5619 27.2216L30.8073 24.6192C30.3253 25.1294 29.5209 25.1523 29.0107 24.6703L26.4083 27.4249ZM20.2777 21.633L26.4083 27.4249L29.0107 24.6703L22.88 18.8784L20.2777 21.633ZM20.0744 14.4794C18.1551 16.5109 18.2461 19.7137 20.2776 21.633L22.88 18.8784C22.3698 18.3964 22.347 17.592 22.829 17.0818L20.0744 14.4794ZM27.2279 14.2762C25.1964 12.3569 21.9937 12.4479 20.0744 14.4794L22.829 17.0818C23.311 16.5716 24.1153 16.5487 24.6256 17.0307L27.2279 14.2762ZM33.3586 20.0681L27.2279 14.2762L24.6256 17.0307L30.7562 22.8227L33.3586 20.0681ZM33.5619 27.2216C35.4811 25.1901 35.3901 21.9873 33.3586 20.0681L30.7562 22.8227C31.2664 23.3047 31.2893 24.109 30.8073 24.6192L33.5619 27.2216Z\" fill=\"#FFFCFA\" mask=\"url(#path-4-outside-1_113_3266)\" />\n                    <path d=\"M41.919 52.5204C40.7631 50.0615 38.7842 47.9841 36.1318 46.7356C35.0046 46.205 33.8462 45.8661 32.6888 45.7006C27.5669 44.9685 22.3601 47.6101 20.047 52.5239M51.6613 47.9403C49.4787 43.2975 45.719 39.3502 40.7168 36.9955C38.6095 36.0036 36.4181 35.359 34.212 35.0437C24.5418 33.6615 14.69 38.6278 10.307 47.939\" stroke=\"#FFFCFA\" strokeWidth=\"3.78947\" />\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M36.1323 46.7337C38.7847 47.9823 40.7635 50.0597 41.9195 52.5186L51.6618 47.9384C49.4792 43.2957 45.7195 39.3484 40.7173 36.9937C38.61 36.0017 36.4186 35.3572 34.2125 35.0419C24.5423 33.6597 14.6905 38.626 10.3075 47.9371L20.0475 52.5221C22.3606 47.6083 27.5674 44.9667 32.6893 45.6988C33.8467 45.8642 35.0051 46.2031 36.1323 46.7337Z\" fill=\"#F06F46\" />\n                </svg>\n\n                <Input type={\"text\"} label={\"Nombre de usuario\"} funcion={setUser} />\n                <Input type={\"password\"} label={\"Contraseña\"} funcion={setPass} />\n                {/* <div className=\"mb-6 col-span-1\">\n                    <div className=\"relative border border-black rounded-md px-3 py-2 shadow-sm  \">\n                        <label htmlFor=\"nombre\" className=\"absolute -top-2 left-2 bg-white -mt-px inline-block px-1  text-xs font-medium text-black\">Nombre de usuario</label>\n                        <input ref={user} required type=\"text\" name=\"nombre\" id=\"nombre\" className=\"block w-full border-0 p-0 text-black placeholder-black placeholder-opacity-50 focus:ring-0 ring-opacity-0 focus:outline-none sm:text-sm\" />\n                    </div>\n                </div>\n                <div className=\"mb-6 col-span-1\">\n                    <div className=\"relative border border-black rounded-md px-3 py-2 shadow-sm  \">\n                        <label htmlFor=\"password\" className=\"absolute -top-2 left-2 bg-white -mt-px inline-block px-1  text-xs font-medium text-black\">Contraseña</label>\n                        <input ref={pass} required type=\"password\" name=\"password\" id=\"password\" className=\"block w-full border-0 p-0 text-black placeholder-black placeholder-opacity-50 focus:ring-0 ring-opacity-0 focus:outline-none sm:text-sm\" />\n                    </div>\n                </div> */}\n\n                <button className=\"bg-orange py-3 px-8 rounded-3xl text-white text-base w-full\" onClick={iniciarSesion}>Iniciar Sesión</button>\n\n            </div>\n\n            <Alerta tipo={\"error\"} mensaje={mensaje} visible={visible} funcion={setVisible} duracion={2000} />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    url: state.url\n})\n\nexport default connect(mapStateToProps)(Login)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport Input from '../../../formComponents/Input'\n\nconst Programa = (props) => {\n\n    const [tema1, setTema1] = useState(\"\")\n    const [tema2, setTema2] = useState(\"\")\n    const [tema3, setTema3] = useState(\"\")\n    const [dia, setDia] = useState(\"\")\n    const [hora, setHora] = useState(\"\")\n    const [video, setVideo] = useState(\"\")\n\n    const renderVideo = () => {\n        fetch(`http://localhost:8000/?temaUno=${tema1}&temaDos=${tema2}&temaTres=${tema3}&dia=${dia}&hora=${hora}&tipo=Anuncio`, {\n            method: \"GET\",\n        }).then(response => response.json())\n            .then(r => {\n                console.log(r)\n                props.funcion(r.url)\n            })\n    }\n\n\n    return (\n        <div>\n            <Input label={\"Tema #1\"} funcion={setTema1} type={\"text\"} />\n            <Input label={\"Tema #2\"} funcion={setTema2} type={\"text\"} />\n            <Input label={\"Tema #3\"} funcion={setTema3} type={\"text\"} />\n            <Input label={\"Día del programa\"} funcion={setDia} type={\"text\"} />\n            <Input label={\"Horario de comienzo\"} funcion={setHora} type={\"text\"} />\n            <button className=\"bg-orange py-3 px-8 rounded-3xl text-white text-base\" onClick={renderVideo} >Crear story</button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\n\n\nexport default connect(mapStateToProps)(Programa)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport domtoimage from 'dom-to-image';\n\nexport const IntegranteStory = (props) => {\n\n    let { usuarios, storyEquipo } = props;\n    let preview;\n    console.log(props)\n\n    const [usuario, setUsuario] = useState(\"\")\n\n    useEffect(() => {\n        if (usuarios !== \"\") {\n            let aux = usuarios.filter(usuario => usuario._id === storyEquipo.integrante)\n            setUsuario(aux)\n        }\n\n    }, [storyEquipo.integrante])\n\n    useEffect(() => {\n        domtoimage.toJpeg(document.getElementById('storyEquipo'), { quality: 0.95 }).then(\n            function (dataUrl) {\n                preview = dataUrl;\n                document.getElementById(\"preview\").src = preview;\n            }\n        )\n\n    }\n    )\n    const descargarImg = () => {\n        domtoimage.toJpeg(document.getElementById('storyEquipo'), { quality: 0.95 })\n            .then(function (dataUrl) {\n                /*  console.log(dataUrl) */\n                var link = document.createElement('a');\n                link.download = `story ${usuario[0].nombreCompleto}.jpeg`;\n                link.href = dataUrl;\n                link.click();\n            });\n    }\n\n    return (\n        <div>\n            <img className=\"w-full md:w-1/3 mx-auto \" id=\"preview\" src={preview} />\n            <div className=\"w-full md:w-10/12 mx-auto pt-4\">\n                <button id=\"btn-final-story\" className=\"btn disabled:opacity-75 w-full md:w-auto  bg-orange py-2 px-4 rounded-3xl text-white text-base\" id=\"btn-download\" download=\"post.jpg\" onClick={descargarImg}>Descargar </button>\n            </div>\n            <div className=\"relative \" style={{ width: '1080px', height: '1920px' }}>\n                <div className=\" absolute bg-black-50 top-0 left-0 z-10\" style={{ width: '1080px', height: '1920px' }} ></div>\n                <div className={storyEquipo.darkMode === true ? 'dark absolute top-0 left-0' : 'absolute top-0 left-0'}>\n                    <div id=\"storyEquipo\" className=\"bg-white dark:bg-black relative\" style={{ width: '1080px', height: '1920px' }}>\n                        <svg className=\"absolute top-0 left-0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"123\" height=\"840\" viewBox=\"0 0 123 840\" fill=\"none\">\n                            <mask id=\"path-1-inside-1_362_3209\" fill=\"white\">\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M122.271 -101.918L82.5544 -141.635L17.1355 -76.2164L-48.2824 -141.634L-87.9994 -101.917L-22.5815 -36.4994L-88 28.9191L-48.283 68.6361L17.1355 3.21761L82.555 68.6371L122.272 28.9201L56.8525 -36.4994L122.271 -101.918Z\" />\n                            </mask>\n                            <path d=\"M82.5544 -141.635L84.2064 -143.287L82.5544 -144.939L80.9023 -143.287L82.5544 -141.635ZM122.271 -101.918L123.923 -100.266L125.575 -101.918L123.923 -103.57L122.271 -101.918ZM17.1355 -76.2164L15.4834 -74.5643L17.1355 -72.9123L18.7875 -74.5643L17.1355 -76.2164ZM-48.2824 -141.634L-46.6304 -143.286L-48.2824 -144.938L-49.9345 -143.286L-48.2824 -141.634ZM-87.9994 -101.917L-89.6515 -103.569L-91.3035 -101.917L-89.6515 -100.265L-87.9994 -101.917ZM-22.5815 -36.4994L-20.9295 -34.8473L-19.2774 -36.4994L-20.9295 -38.1514L-22.5815 -36.4994ZM-88 28.9191L-89.6521 27.267L-91.3041 28.9191L-89.6521 30.5711L-88 28.9191ZM-48.283 68.6361L-49.9351 70.2881L-48.283 71.9402L-46.631 70.2881L-48.283 68.6361ZM17.1355 3.21761L18.7875 1.56555L17.1355 -0.0864964L15.4834 1.56555L17.1355 3.21761ZM82.555 68.6371L80.9029 70.2891L82.555 71.9412L84.207 70.2891L82.555 68.6371ZM122.272 28.9201L123.924 30.5722L125.576 28.9201L123.924 27.2681L122.272 28.9201ZM56.8525 -36.4994L55.2004 -38.1514L53.5483 -36.4994L55.2004 -34.8473L56.8525 -36.4994ZM80.9023 -139.983L120.619 -100.266L123.923 -103.57L84.2064 -143.287L80.9023 -139.983ZM18.7875 -74.5643L84.2064 -139.983L80.9023 -143.287L15.4834 -77.8684L18.7875 -74.5643ZM-49.9345 -139.982L15.4834 -74.5643L18.7875 -77.8684L-46.6304 -143.286L-49.9345 -139.982ZM-86.3474 -100.265L-46.6304 -139.982L-49.9345 -143.286L-89.6515 -103.569L-86.3474 -100.265ZM-20.9295 -38.1514L-86.3474 -103.569L-89.6515 -100.265L-24.2336 -34.8473L-20.9295 -38.1514ZM-86.3479 30.5711L-20.9295 -34.8473L-24.2336 -38.1514L-89.6521 27.267L-86.3479 30.5711ZM-46.631 66.984L-86.3479 27.267L-89.6521 30.5711L-49.9351 70.2881L-46.631 66.984ZM15.4834 1.56555L-49.9351 66.984L-46.631 70.2881L18.7875 4.86966L15.4834 1.56555ZM84.207 66.985L18.7875 1.56555L15.4834 4.86966L80.9029 70.2891L84.207 66.985ZM120.62 27.2681L80.9029 66.985L84.207 70.2891L123.924 30.5722L120.62 27.2681ZM55.2004 -34.8473L120.62 30.5722L123.924 27.2681L58.5045 -38.1514L55.2004 -34.8473ZM120.619 -103.57L55.2004 -38.1514L58.5045 -34.8473L123.923 -100.266L120.619 -103.57Z\" fill=\"#F06F46\" mask=\"url(#path-1-inside-1_362_3209)\" />\n                            <mask id=\"path-3-inside-2_362_3209\" fill=\"white\">\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M122.271 155.081L82.5544 115.364L17.1355 180.783L-48.2824 115.365L-87.9994 155.082L-22.5815 220.5L-88 285.918L-48.283 325.635L17.1355 260.217L82.555 325.636L122.272 285.919L56.8525 220.5L122.271 155.081Z\" />\n                            </mask>\n                            <path d=\"M82.5544 115.364L84.2064 113.712L82.5544 112.06L80.9023 113.712L82.5544 115.364ZM122.271 155.081L123.923 156.733L125.575 155.081L123.923 153.429L122.271 155.081ZM17.1355 180.783L15.4834 182.435L17.1355 184.087L18.7875 182.435L17.1355 180.783ZM-48.2824 115.365L-46.6304 113.713L-48.2824 112.061L-49.9345 113.713L-48.2824 115.365ZM-87.9994 155.082L-89.6515 153.43L-91.3035 155.082L-89.6515 156.734L-87.9994 155.082ZM-22.5815 220.5L-20.9295 222.152L-19.2774 220.5L-20.9295 218.848L-22.5815 220.5ZM-88 285.918L-89.6521 284.266L-91.3041 285.918L-89.6521 287.57L-88 285.918ZM-48.283 325.635L-49.9351 327.287L-48.283 328.939L-46.631 327.287L-48.283 325.635ZM17.1355 260.217L18.7875 258.565L17.1355 256.913L15.4834 258.565L17.1355 260.217ZM82.555 325.636L80.9029 327.288L82.555 328.94L84.207 327.288L82.555 325.636ZM122.272 285.919L123.924 287.571L125.576 285.919L123.924 284.267L122.272 285.919ZM56.8525 220.5L55.2004 218.848L53.5483 220.5L55.2004 222.152L56.8525 220.5ZM80.9023 117.016L120.619 156.733L123.923 153.429L84.2064 113.712L80.9023 117.016ZM18.7875 182.435L84.2064 117.016L80.9023 113.712L15.4834 179.131L18.7875 182.435ZM-49.9345 117.017L15.4834 182.435L18.7875 179.131L-46.6304 113.713L-49.9345 117.017ZM-86.3474 156.734L-46.6304 117.017L-49.9345 113.713L-89.6515 153.43L-86.3474 156.734ZM-20.9295 218.848L-86.3474 153.43L-89.6515 156.734L-24.2336 222.152L-20.9295 218.848ZM-86.3479 287.57L-20.9295 222.152L-24.2336 218.848L-89.6521 284.266L-86.3479 287.57ZM-46.631 323.983L-86.3479 284.266L-89.6521 287.57L-49.9351 327.287L-46.631 323.983ZM15.4834 258.565L-49.9351 323.983L-46.631 327.287L18.7875 261.869L15.4834 258.565ZM84.207 323.984L18.7875 258.565L15.4834 261.869L80.9029 327.288L84.207 323.984ZM120.62 284.267L80.9029 323.984L84.207 327.288L123.924 287.571L120.62 284.267ZM55.2004 222.152L120.62 287.571L123.924 284.267L58.5045 218.848L55.2004 222.152ZM120.619 153.429L55.2004 218.848L58.5045 222.152L123.923 156.733L120.619 153.429Z\" fill=\"#F06F46\" mask=\"url(#path-3-inside-2_362_3209)\" />\n                            <mask id=\"path-5-inside-3_362_3209\" fill=\"white\">\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M122.271 412.081L82.5544 372.364L17.1355 437.782L-48.2824 372.365L-87.9994 412.082L-22.5815 477.499L-88 542.918L-48.283 582.635L17.1355 517.216L82.555 582.636L122.272 542.919L56.8525 477.499L122.271 412.081Z\" />\n                            </mask>\n                            <path d=\"M82.5544 372.364L84.2064 370.711L82.5544 369.059L80.9023 370.711L82.5544 372.364ZM122.271 412.081L123.923 413.733L125.575 412.081L123.923 410.428L122.271 412.081ZM17.1355 437.782L15.4834 439.434L17.1355 441.087L18.7875 439.434L17.1355 437.782ZM-48.2824 372.365L-46.6304 370.712L-48.2824 369.06L-49.9345 370.712L-48.2824 372.365ZM-87.9994 412.082L-89.6515 410.429L-91.3035 412.082L-89.6515 413.734L-87.9994 412.082ZM-22.5815 477.499L-20.9295 479.151L-19.2774 477.499L-20.9295 475.847L-22.5815 477.499ZM-88 542.918L-89.6521 541.266L-91.3041 542.918L-89.6521 544.57L-88 542.918ZM-48.283 582.635L-49.9351 584.287L-48.283 585.939L-46.631 584.287L-48.283 582.635ZM17.1355 517.216L18.7875 515.564L17.1355 513.912L15.4834 515.564L17.1355 517.216ZM82.555 582.636L80.9029 584.288L82.555 585.94L84.207 584.288L82.555 582.636ZM122.272 542.919L123.924 544.571L125.576 542.919L123.924 541.267L122.272 542.919ZM56.8525 477.499L55.2004 475.847L53.5484 477.499L55.2004 479.151L56.8525 477.499ZM80.9023 374.016L120.619 413.733L123.923 410.428L84.2064 370.711L80.9023 374.016ZM18.7875 439.434L84.2064 374.016L80.9023 370.711L15.4834 436.13L18.7875 439.434ZM-49.9345 374.017L15.4834 439.434L18.7875 436.13L-46.6304 370.712L-49.9345 374.017ZM-86.3474 413.734L-46.6304 374.017L-49.9345 370.712L-89.6515 410.429L-86.3474 413.734ZM-20.9295 475.847L-86.3474 410.429L-89.6515 413.734L-24.2336 479.151L-20.9295 475.847ZM-86.3479 544.57L-20.9295 479.151L-24.2336 475.847L-89.6521 541.266L-86.3479 544.57ZM-46.631 580.983L-86.3479 541.266L-89.6521 544.57L-49.9351 584.287L-46.631 580.983ZM15.4834 515.564L-49.9351 580.983L-46.631 584.287L18.7875 518.868L15.4834 515.564ZM84.207 580.984L18.7875 515.564L15.4834 518.868L80.9029 584.288L84.207 580.984ZM120.62 541.267L80.9029 580.984L84.207 584.288L123.924 544.571L120.62 541.267ZM55.2004 479.151L120.62 544.571L123.924 541.267L58.5045 475.847L55.2004 479.151ZM120.619 410.428L55.2004 475.847L58.5045 479.151L123.923 413.733L120.619 410.428Z\" fill=\"#F06F46\" mask=\"url(#path-5-inside-3_362_3209)\" />\n                            <mask id=\"path-7-inside-4_362_3209\" fill=\"white\">\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M122.271 669.08L82.5544 629.363L17.1355 694.782L-48.2824 629.364L-87.9994 669.081L-22.5815 734.499L-88 799.917L-48.283 839.634L17.1355 774.216L82.555 839.635L122.272 799.918L56.8525 734.499L122.271 669.08Z\" />\n                            </mask>\n                            <path d=\"M82.5544 629.363L84.2064 627.711L82.5544 626.059L80.9023 627.711L82.5544 629.363ZM122.271 669.08L123.923 670.732L125.575 669.08L123.923 667.428L122.271 669.08ZM17.1355 694.782L15.4834 696.434L17.1355 698.086L18.7875 696.434L17.1355 694.782ZM-48.2824 629.364L-46.6304 627.712L-48.2824 626.06L-49.9345 627.712L-48.2824 629.364ZM-87.9994 669.081L-89.6515 667.429L-91.3035 669.081L-89.6515 670.733L-87.9994 669.081ZM-22.5815 734.499L-20.9295 736.151L-19.2774 734.499L-20.9295 732.847L-22.5815 734.499ZM-88 799.917L-89.6521 798.265L-91.3041 799.917L-89.6521 801.569L-88 799.917ZM-48.283 839.634L-49.9351 841.286L-48.283 842.938L-46.631 841.286L-48.283 839.634ZM17.1355 774.216L18.7875 772.564L17.1355 770.912L15.4834 772.564L17.1355 774.216ZM82.555 839.635L80.9029 841.287L82.555 842.939L84.207 841.287L82.555 839.635ZM122.272 799.918L123.924 801.57L125.576 799.918L123.924 798.266L122.272 799.918ZM56.8525 734.499L55.2004 732.847L53.5483 734.499L55.2004 736.151L56.8525 734.499ZM80.9023 631.015L120.619 670.732L123.923 667.428L84.2064 627.711L80.9023 631.015ZM18.7875 696.434L84.2064 631.015L80.9023 627.711L15.4834 693.13L18.7875 696.434ZM-49.9345 631.016L15.4834 696.434L18.7875 693.13L-46.6304 627.712L-49.9345 631.016ZM-86.3474 670.733L-46.6304 631.016L-49.9345 627.712L-89.6515 667.429L-86.3474 670.733ZM-20.9295 732.847L-86.3474 667.429L-89.6515 670.733L-24.2336 736.151L-20.9295 732.847ZM-86.3479 801.569L-20.9295 736.151L-24.2336 732.847L-89.6521 798.265L-86.3479 801.569ZM-46.631 837.982L-86.3479 798.265L-89.6521 801.569L-49.9351 841.286L-46.631 837.982ZM15.4834 772.564L-49.9351 837.982L-46.631 841.286L18.7875 775.868L15.4834 772.564ZM84.207 837.983L18.7875 772.564L15.4834 775.868L80.9029 841.287L84.207 837.983ZM120.62 798.266L80.9029 837.983L84.207 841.287L123.924 801.57L120.62 798.266ZM55.2004 736.151L120.62 801.57L123.924 798.266L58.5045 732.847L55.2004 736.151ZM120.619 667.428L55.2004 732.847L58.5045 736.151L123.923 670.732L120.619 667.428Z\" fill=\"#F06F46\" mask=\"url(#path-7-inside-4_362_3209)\" />\n                        </svg>\n                        {storyEquipo.darkMode === true ?\n                            <svg className=\"absolute bottom-16 right-0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"112\" height=\"927\" viewBox=\"0 0 112 927\" fill=\"none\">\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M138.47 34.2819C128.515 27.4079 112.365 22.6102 89.0076 24.6912L87.0149 2.32532C114.18 -0.0950142 135.922 5.23546 151.229 15.8044C166.608 26.4236 175.022 42.1186 175.022 58.5224C175.022 74.9263 166.608 90.6212 151.229 101.24C135.922 111.809 114.18 117.14 87.0149 114.719C63.6575 112.638 47.5078 117.436 37.5526 124.31C27.6703 131.134 23.4545 140.197 23.4545 148.551C23.4545 156.905 27.6703 165.967 37.5526 172.791C47.5078 179.665 63.6575 184.463 87.0149 182.382C114.18 179.962 135.922 185.292 151.229 195.861C166.608 206.48 175.022 222.175 175.022 238.579C175.022 254.983 166.608 270.678 151.229 281.297C135.922 291.866 114.18 297.196 87.0149 294.776C63.6575 292.695 47.5078 297.493 37.5526 304.367C27.6703 311.19 23.4545 320.253 23.4545 328.607C23.4545 336.961 27.6703 346.024 37.5526 352.848C47.5078 359.722 63.6574 364.519 87.0149 362.438C114.18 360.018 135.922 365.348 151.229 375.917C166.608 386.537 175.022 402.232 175.022 418.635C175.022 435.039 166.608 450.734 151.229 461.353C135.922 471.922 114.18 477.253 87.0149 474.833C63.6574 472.751 47.5078 477.549 37.5526 484.423C27.6703 491.247 23.4545 500.31 23.4545 508.664C23.4545 517.018 27.6703 526.08 37.5526 532.904C47.5078 539.778 63.6574 544.576 87.0148 542.495C114.18 540.075 135.922 545.405 151.229 555.974C166.608 566.593 175.022 582.288 175.022 598.692C175.022 615.096 166.608 630.791 151.229 641.41C135.922 651.979 114.18 657.309 87.0148 654.889C63.6574 652.808 47.5078 657.606 37.5526 664.48C27.6703 671.304 23.4545 680.366 23.4545 688.72C23.4545 697.074 27.6702 706.137 37.5526 712.961C47.5078 719.835 63.6574 724.632 87.0148 722.551C114.18 720.131 135.922 725.462 151.229 736.03C166.608 746.65 175.022 762.345 175.022 778.748C175.022 795.152 166.608 810.847 151.229 821.467C135.922 832.035 114.18 837.366 87.0148 834.946C63.6574 832.865 47.5077 837.662 37.5526 844.536C27.6703 851.36 23.4545 860.423 23.4545 868.777C23.4545 877.131 27.6703 886.193 37.5526 893.017C47.5077 899.891 63.6574 904.689 87.0148 902.608L89.0076 924.974C61.8423 927.394 40.1 922.064 24.7938 911.495C9.41486 900.876 0.999972 885.181 0.999973 868.777C0.999973 852.373 9.41486 836.678 24.7938 826.059C40.1 815.49 61.8423 810.159 89.0076 812.58C112.365 814.661 128.515 809.863 138.47 802.989C148.352 796.165 152.568 787.102 152.568 778.748C152.568 770.395 148.352 761.332 138.47 754.508C128.515 747.634 112.365 742.836 89.0076 744.917C61.8423 747.338 40.1 742.007 24.7939 731.438C9.41488 720.819 0.99998 705.124 0.99998 688.72C0.999981 672.316 9.41488 656.621 24.7939 646.002C40.1 635.433 61.8423 630.103 89.0076 632.523C112.365 634.604 128.515 629.807 138.47 622.933C148.352 616.109 152.568 607.046 152.568 598.692C152.568 590.338 148.352 581.275 138.47 574.451C128.515 567.577 112.365 562.78 89.0076 564.861C61.8423 567.281 40.1 561.951 24.7939 551.382C9.41487 540.763 0.999988 525.068 0.999988 508.664C0.999989 492.26 9.41488 476.565 24.7939 465.946C40.1 455.377 61.8423 450.046 89.0076 452.467C112.365 454.548 128.515 449.75 138.47 442.876C148.352 436.052 152.568 426.989 152.568 418.635C152.568 410.282 148.352 401.219 138.47 394.395C128.515 387.521 112.365 382.723 89.0076 384.804C61.8423 387.225 40.1 381.894 24.7939 371.325C9.41488 360.706 0.999995 345.011 0.999996 328.607C0.999997 312.203 9.41489 296.508 24.7939 285.889C40.1 275.32 61.8423 269.99 89.0076 272.41C112.365 274.491 128.515 269.693 138.47 262.819C148.352 255.996 152.568 246.933 152.568 238.579C152.568 230.225 148.352 221.162 138.47 214.338C128.515 207.464 112.365 202.667 89.0076 204.748C61.8424 207.168 40.1 201.838 24.7939 191.269C9.41489 180.649 1 164.955 1 148.551C1 132.147 9.41489 116.452 24.7939 105.833C40.1 95.2637 61.8424 89.9332 89.0076 92.3536C112.365 94.4347 128.515 89.637 138.47 82.7629C148.352 75.9391 152.568 66.8763 152.568 58.5224C152.568 50.1685 148.352 41.1057 138.47 34.2819Z\" stroke=\"#FFFCFA\" strokeWidth=\"1.87121\" />\n                            </svg> :\n                            <svg className=\"absolute bottom-16 right-0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"112\" height=\"927\" viewBox=\"0 0 112 927\" fill=\"none\">\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M138.47 34.2819C128.515 27.4079 112.365 22.6102 89.0076 24.6912L87.0149 2.32532C114.18 -0.0950142 135.922 5.23546 151.229 15.8044C166.608 26.4236 175.022 42.1186 175.022 58.5224C175.022 74.9263 166.608 90.6212 151.229 101.24C135.922 111.809 114.18 117.14 87.0149 114.719C63.6575 112.638 47.5078 117.436 37.5526 124.31C27.6703 131.134 23.4545 140.197 23.4545 148.551C23.4545 156.905 27.6703 165.967 37.5526 172.791C47.5078 179.665 63.6575 184.463 87.0149 182.382C114.18 179.962 135.922 185.292 151.229 195.861C166.608 206.48 175.022 222.175 175.022 238.579C175.022 254.983 166.608 270.678 151.229 281.297C135.922 291.866 114.18 297.196 87.0149 294.776C63.6575 292.695 47.5078 297.493 37.5526 304.367C27.6703 311.19 23.4545 320.253 23.4545 328.607C23.4545 336.961 27.6703 346.024 37.5526 352.848C47.5078 359.722 63.6574 364.519 87.0149 362.438C114.18 360.018 135.922 365.348 151.229 375.917C166.608 386.537 175.022 402.232 175.022 418.635C175.022 435.039 166.608 450.734 151.229 461.353C135.922 471.922 114.18 477.253 87.0149 474.833C63.6574 472.751 47.5078 477.549 37.5526 484.423C27.6703 491.247 23.4545 500.31 23.4545 508.664C23.4545 517.018 27.6703 526.08 37.5526 532.904C47.5078 539.778 63.6574 544.576 87.0148 542.495C114.18 540.075 135.922 545.405 151.229 555.974C166.608 566.593 175.022 582.288 175.022 598.692C175.022 615.096 166.608 630.791 151.229 641.41C135.922 651.979 114.18 657.309 87.0148 654.889C63.6574 652.808 47.5078 657.606 37.5526 664.48C27.6703 671.304 23.4545 680.366 23.4545 688.72C23.4545 697.074 27.6702 706.137 37.5526 712.961C47.5078 719.835 63.6574 724.632 87.0148 722.551C114.18 720.131 135.922 725.462 151.229 736.03C166.608 746.65 175.022 762.345 175.022 778.748C175.022 795.152 166.608 810.847 151.229 821.467C135.922 832.035 114.18 837.366 87.0148 834.946C63.6574 832.865 47.5077 837.662 37.5526 844.536C27.6703 851.36 23.4545 860.423 23.4545 868.777C23.4545 877.131 27.6703 886.193 37.5526 893.017C47.5077 899.891 63.6574 904.689 87.0148 902.608L89.0076 924.974C61.8423 927.394 40.1 922.064 24.7938 911.495C9.41486 900.876 0.999972 885.181 0.999973 868.777C0.999973 852.373 9.41486 836.678 24.7938 826.059C40.1 815.49 61.8423 810.159 89.0076 812.58C112.365 814.661 128.515 809.863 138.47 802.989C148.352 796.165 152.568 787.102 152.568 778.748C152.568 770.395 148.352 761.332 138.47 754.508C128.515 747.634 112.365 742.836 89.0076 744.917C61.8423 747.338 40.1 742.007 24.7939 731.438C9.41488 720.819 0.99998 705.124 0.99998 688.72C0.999981 672.316 9.41488 656.621 24.7939 646.002C40.1 635.433 61.8423 630.103 89.0076 632.523C112.365 634.604 128.515 629.807 138.47 622.933C148.352 616.109 152.568 607.046 152.568 598.692C152.568 590.338 148.352 581.275 138.47 574.451C128.515 567.577 112.365 562.78 89.0076 564.861C61.8423 567.281 40.1 561.951 24.7939 551.382C9.41487 540.763 0.999988 525.068 0.999988 508.664C0.999989 492.26 9.41488 476.565 24.7939 465.946C40.1 455.377 61.8423 450.046 89.0076 452.467C112.365 454.548 128.515 449.75 138.47 442.876C148.352 436.052 152.568 426.989 152.568 418.635C152.568 410.282 148.352 401.219 138.47 394.395C128.515 387.521 112.365 382.723 89.0076 384.804C61.8423 387.225 40.1 381.894 24.7939 371.325C9.41488 360.706 0.999995 345.011 0.999996 328.607C0.999997 312.203 9.41489 296.508 24.7939 285.889C40.1 275.32 61.8423 269.99 89.0076 272.41C112.365 274.491 128.515 269.693 138.47 262.819C148.352 255.996 152.568 246.933 152.568 238.579C152.568 230.225 148.352 221.162 138.47 214.338C128.515 207.464 112.365 202.667 89.0076 204.748C61.8424 207.168 40.1 201.838 24.7939 191.269C9.41489 180.649 1 164.955 1 148.551C1 132.147 9.41489 116.452 24.7939 105.833C40.1 95.2637 61.8424 89.9332 89.0076 92.3536C112.365 94.4347 128.515 89.637 138.47 82.7629C148.352 75.9391 152.568 66.8763 152.568 58.5224C152.568 50.1685 148.352 41.1057 138.47 34.2819Z\" stroke=\"#171717\" strokeWidth=\"1.87121\" />\n                            </svg>\n                        }\n\n                        {(usuario[0] !== undefined) ?\n                            <div className=\"flex flex-col w-full items-center\" style={{ lineHeight: '200%' }}>\n                                <div className=\"mb-14 mt-80 overflow-hidden\" style={{ width: '500px', height: '500px', borderRadius: '500px', backgroundImage: `url(${usuario[0].avatar})`, backgroundPosition: 'center center', backgroundRepeat: 'no-repeat', backgroundSize: '502px 502px' }}  ></div>\n                                {/* <img className=\"mb-14 mt-80\" src={usuario[0].avatar} style={{ width: '500px', height: '500px', borderRadius: '100%' }} /> */}\n                                <p className=\"text-black dark:text-white font-body font-bold mb-14\" style={{ fontSize: '80px' }}>{props.palabra}</p>\n                                <p className=\"text-black dark:text-white font-body font-bold mb-14\" style={{ fontSize: '80px' }}>{usuario[0].nombreCompleto}</p>\n                                <p className=\"text-black dark:text-white font-body font-regular mb-14\" style={{ fontSize: '50px' }}>{usuario[0].rol}</p>\n                                <p className=\"text-black dark:text-white font-body font-regular italic mb-14\" style={{ fontSize: '50px' }}>{usuario[0].apodo}</p>\n                                <p className=\"text-black dark:text-white font-body font-regular mt-32 mx-40 text-center\" style={{ fontSize: '50px', lineHeight: '65px' }}>{storyEquipo.descripcion}</p>\n                            </div>\n                            : null}\n                    </div>\n                </div >\n\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    usuarios: state.usuarios,\n    storyEquipo: state.storyEquipo,\n})\n\n\n\nexport default connect(mapStateToProps)(IntegranteStory)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Input from '../../../formComponents/Input'\nimport Switch from '../../../formComponents/Switch'\n\nexport const FormIntegranteStory = (props) => {\n\n    let { usuarios } = props\n\n    const [usuariosSelect, setUsuariosSelect] = useState([])\n    let integrante;\n    let darkMode = false;\n    let descripcion;\n\n    let guardarDatos = (integrante, darkMode, descripcion) => {\n        props.dispatch({\n            type: \"STORY_EQUIPO\", payload: { \"integrante\": integrante, \"darkMode\": darkMode, \"descripcion\": descripcion }\n        });\n    }\n\n    const guardarIntegrante = (recibido) => {\n        integrante = recibido\n        guardarDatos(integrante, darkMode, descripcion)\n    }\n\n    const guardarDarkMode = (recibido) => {\n        darkMode = recibido\n        guardarDatos(integrante, darkMode, descripcion)\n    }\n\n    const guardarDescripcion = (recibido) => {\n        descripcion = recibido\n        guardarDatos(integrante, darkMode, descripcion)\n    }\n\n\n\n    useEffect(() => {\n\n        if (usuarios !== \"\") {\n            let aux = usuarios.map((u, i) => {\n                let newUser = {};\n                newUser = { nombre: u.nombreCompleto, _id: u._id, key: u._id }\n                return newUser\n            })\n            console.log(aux)\n            setUsuariosSelect(aux)\n        }\n    }, [usuarios])\n\n    return (\n\n        <div>\n            <Input type={\"select\"} label={\"Integrante\"} defaultValue={\"Elegí un integrante\"} opciones={usuariosSelect} funcion={guardarIntegrante} />\n            <Switch funcion={guardarDarkMode} />\n            <Input type={\"textarea\"} label={\"Mini descripción\"} funcion={guardarDescripcion} />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    usuarios: state.usuarios,\n})\n\n\n\nexport default connect(mapStateToProps)(FormIntegranteStory)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Input from '../../../formComponents/Input'\nimport Axios from 'axios'\nimport Alerta from '../../Alerta'\n\nconst FormFinalStory = (props) => {\n\n    const [mensaje, setMensaje] = useState(\"\")\n    const [tipoMensaje, setTipoMensaje] = useState(\"\")\n    const [visible, setVisible] = useState(0)\n    const [duracion, setDuracion] = useState(0)\n\n    let { url, deportes } = props\n\n    const [momento, setMomento] = useState(\"\")\n    const [eqLocal, setEqLocal] = useState(\"\")\n    const [eqVisitante, setEqVisitante] = useState(\"\")\n    const [puntajeLocal, setPuntajeLocal] = useState(\"\")\n    const [puntajeVisitante, setPuntajeVisitante] = useState(\"\")\n    const [imgPartido, setImgPartido] = useState(\"\")\n    const [equipos, setEquipos] = useState([])\n    const [equiposFiltrados, setEquiposFiltrados] = useState([])\n    const [deporteElegido, setDeporteElegido] = useState(\"\");\n\n    useEffect(() => {\n        if (momento !== \"\" && deporteElegido !== \"\" && eqLocal !== \"\" && eqVisitante !== \"\" && puntajeVisitante !== \"\" && puntajeVisitante !== \"\" && imgPartido !== \"\") {\n            document.getElementById(\"btn-render\").disabled = false;\n            document.getElementById(\"btn-render\").style.opacity = \"1\";\n        } else {\n            document.getElementById(\"btn-render\").disabled = true;\n            document.getElementById(\"btn-render\").style.opacity = \"0.7\";\n        }\n    }, [deporteElegido, eqLocal, eqVisitante, puntajeLocal, puntajeVisitante, imgPartido])\n\n    useEffect(() => {\n        fetch(`${url}/listarEquipos`, {\n            method: 'GET',\n        }).then(r => r.json())\n            .then(equipos => {\n                console.log(equipos)\n                setEquipos(equipos);\n                setEquiposFiltrados(equipos)\n            }).then(() => {\n                /* buscarPorDeporte(\"61785cfa21299d6da5a1e2d7\"); */\n            }\n            )\n    }, [])\n\n    let buscarPorDeporte = (recibido) => {\n        console.log(recibido)\n        setDeporteElegido(deportes.filter(d => d._id === recibido))\n        setEquiposFiltrados(equipos.filter(eq => eq.deporte === recibido))\n    }\n\n\n    const guardarEqLocal = (recibido) => {\n        console.log(recibido)\n        setEqLocal(equipos.filter(equipo => equipo._id === recibido))\n\n    }\n    const guardarEqVisitante = (recibido) => {\n        console.log(recibido)\n        setEqVisitante(equipos.filter(equipo => equipo._id === recibido))\n    }\n    const guardarPuntajeLocal = (recibido) => {\n        setPuntajeLocal(recibido)\n    }\n    const guardarPuntajeVisitante = (recibido) => {\n        setPuntajeVisitante(recibido)\n    }\n\n    const subirFoto = (recibido) => {\n        setMensaje(\"Subiendo foto\")\n        setDuracion(2000)\n        setTipoMensaje(\"loading\")\n        setVisible(1)\n        const file = recibido.target.files[0];\n        const formData = new FormData;\n        formData.append(\"file\", file);\n        formData.append(\"upload_preset\", \"fotosIntegrantes\")\n\n        Axios.post(\"https://api.cloudinary.com/v1_1/isita/image/upload\", formData).then((r) => {\n            setMensaje(\"Imagen subida con exito\")\n            setTipoMensaje(\"exito\")\n            setVisible(1)\n            setImgPartido(r.data.url)\n\n        })\n    }\n\n    const renderVideo = () => {\n        setMensaje(\"Creando video. Puede tardar unos segundos...\")\n        setDuracion(30000)\n        setTipoMensaje(\"loading\")\n        setVisible(1)\n        fetch(`http://localhost:8000/?momento=${momento}&equipo1=${eqLocal[0].nombre}&equipo2=${eqVisitante[0].nombre}&escudo1=${eqLocal[0].escudo}&escudo2=${eqVisitante[0].escudo}&puntaje1=${puntajeLocal}&puntaje2=${puntajeVisitante}&deporte=${deporteElegido[0].imgCancha}&imgPartido=${imgPartido}&tipo=FinalPartido`, {\n            method: \"GET\",\n        }).then(response => response.json())\n            .then(r => {\n                console.log(r)\n                props.funcion(r.url)\n                setMensaje(\"Video creado con exito\")\n                setDuracion(2000)\n                setTipoMensaje(\"exito\")\n                setVisible(1)\n            })\n    }\n\n\n    return (\n        <div>\n            <Alerta tipo={tipoMensaje} mensaje={mensaje} visible={visible} funcion={setVisible} duracion={duracion} />\n            <Input type={\"text\"} funcion={setMomento} label={\"Momento del partido\"} />\n            <Input label={\"Deporte\"} defaultValue={\"Elige un deporte\"} type={\"select\"} opciones={deportes} funcion={buscarPorDeporte} />\n            <Input label={\"Equipo local\"} type={\"select\"} defaultValue={\"Elige un equipo\"} opciones={equiposFiltrados} funcion={guardarEqLocal} />\n            <Input label={\"Equipo visitante\"} type={\"select\"} defaultValue={\"Elige otro equipo\"} opciones={equiposFiltrados} funcion={guardarEqVisitante} />\n            <Input label={\"Puntaje local\"} type={\"text\"} funcion={guardarPuntajeLocal} />\n            <Input label={\"Puntaje visitante\"} type={\"text\"} funcion={guardarPuntajeVisitante} />\n            {<Input label={\"Foto del partido\"} funcion={subirFoto} type={\"file\"} />}\n            <button id=\"btn-render\" className=\"bg-orange py-3 px-8 rounded-3xl text-white text-base\" onClick={renderVideo} >Crear story</button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    url: state.url,\n    deportes: state.deportes\n})\n\n\n\nexport default connect(mapStateToProps)(FormFinalStory)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport NavbarAdmin from '../NavbarAdmin'\nimport Programa from './form/Programa'\nimport ReactPlayer from 'react-player'\nimport Input from '../../formComponents/Input'\nimport IntegranteStory from './IntegranteStory'\nimport Switch from '../../formComponents/Switch'\nimport FormIntegranteStory from './form/FormIntegranteStory'\nimport FormFinalStory from './form/FormFinalStory'\n\nconst StoriesContenedor = (props) => {\n\n\n\n\n    const [alturaForm, setAlturaForm] = useState(\"\")\n    const [tipoPosteo, setTipoPosteo] = useState(\"\")\n    const [video, setVideo] = useState(\"\")\n\n    useEffect(() => {\n        setTipoPosteo(\"equipo\")\n    }, [])\n\n    useEffect(() => {\n        var x = window.matchMedia(\"(max-width: 1023px)\")\n        let last = document.getElementById(\"finalStories\")\n        if (x.matches && tipoPosteo !== \"equipo\") {\n            setAlturaForm(last.offsetTop)\n        } else if (x.matches && tipoPosteo === \"equipo\") {\n            setAlturaForm(last.offsetTop - 1900)\n        }\n    }, [tipoPosteo])\n\n    useEffect(() => {\n        console.log(alturaForm)\n    }, [alturaForm])\n\n\n\n    return (\n        <div className=\"bg-black-50 overflow-hidden\" style={{ maxHeight: `${alturaForm}px` }}>\n            <div className=\"bg-black-50 w-screen overflow-hidden p-4  md:p-0 md:w-10/12 mx-auto pt-32 w-10/12 mx-auto\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"col-span-1\">\n                        <div className=\"mb-6 col-span-1\">\n                            <Input type={\"select\"} label={\"Tipo de Story\"} bgColor={\"grey\"} funcion={setTipoPosteo} opciones={[{ \"nombre\": \"Conocé al equipo\", \"_id\": \"equipo\" }, { \"nombre\": \"Próximo Programa\", \"_id\": \"programa\" }, { \"nombre\": \"Resultado Parcial o Final\", \"_id\": \"storyFinal\" }]} />\n                        </div>\n                        {\n                            (tipoPosteo === \"programa\") ?\n                                <Programa funcion={setVideo} /> :\n                                (tipoPosteo === \"equipo\") ?\n                                    <FormIntegranteStory />\n                                    : (tipoPosteo === \"storyFinal\") ?\n                                        <FormFinalStory funcion={setVideo} /> : \"\"\n                        }\n\n\n\n                    </div>\n                    <div className=\"col-span-1\">\n                        {(tipoPosteo === \"programa\" || tipoPosteo === \"storyFinal\") ?\n                            <ReactPlayer playing={true} volume={0} height=\"500px\" loop={true} url={video} className=\"mx-auto\" /> :\n                            (tipoPosteo === \"equipo\") ?\n                                <div>\n                                    <IntegranteStory setAlturaForm={setAlturaForm} />\n                                </div> : \"\"}\n\n                    </div>\n                    <div id=\"finalStories\"></div>\n\n                </div>\n            </div >\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    url: state.url,\n    usuarios: state.usuarios\n})\n\n\n\nexport default connect(mapStateToProps)(StoriesContenedor)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Input from '../formComponents/Input'\nimport { removeBackgroundFromImageUrl } from \"remove.bg\";\nimport Axios from 'axios'\nimport domtoimage from 'dom-to-image';\nimport Alerta from './Alerta'\n\nexport const Registro = (props) => {\n    let { url, fondos } = props\n\n\n    const [mensaje, setMensaje] = useState(\"\")\n    const [tipoMensaje, setTipoMensaje] = useState(\"\")\n    const [visible, setVisible] = useState(\"\")\n\n\n    const [user, setUser] = useState(\"\")\n    const [nombreCompleto, setNombreCompleto] = useState(\"\")\n    const [rol, setRol] = useState(\"\")\n    const [apodo, setApodo] = useState(\"\")\n    const [fondo, setFondo] = useState(\"\")\n    const [base64img, setBase64img] = useState(\"\")\n    const [avatar, setAvatar] = useState(\"\")\n\n    useEffect(() => {\n        console.log(avatar)\n\n        if (user !== \"\" && nombreCompleto !== \"\" && rol !== \"\" && apodo !== \"\" && fondo !== \"\" && avatar !== \"\") {\n            document.getElementById(\"btn-create\").disabled = false;\n            document.getElementById(\"btn-create\").style.opacity = \"1\";\n        } else {\n            document.getElementById(\"btn-create\").disabled = true;\n            document.getElementById(\"btn-create\").style.opacity = \"0.7\";\n        }\n    }, [user, nombreCompleto, rol, apodo, fondo, avatar])\n\n    const crearUsuario = () => {\n\n        setMensaje(\"Creando usuario...\")\n        setTipoMensaje(\"loading\")\n        setVisible(1)\n\n        let userNuevo = {\n            user: user,\n            pass: \"igualando\",\n            nombreCompleto: nombreCompleto,\n            rol: rol,\n            apodo: apodo,\n            avatar: avatar\n        }\n\n        fetch(`${url}/insertar`, {\n            method: \"POST\",\n            body: JSON.stringify(userNuevo),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(r => r.json())\n            .then(resp => {\n                console.log(resp);\n                setMensaje(\"Usuario creado con éxito\")\n                setTipoMensaje(\"exito\")\n                setVisible(1)\n                props.dispatch({ type: \"AGREGAR_USUARIO\", payload: resp });\n                props.cerrarPopupRegistro();\n            })\n\n    }\n\n    let subirFoto = (recibido) => {\n\n        setVisible(1);\n        setTipoMensaje(\"loading\")\n        setMensaje(\"Eliminando fondo de imagen\")\n        const file = recibido.target.files[0];\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"upload_preset\", \"fotosIntegrantes\")\n\n        Axios.post(\"https://api.cloudinary.com/v1_1/isita/image/upload\", formData).then((r) => {\n            console.log(r.data.url)\n            borrarFondo(r.data.url)\n        })\n    }\n\n    const borrarFondo = (imgUrl) => {\n        return new Promise((resolve, reject) => {\n\n            const url = imgUrl;\n            removeBackgroundFromImageUrl({\n                url,\n                apiKey: \"mPe1FAdtq8DKnhFnHgDT8VBi\",\n                size: \"regular\",\n                type: \"person\",\n            }).then((result) => {\n                setBase64img(result.base64img)\n                domtoimage.toJpeg(document.getElementById('avatar'), { quality: 0.95 })\n                    .then(function (dataUrl) {\n                        console.log(dataUrl)\n\n                        /*2. subir a cloudinary */\n                        const formData = new FormData();\n                        formData.append(\"file\", dataUrl);\n                        formData.append(\"upload_preset\", \"fotosIntegrantes\")\n                        Axios.post(\"https://api.cloudinary.com/v1_1/isita/image/upload\", formData).then((r) => {\n                            console.log(r.data.url)\n                            setAvatar(r.data.url)\n                            setMensaje(\"Avatar creado\")\n                            setTipoMensaje(\"exito\")\n                            setVisible(1)\n                        })\n                    })\n\n\n            }).catch((err) => {\n                console.log(JSON.stringify(err));\n                setMensaje(\"Hubo un error\")\n                setTipoMensaje(\"error\")\n                setVisible(1)\n            });\n        })\n\n    }\n\n    return (\n        <div className=\" left-0 fixed min-h-full w-full flex items-center jusitfy-center bg-black bg-opacity-60 \" style={{ zIndex: '99999' }}>\n            <div className=\"w-11/12 md:w-8/12 mx-auto bg-black-50 p-12 pt-6 h-auto rounded-xl\">\n                <div className=\"w-full flex justify-end\"><button className=\"group\" onClick={(e) => { props.cerrarPopupRegistro() }} >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n                </div>\n                <div className=\"grid-cols-1 grid lg:grid-cols-2\">\n                    <div className=\"grid-colspan-1\">\n                        <Alerta tipo={tipoMensaje} mensaje={mensaje} visible={visible} funcion={setVisible} duracion={3000} />\n                        <h2 className=\"font-body font-semibold text-2xl mb-2\" >Agregar Usuario</h2>\n                        <Input type={\"text\"} label={\"Nombre de Usuario\"} funcion={setUser} />\n                        <Input type={\"text\"} label={\"Nombre Completo\"} funcion={setNombreCompleto} />\n                        <Input type={\"text\"} label={\"Rol\"} funcion={setRol} />\n                        <Input type={\"text\"} label={\"Apodo\"} funcion={setApodo} />\n\n                        <p className=\"font-body text-md\">Elegí un fondo para el avatar</p>\n                        <div className=\"flex flex-wrap mb-4\">\n\n                            {fondos.map(fondo => <img className=\"imgFondo h-14 w-14 m-2 md:h-20 md:w-20\" onClick={(e) => {\n                                let imagenes = document.getElementsByClassName(\"imgFondo\");\n                                for (let i = 0; i < imagenes.length; i++) {\n                                    imagenes[i].classList.remove(\"border-orange\");\n                                    imagenes[i].classList.remove(\"border-2\");\n                                }\n                                e.target.classList.add(\"border-orange\")\n                                e.target.classList.add(\"border-2\")\n                                setFondo(e.target.src)\n                            }} style={{ borderRadius: '100%' }} key={fondo.id} data-id={fondo.id} src={fondo.src} />)}\n                        </div>\n                        <Input type={\"file\"} label={\"Foto del Avatar\"} funcion={subirFoto} />\n                        <button className=\" w-full md:w-auto  bg-orange py-2 px-4 rounded-3xl text-white text-base\" id=\"btn-create\" onClick={crearUsuario}>Crear usuario </button>\n                    </div>\n\n                    <div className=\"hidden lg:block lg:grid-colspan-1 pl-24\">\n                        <div id=\"avatar\" style={{ width: '300px', height: '300px', borderRadius: '100%', background: `url(${fondo}) center center /cover` }}>\n                            <div style={{ width: '300px', height: '300px', borderRadius: '100%', background: `url(data:image/png;base64,${base64img}) center center/contain no-repeat` }}></div>\n                        </div></div>\n                </div>\n            </div>\n        </div >\n\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    url: state.url,\n    fondos: state.fondos,\n    fotoSinFondo: state.fotoSinFondo\n\n})\n\n\nexport default connect(mapStateToProps)(Registro)\n","import React from 'react'\n\nconst BtnMostrar = (props) => {\n    let { usuario } = props\n    return (\n        <button className=\"group flex items-center ml-4\" onClick={(e) => { props.funcion(e.target.dataset.id) }} data-accion=\"borrar\" data-id={usuario._id} >\n            <svg style={{ pointerEvents: \"none\" }} xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-black text-opacity-70 group-hover:text-opacity-100\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n            </svg>\n            <span style={{ pointerEvents: \"none\" }} className=\"hidden md:inline  text-sm ml-2 text-black text-opacity-70 group-hover:text-opacity-100\"> Mostrar </span>\n        </button>\n    )\n}\n\nexport default BtnMostrar\n","import React from 'react'\n\nconst BtnOcultar = (props) => {\n    let { usuario } = props\n    return (\n        <button className=\"group flex items-center ml-4\" onClick={(e) => { props.funcion(e.target.dataset.id) }} data-accion=\"borrar\" data-id={usuario._id} >\n            <svg style={{ pointerEvents: \"none\" }} xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-black text-opacity-70 group-hover:text-opacity-100\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\n            </svg>\n            <span style={{ pointerEvents: \"none\" }} className=\"hidden md:inline text-sm ml-2 text-black text-opacity-70 group-hover:text-opacity-100\"> Ocultar </span>\n        </button>\n    )\n\n}\n\nexport default BtnOcultar\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport BtnMostrar from './BtnMostrar'\nimport BtnOcultar from './BtnOcultar'\n\nconst TablaUsuarios = (props) => {\n\n    let { url, usuarios } = props\n\n    console.log(usuarios)\n\n\n\n    const mostrarUsuario = (recibido) => {\n        console.log(recibido)\n        let usuarioModificar = { _id: recibido }\n        fetch(`${url}/mostrarUsuario`, {\n            method: \"PUT\",\n            body: JSON.stringify(usuarioModificar),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(r => r.json()).then(r => {\n            console.log(r)\n            props.dispatch({ type: \"MOSTRAR_USUARIO\", payload: r });\n        }\n        )\n\n    }\n\n    const ocultarUsuario = (recibido) => {\n        console.log(recibido)\n        let usuarioModificar = { _id: recibido }\n        fetch(`${url}/ocultarUsuario`, {\n            method: \"PUT\",\n            body: JSON.stringify(usuarioModificar),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(r => r.json()).then(r => {\n            console.log(r)\n            props.dispatch({ type: \"OCULTAR_USUARIO\", payload: r });\n        }\n        )\n\n    }\n\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                <div className=\"w-full py-2 align-middle inline-block  sm:px-6 lg:px-8\">\n                    <div className=\"w-full shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                        <table className=\" table-auto break-words w-full divide-y divide-black-50\">\n                            <thead className=\"bg-white w-full\">\n                                <tr className=\"w-full\">\n                                    <th scope=\"col\" className=\"text-xs px-6 py-3 text-left  font-body font-semibold text-black uppercase tracking-wider w-full\"   >\n                                        Nombre  </th>\n                                    <th scope=\"col\"\n                                        className=\"hidden md:table-cell text-xs px-6 py-3 text-center  font-body  font-semibold text-black uppercase tracking-wider w-full  \" >\n                                        Rol  </th>\n                                    <th scope=\"col\" className=\"text-xs px-6 py-3 text-center  font-body  font-semibold text-black uppercase tracking-wider w-full \"  >\n                                        Acciones     </th>\n\n                                </tr>\n                            </thead>\n                            <tbody className=\"w-full bg-white \">\n                                {usuarios.map((usuario) =>\n                                    <tr key={usuario._id} className=\"border-b border-black-50\" >\n\n                                        <td className=\"px-6 py-4 text-sm font-medium text-black text-opacity-70 w-auto flex items-center\">   <div style={{ width: '30px', height: '30px', borderRadius: '100%', background: `url(${usuario.avatar}) center center`, backgroundSize: '32px 32px', marginRight: '4px' }}  ></div>{usuario.nombreCompleto}</td>\n                                        <td className=\"hidden md:table-cell px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center overflow-hidden \">{usuario.rol}</td>\n                                        <td className=\"px-6 py-4 text-sm text-gray-500 text-center  overflow-hidden flex items-center justify-center\">\n                                            <button className=\"group flex items-center\" onClick={(e) => { props.abrirPopup(e) }} data-accion=\"borrar\" data-id={usuario._id} data-nombre={usuario.nombreCompleto}><svg style={{ pointerEvents: \"none\" }} xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-black mx-auto text-opacity-60 group-hover:text-opacity-100\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                                            </svg> <span style={{ pointerEvents: \"none\" }} className=\"hidden md:inline  text-sm ml-2\"> Eliminar </span>\n                                            </button>\n                                            {usuario.visible === true ? <BtnOcultar funcion={ocultarUsuario} usuario={usuario} /> : <BtnMostrar funcion={mostrarUsuario} usuario={usuario} />}\n\n\n                                        </td>\n\n                                    </tr>\n                                )}\n                                <tr>\n                                    <td style={{ cursor: 'pointer' }} onClick={(e) => { props.setPopupRegistro(true) }} className=\"px-10 py-4 whitespace-nowrap text-base font-regular text-orange text-opacity-100 hover:text-opacity-80  overflow-hidden flex items-center\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ pointerEvents: \"none\" }} className=\"h-6 w-6 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                        </svg> Agregar usuario</td>\n                                    <td></td>\n                                    <td></td>\n                                </tr>\n\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    usuarios: state.usuarios,\n    url: state.url\n})\n\n\n\nexport default connect(mapStateToProps)(TablaUsuarios)\n","import React from 'react'\n\nconst Popup = (props) => {\n    console.log(props)\n    return (\n        <div className=\" left-0 fixed h-full w-full flex items-center jusitfy-center z-50 bg-black bg-opacity-60\">\n            <div className=\"w-10/12 mx-auto bg-white text-black md:w-96  top-20  rounded-md shadow-md p-8 text-center\">\n                <h2 className=\"font-body font-semibold text-lg mb-4\">Borrar album</h2>\n                <p className=\"opacity-70 text-base\">Estas por borrar  <span className=\"font-semibold\">\"{props.nombreBorrar}\"</span>¿Deseas continuar?</p>\n                <div className=\"flex flex-row justify-between mt-4\">\n                    <button className=\"mx-1 flex-1 text-center block md:inline-block bg-white border border-orange py-3 px-8 rounded-3xl text-orange text-base hover:border-orangelight hover:text-orangelight transition-all\" onClick={props.cerrarPopup}>Cancelar</button>\n                    <button className=\" mx-1 flex-1 text-center block md:inline-block bg-orange py-3 px-8 rounded-3xl text-white text-base hover:bg-orangelight transition-all\" onClick={(e) => { props.borrarAlbum(e) }} data-id={props.idBorrar}>Borrar</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Popup\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport Registro from './Registro'\nimport TablaUsuarios from './TablaUsuarios'\nimport Popup from './posteos/Popup'\nimport Alerta from './Alerta'\n\nexport const GestionarUsuarios = (props) => {\n\n    let { url } = props;\n\n    const [mensaje, setMensaje] = useState(\"\")\n    const [tipoMensaje, setTipoMensaje] = useState(\"\")\n    const [popup, setPopup] = useState(false)\n    const [popupRegistro, setPopupRegistro] = useState(false)\n    const [visible, setVisible] = useState(\"\")\n    const [idBorrar, setIdBorrar] = useState(\"\")\n    const [nombreBorrar, setNombreBorrar] = useState(\"\")\n\n\n\n\n    const borrarUsuario = (recibido) => {\n        let idBorrar = recibido.target.dataset.id;\n        fetch(`${url}/eliminarUsuario`, {\n            method: \"DELETE\",\n            body: JSON.stringify({ idBorrar: idBorrar }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(r => r.json())\n            .then(usuario => {\n                /* console.log(usuario); */\n                props.dispatch({ type: \"ELIMINAR_USUARIO\", payload: usuario });\n                cerrarPopup();\n                setMensaje(\"Usuario eliminado con éxito\")\n                setTipoMensaje(\"exito\")\n                setVisible(1)\n\n            })\n    }\n\n    const abrirPopup = (recibido) => {\n        /*   console.log(recibido.target.dataset) */\n        setIdBorrar(recibido.target.dataset.id)\n        setNombreBorrar(recibido.target.dataset.nombre)\n        setPopup(true)\n\n\n    }\n\n    const cerrarPopup = () => {\n        setPopup(false)\n    }\n\n    const cerrarPopupRegistro = () => {\n        setPopupRegistro(false)\n    }\n\n\n\n    return (\n        <div>\n\n            {(popup !== false) ?\n                < Popup className={`${popup}`} borrarAlbum={borrarUsuario} idBorrar={idBorrar} nombreBorrar={nombreBorrar} cerrarPopup={cerrarPopup} />\n                : \"\"}\n\n            {(popupRegistro !== false) ?\n                < Registro cerrarPopupRegistro={cerrarPopupRegistro} />\n                : \"\"}\n\n\n\n            <div className=\"w-full p-4  md:p-0 md:w-10/12 mx-auto pt-24 md:pt-32 w-10/12 mx-auto \">\n                <div className=\"grid grid-cols-1  gap-12\">\n\n                    <div className=\"col-span-1\">\n                        <h2 className=\"font-body font-semibold text-2xl mb-2\" >Usuarios</h2>\n\n\n\n                        <TablaUsuarios abrirPopup={abrirPopup} setPopupRegistro={setPopupRegistro} />\n                        {/*    <button className=\" mt-4 w-full md:w-auto  bg-orange py-2 px-4 rounded-3xl text-white text-base\" onClick={() => setPopupRegistro(true)}>Agregar usuario </button> */}\n\n                    </div>\n\n                </div>\n            </div>\n            <Alerta tipo={tipoMensaje} mensaje={mensaje} visible={visible} funcion={setVisible} duracion={2000} />\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    url: state.url\n})\n\n\nexport default connect(mapStateToProps)(GestionarUsuarios)\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Tabla = (props) => {\n\n    let albums = props.albums\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                <div className=\"w-full py-2 align-middle inline-block  sm:px-6 lg:px-8\">\n                    <div className=\"w-full shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                        <table className=\" table-fixed break-words w-full divide-y divide-black-50\">\n                            <thead className=\"bg-white w-full\">\n                                <tr className=\"w-full\">\n                                    <th scope=\"col\" className=\"text-xs px-6 py-3 text-left  font-body font-semibold text-black uppercase tracking-wider w-2/3 md:w-1/2\"   >\n                                        Título  </th>\n                                    <th scope=\"col\"\n                                        className=\"hidden md:table-cell text-xs px-6 py-3 text-center  font-body  font-semibold text-black uppercase tracking-wider  md:w-1/4\" >\n                                        Fotos   </th>\n                                    <th scope=\"col\" className=\"text-xs px-6 py-3 text-center  font-body  font-semibold text-black uppercase tracking-wider w-1/3 md:w-1/4\"  >\n                                        Acciones     </th>\n\n                                </tr>\n                            </thead>\n                            <tbody className=\"w-full bg-white\">\n                                {albums.map((album) =>\n                                    <tr key={album._id} className=\"border-b border-black-50\">\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black text-opacity-70 hover:text-opacity-90  overflow-hidden\"><NavLink to={{ pathname: '/ampliacion', aboutProps: { album: album } }}>{album.titulo}</NavLink></td>\n                                        <td className=\"hidden md:table-cell px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center overflow-hidden \">{album.fotos.length}</td>\n                                        <td className=\"px-6 py-4  text-sm text-gray-500 text-center  \">\n                                            <button className=\"group flex items-center justify-center mx-auto\" onClick={(e) => { props.abrirPopup(e) }} data-id={album._id} data-titulo={album.titulo}><svg style={{ pointerEvents: \"none\" }} xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-black mx-auto text-opacity-60 group-hover:text-opacity-100\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                                            </svg><span style={{ pointerEvents: \"none\" }} className=\"hidden md:inline text-sm ml-2 text-black text-opacity-70 group-hover:text-opacity-100\"> Eliminar </span>\n                                            </button> </td>\n\n                                    </tr>\n                                )}\n                                <tr>\n                                    <td style={{ cursor: 'pointer' }} onClick={(e) => { props.setPopupAlbum(true) }} className=\"px-10 py-4 whitespace-nowrap text-base font-regular text-orange text-opacity-100 hover:text-opacity-80  overflow-hidden flex items-center\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ pointerEvents: \"none\" }} className=\"h-6 w-6 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                        </svg> Agregar album</td>\n                                    <td></td>\n                                    <td></td>\n                                </tr>\n\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\n\n\nexport default (Tabla)\n\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport Tabla from './Tabla'\nimport Popup from './posteos/Popup'\nimport Alerta from './Alerta'\nimport SubirAlbum from './SubirAlbum'\n\nconst GestionarGaleria = (props) => {\n\n    let { albums, url } = props;\n\n    const [popupAlbum, setPopupAlbum] = useState(false)\n\n    const [popup, setPopup] = useState(false)\n    const [albumElegidoId, setAlbumElegidoId] = useState(\"\")\n    const [albumElegidoNombre, setAlbumElegidoNombre] = useState(\"\")\n\n    const [visible, setVisible] = useState(0)\n    const [tipoMensaje, setTipoMensaje] = useState(0)\n    const [mensaje, setMensaje] = useState(\"\")\n\n    const abrirPopup = (recibido) => {\n        console.log(recibido.target.dataset)\n        setAlbumElegidoId(recibido.target.dataset.id)\n        setAlbumElegidoNombre(recibido.target.dataset.titulo)\n        setPopup(true)\n    }\n\n    const cerrarPopup = () => {\n        setPopup(false)\n    }\n\n    const borrarAlbum = (recibido) => {\n        let idBorrar = recibido.target.dataset.id;\n        fetch(`${url}/eliminarAlbum`, {\n            method: \"DELETE\",\n            body: JSON.stringify({ idBorrar: idBorrar }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(r => r.json())\n            .then(album => {\n                console.log(album);\n                props.dispatch({ type: \"ELIMINAR_ALBUM\", payload: album });\n                cerrarPopup();\n                setMensaje(\"Album eliminado con éxito\")\n                setTipoMensaje(\"exito\")\n                setVisible(1)\n\n            })\n    }\n\n\n    return (\n        <div>\n            {(popupAlbum !== false) ?\n                <SubirAlbum setPopupAlbum={setPopupAlbum} setMensaje={setMensaje} setTipoMensaje={setTipoMensaje} setVisible={setVisible} /> : null\n            }\n            {(popup !== false) ?\n                < Popup className={`${popup}`} borrarAlbum={borrarAlbum} idBorrar={albumElegidoId} nombreBorrar={albumElegidoNombre} cerrarPopup={cerrarPopup} />\n                : \"\"}\n            <div className=\"w-full p-4  md:p-0 md:w-10/12 mx-auto pt-32 md:pt-32 w-10/12 mx-auto \">\n                <div className=\"grid grid-cols-1  gap-12\">\n\n                    <div className=\"col-span-1\">\n                        <h2 className=\"font-body font-semibold text-2xl mb-2\" >Álbumes</h2>\n\n\n\n                        <Tabla abrirPopup={abrirPopup} albums={albums} setPopupAlbum={setPopupAlbum} />\n                        {/*    <button className=\" mt-4 w-full md:w-auto  bg-orange py-2 px-4 rounded-3xl text-white text-base\" onClick={() => setPopupRegistro(true)}>Agregar usuario </button> */}\n\n                    </div>\n\n                </div>\n            </div>\n            <Alerta tipo={tipoMensaje} mensaje={mensaje} visible={visible} funcion={setVisible} duracion={2000} />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    albums: state.albums,\n    url: state.url,\n    deportes: state.deportes\n})\n\n\nexport default connect(mapStateToProps)(GestionarGaleria)\n","import React, { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Sidebar = (props) => {\n\n    let paginaSeleccionada;\n    useEffect(() => {\n        if (props.paginaSeleccionada === undefined) {\n            paginaSeleccionada = \"nuevoPosteo\"\n        } else {\n            paginaSeleccionada = props.paginaSeleccionada\n        }\n\n        let links = document.getElementsByClassName(\"navlink\");\n\n        for (let i = 0; i < links.length; i++) {\n            links[i].classList.remove(\"bg-black-900\");\n            links[i].classList.remove(\"text-white\");\n            links[i].classList.add(\"text-black-600\");\n\n        }\n        let elegido = document.getElementById(paginaSeleccionada);\n        elegido.classList.add(\"bg-black-900\")\n        elegido.classList.remove(\"text-black-600\")\n        elegido.classList.add(\"text-white\")\n\n\n    }, [props.paginaSeleccionada])\n\n    return (\n        <div className=\"h-full bg-black pt-32 flex flex-col px-4\">\n            <NavLink id=\"nuevoPosteo\" className=\"navlink text-white font-regular font-body hover:opacity-70 transition-all  rounded-md mx-4 my-2 px-4  pr-10 py-2 flex\" to={{ pathname: \"/admin\", aboutProps: \"nuevoPosteo\" }}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>Nuevo Posteo</NavLink>\n            <NavLink id=\"nuestraGaleria\" className=\"navlink  text-white font-regular font-body hover:opacity-70 transition-all rounded-md mx-4 my-2 px-4  pr-10 py-2 flex\" to={{ pathname: \"/admin\", aboutProps: \"nuestraGaleria\" }}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" />\n                </svg>Nuestra Galería</NavLink>\n            <NavLink id=\"editarDatos\" className=\"navlink  text-white font-regular font-body hover:opacity-70 transition-all flex rounded-md mx-4 my-2 px-4 pr-10  py-2\" to={{ pathname: \"/admin\", aboutProps: \"editarDatos\" }}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                </svg>Editar Datos</NavLink>\n            <NavLink id=\"nuevaStory\" className=\"navlink  text-white font-regular font-body hover:opacity-70 transition-all rounded-md mx-4 my-2 px-4  pr-10 py-2 flex\" to={{ pathname: \"/admin\", aboutProps: \"nuevaStory\" }}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M7 4v16M17 4v16M3 8h4m10 0h4M3 12h18M3 16h4m10 0h4M4 20h16a1 1 0 001-1V5a1 1 0 00-1-1H4a1 1 0 00-1 1v14a1 1 0 001 1z\" />\n                </svg>Nueva Story</NavLink>\n            <NavLink id=\"gestionarUsuarios\" className=\"navlink  text-white font-regular font-body hover:opacity-70 transition-all rounded-md mx-4 my-2 px-4 pr-10  py-2 flex\" to={{ pathname: \"/admin\", aboutProps: \"gestionarUsuarios\" }}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n                </svg>  Usuarios</NavLink>\n            <NavLink to={{ pathname: \"/\" }} className=\"bg-orange py-3 rounded-3xl text-white text-center m-2 mt-8 text-base\">Ir al sitio</NavLink>\n        </div>\n    )\n}\n\nexport default (Sidebar)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport NavbarAdmin from './NavbarAdmin'\nimport PosteosContenedor from './posteos/PosteosContenedor'\nimport EditarContenido from './EditarContenido'\nimport Login from './Login'\nimport StoriesContenedor from './stories/StoriesContenedor'\nimport GestionarUsuarios from './GestionarUsuarios'\nimport GestionarGaleria from './GestionarGaleria'\nimport Sidebar from './Sidebar'\n\nconst Admin = (props) => {\n\n    let pagina = props.location.aboutProps;\n\n    let usuarioLogueado = props.usuarioLogueado;\n\n    return (\n        <div>\n            {(usuarioLogueado === \"\") ?\n                <Login /> :\n                <div>\n                    <NavbarAdmin />\n                    <div className=\"bg-black-50\">\n                        <div className=\"hidden col-span-0 lg:block lg:col-span-2 h-screen fixed\">\n                            <Sidebar paginaSeleccionada={pagina} />\n                        </div>\n\n                        <div className=\"pl-0 lg:pl-60 w-full min-h-screen\">\n                            {(pagina === \"nuestraGaleria\") ?\n                                <GestionarGaleria /> :\n                                (pagina === \"editarDatos\") ?\n                                    <EditarContenido /> :\n                                    (pagina === \"nuevaStory\") ?\n                                        <StoriesContenedor /> :\n                                        (pagina === \"gestionarUsuarios\") ?\n                                            <GestionarUsuarios /> :\n                                            <PosteosContenedor />\n                            }\n                        </div>\n                    </div>\n\n\n                </div>\n\n            }\n            {/*  <IntegranteStory integrante={\"61de177df900c63ba93c6693\"} /> */}\n\n\n        </div >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    usuarioLogueado: state.usuarioLogueado\n})\n\nexport default connect(mapStateToProps)(Admin)\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Pagina404 = () => {\n    return (\n        <div className=\"w-screen h-screen bg-black flex flex-col items-center justify-center relative\">\n            <svg className=\"absolute top-0 right-0 w-9/12 lg:w-auto\" xmlns=\"http://www.w3.org/2000/svg\" width=\"773\" height=\"173\" viewBox=\"0 0 773 173\" fill=\"none\">\n                <path d=\"M136.283 170.565L135.236 171.613L136.283 172.66L137.33 171.613L136.283 170.565ZM52.981 87.2638L51.9339 88.3109L51.9339 88.3109L52.981 87.2638ZM186.264 120.584L187.311 121.632L188.358 120.584L187.311 119.537L186.264 120.584ZM102.962 37.2827L101.915 36.2356L100.868 37.2827L101.915 38.3299L102.962 37.2827ZM186.264 -46.0189L187.311 -44.9718L188.358 -46.0189L187.311 -47.0661L186.264 -46.0189ZM136.283 -96L137.33 -97.0471L136.283 -98.0943L135.236 -97.0471L136.283 -96ZM52.981 -12.6983L51.9339 -13.7455L51.9339 -13.7455L52.981 -12.6983ZM3.00001 37.2827L1.95284 36.2355L0.90567 37.2827L1.95284 38.3299L3.00001 37.2827ZM137.33 169.518L54.0282 86.2166L51.9339 88.3109L135.236 171.613L137.33 169.518ZM185.217 119.537L135.236 169.518L137.33 171.613L187.311 121.632L185.217 119.537ZM101.915 38.3299L185.217 121.632L187.311 119.537L104.009 36.2356L101.915 38.3299ZM104.009 38.3299L187.311 -44.9718L185.217 -47.0661L101.915 36.2356L104.009 38.3299ZM187.311 -47.0661L137.33 -97.0471L135.236 -94.9528L185.217 -44.9718L187.311 -47.0661ZM135.236 -97.0471L51.9339 -13.7455L54.0282 -11.6511L137.33 -94.9528L135.236 -97.0471ZM51.9339 -13.7455L1.95284 36.2355L4.04717 38.3299L54.0282 -11.6511L51.9339 -13.7455ZM54.0282 86.2166L4.04717 36.2355L1.95284 38.3299L51.9339 88.3109L54.0282 86.2166Z\" fill=\"#FFFCFA\" />\n                <path d=\"M355.088 170.565L354.041 171.613L355.088 172.66L356.136 171.613L355.088 170.565ZM271.787 87.2638L270.74 88.3109L270.74 88.3109L271.787 87.2638ZM405.069 120.584L406.117 121.632L407.164 120.584L406.117 119.537L405.069 120.584ZM321.768 37.2827L320.721 36.2356L319.673 37.2827L320.721 38.3299L321.768 37.2827ZM405.069 -46.0189L406.117 -44.9718L407.164 -46.0189L406.117 -47.0661L405.069 -46.0189ZM355.088 -96L356.136 -97.0471L355.088 -98.0943L354.041 -97.0471L355.088 -96ZM271.787 -12.6983L270.74 -13.7455L270.74 -13.7455L271.787 -12.6983ZM221.806 37.2827L220.759 36.2355L220.216 36.7777L220.346 37.5333L221.806 37.2827ZM221.806 37.2827L220.346 37.5334L220.426 37.9972L220.759 38.3299L221.806 37.2827ZM356.136 169.518L272.834 86.2166L270.74 88.3109L354.041 171.613L356.136 169.518ZM404.022 119.537L354.041 169.518L356.136 171.613L406.117 121.632L404.022 119.537ZM320.721 38.3299L404.022 121.632L406.117 119.537L322.815 36.2356L320.721 38.3299ZM322.815 38.3299L406.117 -44.9718L404.022 -47.0661L320.721 36.2356L322.815 38.3299ZM406.117 -47.0661L356.136 -97.0471L354.041 -94.9528L404.022 -44.9718L406.117 -47.0661ZM354.041 -97.0471L270.74 -13.7455L272.834 -11.6511L356.136 -94.9528L354.041 -97.0471ZM222.853 38.3299L272.834 -11.6511L270.74 -13.7455L220.759 36.2355L222.853 38.3299ZM223.265 37.0321L223.265 37.0321L220.346 37.5333L220.346 37.5334L223.265 37.0321ZM272.834 86.2166L222.853 36.2356L220.759 38.3299L270.74 88.3109L272.834 86.2166Z\" fill=\"#FFFCFA\" />\n                <path d=\"M573.895 170.565L572.848 171.613L573.895 172.66L574.942 171.613L573.895 170.565ZM490.593 87.2638L489.546 88.3109L489.546 88.3109L490.593 87.2638ZM623.876 120.584L624.923 121.632L625.97 120.584L624.923 119.537L623.876 120.584ZM540.574 37.2827L539.527 36.2356L538.48 37.2827L539.527 38.3299L540.574 37.2827ZM623.876 -46.0189L624.923 -44.9718L625.97 -46.0189L624.923 -47.0661L623.876 -46.0189ZM573.895 -96L574.942 -97.0471L573.895 -98.0943L572.848 -97.0471L573.895 -96ZM490.593 -12.6983L489.546 -13.7455L489.546 -13.7455L490.593 -12.6983ZM440.612 37.2827L439.565 36.2355L439.023 36.7777L439.153 37.5333L440.612 37.2827ZM440.612 37.2827L439.153 37.5334L439.232 37.9972L439.565 38.3299L440.612 37.2827ZM574.942 169.518L491.641 86.2166L489.546 88.3109L572.848 171.613L574.942 169.518ZM622.829 119.537L572.848 169.518L574.942 171.613L624.923 121.632L622.829 119.537ZM539.527 38.3299L622.829 121.632L624.923 119.537L541.622 36.2356L539.527 38.3299ZM541.622 38.3299L624.923 -44.9718L622.829 -47.0661L539.527 36.2356L541.622 38.3299ZM624.923 -47.0661L574.942 -97.0471L572.848 -94.9528L622.829 -44.9718L624.923 -47.0661ZM572.848 -97.0471L489.546 -13.7455L491.641 -11.6511L574.942 -94.9528L572.848 -97.0471ZM441.659 38.3299L491.641 -11.6511L489.546 -13.7455L439.565 36.2355L441.659 38.3299ZM442.072 37.0321L442.072 37.0321L439.153 37.5333L439.153 37.5334L442.072 37.0321ZM491.641 86.2166L441.659 36.2356L439.565 38.3299L489.546 88.3109L491.641 86.2166Z\" fill=\"#FFFCFA\" />\n                <path d=\"M792.7 170.565L791.653 171.613L792.7 172.66L793.747 171.613L792.7 170.565ZM709.398 87.2638L708.351 88.3109L708.351 88.3109L709.398 87.2638ZM842.681 120.584L843.728 121.632L844.775 120.584L843.728 119.537L842.681 120.584ZM759.379 37.2827L758.332 36.2356L757.285 37.2827L758.332 38.3299L759.379 37.2827ZM842.681 -46.0189L843.728 -44.9718L844.775 -46.0189L843.728 -47.0661L842.681 -46.0189ZM792.7 -96L793.747 -97.0471L792.7 -98.0943L791.653 -97.0471L792.7 -96ZM709.398 -12.6983L708.351 -13.7455L708.351 -13.7455L709.398 -12.6983ZM659.417 37.2827L658.37 36.2355L657.828 36.7777L657.957 37.5333L659.417 37.2827ZM659.417 37.2827L657.957 37.5334L658.037 37.9972L658.37 38.3299L659.417 37.2827ZM793.747 169.518L710.445 86.2166L708.351 88.3109L791.653 171.613L793.747 169.518ZM841.634 119.537L791.653 169.518L793.747 171.613L843.728 121.632L841.634 119.537ZM758.332 38.3299L841.634 121.632L843.728 119.537L760.426 36.2356L758.332 38.3299ZM760.426 38.3299L843.728 -44.9718L841.634 -47.0661L758.332 36.2356L760.426 38.3299ZM843.728 -47.0661L793.747 -97.0471L791.653 -94.9528L841.634 -44.9718L843.728 -47.0661ZM791.653 -97.0471L708.351 -13.7455L710.445 -11.6511L793.747 -94.9528L791.653 -97.0471ZM660.464 38.3299L710.445 -11.6511L708.351 -13.7455L658.37 36.2355L660.464 38.3299ZM660.877 37.0321L660.877 37.0321L657.957 37.5333L657.957 37.5334L660.877 37.0321ZM710.445 86.2166L660.464 36.2356L658.37 38.3299L708.351 88.3109L710.445 86.2166Z\" fill=\"#FFFCFA\" />\n            </svg>\n            <svg className=\"absolute bottom-0 left-0 w-9/12 lg:w-auto\" xmlns=\"http://www.w3.org/2000/svg\" width=\"847\" height=\"150\" viewBox=\"0 0 847 150\" fill=\"none\">\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M798.094 199.203C807.955 184.922 814.837 161.755 811.852 128.249L843.936 125.39C847.408 164.359 839.762 195.549 824.6 217.506C809.367 239.567 786.852 251.639 763.32 251.639C739.789 251.639 717.274 239.567 702.041 217.506C686.879 195.549 679.233 164.359 682.705 125.39C685.69 91.8835 678.808 68.7165 668.947 54.4356C659.158 40.2592 646.157 34.2116 634.173 34.2116C622.189 34.2116 609.189 40.2592 599.4 54.4356C589.539 68.7165 582.656 91.8835 585.642 125.39C589.114 164.359 581.467 195.549 566.306 217.506C551.072 239.567 528.558 251.639 505.026 251.639C481.494 251.639 458.98 239.567 443.746 217.506C428.585 195.549 420.938 164.359 424.41 125.39C427.396 91.8835 420.513 68.7164 410.652 54.4356C400.863 40.2592 387.863 34.2116 375.879 34.2116C363.895 34.2116 350.894 40.2592 341.105 54.4356C331.244 68.7164 324.362 91.8834 327.347 125.39C330.819 164.359 323.173 195.549 308.011 217.506C292.778 239.567 270.263 251.639 246.732 251.639C223.2 251.639 200.685 239.567 185.452 217.506C170.29 195.549 162.644 164.359 166.116 125.39C169.101 91.8834 162.219 68.7164 152.358 54.4356C142.569 40.2592 129.568 34.2115 117.584 34.2115C105.6 34.2115 92.5996 40.2592 82.8109 54.4356C72.9499 68.7164 66.0675 91.8834 69.0528 125.39C72.5248 164.359 64.8782 195.549 49.7169 217.506C34.4834 239.567 11.9687 251.639 -11.563 251.639C-35.0946 251.639 -57.6093 239.567 -72.8428 217.506C-88.0041 195.549 -95.6507 164.359 -92.1787 125.39C-89.1934 91.8834 -96.0758 68.7164 -105.937 54.4355C-115.726 40.2591 -128.726 34.2115 -140.71 34.2115C-152.694 34.2115 -165.695 40.2591 -175.484 54.4355C-185.344 68.7164 -192.227 91.8834 -189.242 125.39C-185.77 164.359 -193.416 195.549 -208.578 217.506C-223.811 239.567 -246.326 251.639 -269.857 251.639C-293.389 251.639 -315.904 239.567 -331.137 217.506C-346.299 195.549 -353.945 164.359 -350.473 125.39C-347.488 91.8834 -354.37 68.7164 -364.231 54.4355C-374.02 40.2591 -387.021 34.2115 -399.005 34.2115C-410.988 34.2115 -423.989 40.2591 -433.778 54.4355C-443.639 68.7164 -450.521 91.8834 -447.536 125.39L-479.62 128.249C-483.092 89.2796 -475.446 58.0898 -460.284 36.1328C-445.051 14.0714 -422.536 2.00009 -399.005 2.00009C-375.473 2.00009 -352.958 14.0714 -337.725 36.1329C-322.563 58.0898 -314.917 89.2796 -318.389 128.249C-321.374 161.755 -314.492 184.922 -304.631 199.203C-294.842 213.38 -281.841 219.427 -269.857 219.427C-257.874 219.427 -244.873 213.38 -235.084 199.203C-225.223 184.922 -218.341 161.755 -221.326 128.249C-224.798 89.2796 -217.151 58.0898 -201.99 36.1329C-186.757 14.0714 -164.242 2.00011 -140.71 2.00011C-117.178 2.00011 -94.6638 14.0714 -79.4303 36.1329C-64.2691 58.0899 -56.6224 89.2796 -60.0944 128.249C-63.0798 161.755 -56.1974 184.922 -46.3364 199.203C-36.5476 213.38 -23.5468 219.427 -11.563 219.427C0.420894 219.427 13.4217 213.38 23.2105 199.203C33.0715 184.922 39.9538 161.755 36.9685 128.249C33.4965 89.2796 41.1432 58.0899 56.3045 36.1329C71.5379 14.0714 94.0526 2.00013 117.584 2.00013C141.116 2.00013 163.631 14.0715 178.864 36.1329C194.025 58.0899 201.672 89.2796 198.2 128.249C195.215 161.755 202.097 184.922 211.958 199.203C221.747 213.38 234.748 219.427 246.732 219.427C258.715 219.427 271.716 213.38 281.505 199.203C291.366 184.922 298.248 161.755 295.263 128.249C291.791 89.2796 299.438 58.0899 314.599 36.1329C329.832 14.0715 352.347 2.00015 375.879 2.00015C399.41 2.00016 421.925 14.0715 437.159 36.1329C452.32 58.0899 459.967 89.2797 456.495 128.249C453.509 161.755 460.392 184.922 470.253 199.203C480.041 213.38 493.042 219.427 505.026 219.427C517.01 219.427 530.011 213.38 539.799 199.203C549.66 184.922 556.543 161.755 553.557 128.249C550.085 89.2797 557.732 58.0899 572.893 36.1329C588.127 14.0715 610.642 2.00018 634.173 2.00018C657.705 2.00018 680.22 14.0715 695.453 36.1329C710.614 58.0899 718.261 89.2797 714.789 128.249C711.804 161.755 718.686 184.922 728.547 199.203C738.336 213.38 751.337 219.427 763.32 219.427C775.304 219.427 788.305 213.38 798.094 199.203Z\" stroke=\"#F06F46\" strokeWidth=\"2.68428\" />\n            </svg>\n            <h1 className=\"font-title text-white text-hero md:text-super-hero m-0 p-0 leading-none\" >404</h1>\n            <h2 className=\"font-body text-lg md:text-3xl text-white m-0 p-0\">Upss...algo salió mal.</h2>\n            <NavLink to={{ pathname: \"/\" }} className=\"bg-orange px-8 py-3 rounded-3xl text-white text-center m-2 mt-8 text-lg\">Volver al sitio</NavLink>\n        </div>\n    )\n}\n\nexport default Pagina404\n","import React, { useEffect } from 'react'\nimport Home from './client/Home'\nimport Galeria from './client/Galeria'\nimport Ampliacion from './client/Ampliacion'\nimport { Route, Switch } from 'react-router-dom'\nimport EditarContenido from './admin/EditarContenido'\nimport SubirAlbum from './admin/SubirAlbum'\nimport AmpliacionFoto from './client/AmpliacionFoto'\nimport PosteosContenedor from './admin/posteos/PosteosContenedor'\nimport Login from './admin/Login'\nimport Admin from './admin/Admin'\nimport Registro from './admin/Registro'\nimport { connect } from 'react-redux'\nimport Pagina404 from './Pagina404'\n\nconst Contenedor = (props) => {\n    let { url } = props\n    useEffect(() => {\n        fetch(`${url}/listarAlbums`, {\n            method: \"GET\",\n        }).then(r => r.json())\n            .then(r => {\n                props.dispatch({\n                    type: \"LISTAR_ALBUMS\", payload: r\n                });\n                fetch(`${url}/listarDeportes`, {\n                    method: \"GET\",\n                }).then(r => r.json())\n                    .then(r => {\n                        props.dispatch({\n                            type: \"LISTAR_DEPORTES\", payload: r\n                        });\n                        fetch(`${url}/listarUsuarios`, {\n                            method: \"GET\",\n                        }).then(r => r.json())\n                            .then(r => {\n                                props.dispatch({\n                                    type: \"LISTAR_USUARIOS\", payload: r\n                                });\n\n                            })\n\n                    })\n\n            })\n    }, [])\n\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/galeria\" component={Galeria} />\n                <Route path=\"/ampliacion\" component={Ampliacion} />\n                <Route path=\"/ampliacionFoto\" component={AmpliacionFoto} />\n                <Route path=\"/admin\" component={Admin} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/admin/actualizar\" component={EditarContenido} />\n                <Route path=\"/admin/subir\" component={SubirAlbum} />\n                <Route path=\"/admin/nuevoposteo\" component={PosteosContenedor} />\n                <Route path=\"/registro\" component={Registro} />\n                <Route component={Pagina404} />\n            </Switch>\n\n\n\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    url: state.url\n})\n\n\nexport default connect(mapStateToProps)(Contenedor)","import React from 'react'\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport { store } from './store/store'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { HashRouter } from 'react-router-dom'\nimport Contenedor from './components/Contenedor'\n\n\nconst App = () => {\n\n\n  return (\n    <Provider store={store} >\n      <HashRouter>\n        <Contenedor />\n      </HashRouter>\n    </Provider >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}